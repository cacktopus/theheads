body {
  font-size: 14px;
}

.App {
  text-align: center;
}

.App-logo {
  animation: App-logo-spin infinite 20s linear;
  height: 40vmin;
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}

/* Menu */
.Menu {
  z-index: 20;
  /* Higher than the Scene */
  position: relative;
  background: #EEE;
  padding-bottom: 10px;
  border-bottom: 1px solid black;
  padding: 30px 10px 10px 60px;

  /* padding-left: 60px; */
  /* 30px + 10px */
}

.Menu-zoomer {
  position: fixed;
  z-index: 1;
  top: 0;
  left: 0;
  width: 25px;
  height: 100%;
  background: grey;
  bottom: 0;
  /* padding: 20px 5px; */
  box-sizing: border-box;
}

/* Hide this because we don't need it */
.Menu-zoomer .rc-slider-mark {
  display: none;
}

.Menu-zoomer .Menu-zoomer-scale .rc-slider-handle {
  border-color: #006e80;
}

.Menu-zoomer .Menu-zoomer-scale .rc-slider-track {
  background-color: #006e80;
}

.Menu-zoomer .Menu-zoomer-scale,
.Menu-zoomer .Menu-zoomer-translateY {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  box-sizing: border-box;
  height: 100%;
  width: 25px;
  background: grey;
  padding: 15px 5px;
}

.Menu-zoomer .Menu-zoomer-translateY {
  left: 25px;
}

.Menu-zoomer .Menu-zoomer-translateX {
  position: absolute;
  top: 0;
  left: 50px;
  width: calc(100vw - 50px);
  height: 25px;
  background: grey;
  padding: 5px;
  box-sizing: border-box;
}

.Menu label,
.Menu-form-label {
  display: inline-block;
  margin-right: 10px;
  min-width: 40px;
  font-size: 14px;
}

.Menu-section {
  float: left;
  padding-left: 5px;
  padding-right: 5px;
}

.Menu-bigButton {
  display: inline-block;
  padding: 20px;
  border: 1px solid black;
  cursor: pointer;
  box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.5);
}

.Menu-form-posType-X,
.Menu-form-posType-Y {
  width: 60px;
}

/* Stand */
.Stand {
  position: absolute;
  opacity: 0.25;

  /* width: 100px;
  height: 100px;
  transform: translate(0px,0px);
  border: 1px solid black;
  background : grey; */
}

.Stand-octagon {
  box-sizing: border-box;
  width: 100px;
  height: 100px;
  background: #6a6a6a;
  position: relative;
  border-right: 5px solid blue;
  cursor: pointer;
}

.Stand-octagon:before {
  /* display: none; */
  box-sizing: border-box;
  content: "";
  width: 100px;
  height: 0;
  position: absolute;
  top: 0;
  left: 0;
  border-bottom: 29px solid #6a6a6a;
  border-left: 29px solid #fff;
  border-right: 29px solid #fff;
}

.Stand-octagon:after {
  /* display: none; */
  box-sizing: border-box;
  content: "";
  width: 100px;
  height: 0;
  position: absolute;
  bottom: 0;
  left: 0;
  border-top: 29px solid #6a6a6a;
  border-left: 29px solid #fff;
  border-right: 29px solid #fff;
}

.Stand--selected .Stand-octagon {
  background: #a52a79;
  border-right: 5px solid #3333EE;
}

.Stand--selected .Stand-octagon:before {
  border-bottom-color: #a52a79;
}

.Stand--selected .Stand-octagon:after {
  border-top-color: #a52a79;
}

.Stand--active {
  opacity: 1;
}

.Stand--selected {
  z-index: 10;
}

/* Same height / width of Stand-container */
.Stand-rotateContainer {
  width: 100px;
  height: 100px;
  /* Use this so the origin is in the center */
  margin-left: -50px;
  margin-top: -50px;
}

.Stand-container {
  position: absolute;
  width: 100px;
  height: 100px;
  transform: translate(0px, 0px);
  /* border: 5px solid #444; */
  /* background: #999; */
  /* border-right: 5px solid blue; */
}

.Stand--selected .Stand-container {
  /* border: 5px solid #f25; */
  /* border-right: 5px solid blue; */
}

.Stand-name {
  /* position: absolute;
  top: -20px;
  transform: rotate(-90deg) translate(-70px,-60px); Transform them to the top */
  position: absolute;
  top: 0;
  -webkit-transform: rotate(-90deg) translate(-38px, -80px);
  transform: rotate(-90deg) translate(-38px, -80px);
  left: 1px;
  width: 120px;
}

.Stand-remove {
  position: absolute;
  bottom: 0;
  left: 0;
  cursor: pointer;
  border: 1px solid black;
}

/* .Stand-select {
  position: absolute;
  right: 0;
  top: 0;
  cursor: pointer;
  border: 1px solid black;
} */


.Stand-info {
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  border: 1px solid black;
  cursor: pointer;
}

.PopupInfo {
  position: absolute;
  min-width: 160px;
  /* height: 190px; */
  top: 0;
  left: 0;
  background: white;
  border: 1px solid black;
  border-radius: 10px;
  z-index: 99;
  overflow: hidden;
  /* display: block;
  position: absolute;
  top: 0;
  left: 0;
  border: 1px solid black;
  cursor: pointer; */
}

.PopupInfo-closeButton {
  position: absolute;
  /* bottom: 0;
  left: 0; */
  top: 0;
  right: 0;
  cursor: pointer;
  border: 1px solid black;
  padding: 5px;
}


.Stand-move {
  position: absolute;
  right: 0;
  bottom: 0;
  cursor: move;
  border: 1px solid black;
}

.Stand-rotate {
  position: absolute;
  top: 50%;
  left: 50%;
}

/* .Stand-rotate-offset {
  position: absolute;
  left: -120px;
  bottom: -20px;
  background-color: blue;
  width: 10px;
  height: 10px;
} */

.Stand-rotate-handle {
  width: 40px;
  height: 40px;
  background-color: blue;
  border-radius: 50%;
  position: relative;
  top: 0;
  left: 0;
  /* transform: translate(-10px, -10px); */
  border: 1px solid black;
  cursor: alias;
  margin-left: -45px;
  margin-top: -20px;
  /* top: -100px; */
  left: 100px;

  /* width: 40px;
  height: 40px;
  background-color: blue;
  border-radius: 50%;
  position: relative;
  top: 0;
  left: 0;
  border: 1px solid black;
  cursor: alias; */
}

.Stand-head,
.Stand-camera {
  position: relative;
}


/* ANCHORS */
.Anchors {
  position: absolute;
}

.Anchor {
  position: absolute;

}

.Anchor-container {
  width: 50px;
  height: 50px;
  margin-left: -25px;
  margin-top: -25px;

  border-radius: 50%;
  background: #222;
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;

}

/* ANCHOR DISTANCES */
.AnchorDistances {
  position: relative;
}

.AnchorDistance, 
.AnchorDistance-text,
.AnchorDistance-text-span {
  z-index: 20;
}
.AnchorDistance {
  position: absolute;
  height: 0;
  border: 1px solid #ff6c6c;
  transform-origin: 0;
  text-align: center;
}


.AnchorDistance-text {
  height: 0px;
}

.AnchorDistance-text-span {
  background: white;
  padding: 2px;
  margin-top: -5px;
  height: 0px;
  z-index: 9999;
}

.AnchorDistance-text--flipped {
  transform: rotate(180deg);
}

/* HEADS */
.Head {
  width: 80px;
  position: absolute;
  top: 15px;
  height: 68px;
  left: 50%;
  margin-left: -40px;
}

.Head-rotateContainer {
  position: absolute;
  top: 0;
  left: 0;
  border-radius: 50%;
  border: 1px solid #840d00;
}

.Head-rotateContainer,
.Head-container {
  width: 100%;
  height: 100%;
  cursor: pointer;
}


.Head-img {
  width: 100%;
  height: 100%;
}

.Head-rotate {
  position: absolute;
  top: 50%;
  left: 50%;
}

/* .Stand-rotate-offset {
  position: absolute;
  left: -120px;
  bottom: -20px;
  background-color: blue;
  width: 10px;
  height: 10px;
} */

.Head-rotate-handle {
  width: 40px;
  height: 40px;
  background-color: #840d00;
  border-radius: 50%;
  position: relative;
  top: 0;
  left: 0;
  /* transform: translate(-10px, -10px); */
  border: 1px solid black;
  cursor: alias;
  margin-left: -5px;
  margin-top: -20px;
  /* top: -100px; */
  left: 100px;

  /* width: 40px;
  height: 40px;
  background-color: blue;
  border-radius: 50%;
  position: relative;
  top: 0;
  left: 0;
  border: 1px solid black;
  cursor: alias; */
}


/* CAMERAS */
.Camera {

  /* width: 80px;
  position: absolute;
  top: 15px;
  height: 68px;
  left: 50%;
  margin-left: -40px; */

  position: absolute;
  width: 0;
  height: 0;
  top: 50%;
  left: 50%;
  margin-left: -5px;
  /* To make camera centered, via 1/2 size of camImg */
  margin-top: -10px;
  /* To make camera centered, via 1/2 size of camImg */
}

.Camera-rotateContainer {
  position: relative;
  /* top: -10px;
  left: -5px; */
  /* border-radius: 50%;
  border: 1px solid #840d00; */
}

.Camera-rotateContainer,
.Camera-container {
  /* width: 100%;
  height: 100%; */
}

.Camera-camImg {
  position: relative;
  height: 20px;
  width: 10px;
  background-color: green;
  cursor: pointer;
}

.Camera--selected .Camera-camImg {
  border: 2px solid #f25;
  margin-left: -2px;
  margin-top: -2px;
}

.Camera-camImg:after {
  content: '';
  position: absolute;
  height: 10px;
  width: 3px;
  background-color: black;
  top: 5px;
  right: -2px;
}


.Camera-img {
  width: 100%;
  height: 100%;
}

.Camera-rotate {
  position: absolute;
  top: 50%;
  left: 50%;
}

/* .Stand-rotate-offset {
  position: absolute;
  left: -120px;
  bottom: -20px;
  background-color: blue;
  width: 10px;
  height: 10px;
} */

.Camera-rotate {
  z-index: 10;
}

.Camera-rotate-handle {
  width: 40px;
  height: 40px;
  background-color: GREEN;
  /*#840d00;*/
  border-radius: 50%;
  position: relative;
  top: 0;
  left: 0;
  /* transform: translate(-10px, -10px); */
  border: 1px solid black;
  cursor: alias;
  margin-left: -60px;
  margin-top: -20px;
  /* top: -100px; */
  left: 100px;

  /* width: 40px;
  height: 40px;
  background-color: blue;
  border-radius: 50%;
  position: relative;
  top: 0;
  left: 0;
  border: 1px solid black;
  cursor: alias; */
}

.Camera--selected .Camera-rotate-handle {
  border: 1px solid #f25;
}


/* KINECTS */
.Kinect {

  /* width: 80px;
  position: absolute;
  top: 15px;
  height: 68px;
  left: 50%;
  margin-left: -40px; */

  position: absolute;
  width: 0;
  height: 0;
  top: 50%;
  left: 50%;
  margin-left: -5px;
  /* To make kinect centered, via 1/2 size of camImg */
  margin-top: -10px;
  /* To make kinect centered, via 1/2 size of camImg */
}

.Kinect-rotateContainer {
  position: relative;
  /* top: -10px;
  left: -5px; */
  /* border-radius: 50%;
  border: 1px solid #840d00; */
}

.Kinect-rotateContainer,
.Kinect-container {
  /* width: 100%;
  height: 100%; */
}

.Kinect-camImg {
  position: absolute;
  height: 30px;
  width: 20px;
  margin-top: -15px;
  margin-left: -20px;
  background-color: rgb(130,0,200);
  cursor: pointer;
}

.Kinect--selected .Kinect-camImg {
  border: 2px solid rgb(200,0,250);
  margin-left: -2px;
  margin-top: -2px;
}

.Kinect-camImg:after {
  content: '';
  position: absolute;
  height: 20px;
  width: 3px;
  background-color: black;
  top: 5px;
  right: -2px;
}


.Kinect-img {
  width: 100%;
  height: 100%;
}

.Kinect-rotate {
  position: absolute;
  top: 50%;
  left: 50%;
}

/* .Stand-rotate-offset {
  position: absolute;
  left: -120px;
  bottom: -20px;
  background-color: blue;
  width: 10px;
  height: 10px;
} */

.Kinect-rotate {
  z-index: 10;
}

.Kinect-rotate-handle {
  width: 40px;
  height: 40px;
  background-color: rgb(130,0,200);
  /*#840d00;*/
  border-radius: 50%;
  position: relative;
  top: 0;
  left: 0;
  /* transform: translate(-10px, -10px); */
  border: 1px solid black;
  cursor: alias;
  margin-left: -60px;
  margin-top: -20px;
  /* top: -100px; */
  left: 100px;

  /* width: 40px;
  height: 40px;
  background-color: blue;
  border-radius: 50%;
  position: relative;
  top: 0;
  left: 0;
  border: 1px solid black;
  cursor: alias; */
}

.Kinect--selected .Kinect-rotate-handle {
  border: 1px solid #f25;
}


/* .Kinects {
  position: absolute;
  top: 0;
  left: 0;
}

.Kinect {


  position: absolute;
  width: 0;
  height: 0;
  top: 50%;
  left: 50%;
  margin-left: -5px;
  margin-top: -10px;
}

.Kinect-rotateContainer {
  position: relative;
}

.Kinect-rotateContainer,
.Kinect-container {
}

.Kinect-camImg {
  position: relative;
  height: 20px;
  width: 10px;
  background-color: green;
  cursor: pointer;
}

.Kinect--selected .Kinect-camImg {
  border: 2px solid #f25;
  margin-left: -2px;
  margin-top: -2px;
}

.Kinect-camImg:after {
  content: '';
  position: absolute;
  height: 10px;
  width: 3px;
  background-color: black;
  top: 5px;
  right: -2px;
}


.Kinect-img {
  width: 100%;
  height: 100%;
}

.Kinect-rotate {
  position: absolute;
  top: 50%;
  left: 50%;
}


.Kinect-rotate {
  z-index: 10;
}

.Kinect-rotate-handle {
  width: 40px;
  height: 40px;
  background-color: GREEN;
  border-radius: 50%;
  position: relative;
  top: 0;
  left: 0;
  border: 1px solid black;
  cursor: alias;
  margin-left: -60px;
  margin-top: -20px;
  left: 100px;

}

.Kinect--selected .Kinect-rotate-handle {
  border: 1px solid #f25;
}
*/

/* .Stand-rotate-offset {
  position: absolute;
  left: -120px;
  bottom: -20px;
  background-color: blue;
  width: 10px;
  height: 10px;
} */

/* Focal Point */
.FocalPoint {
  text-align: center;
  position: absolute;
}

.FocalPoint-move-handle {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 40px;
  height: 40px;
  background-color: #7f848e;
  /*#840d00;*/
  border-radius: 50%;
  position: relative;
  top: 0;
  left: 0;
  /* transform: translate(-10px, -10px); */
  border: 1px solid black;
  cursor: move;
  margin-left: -20px;
  margin-top: -20px;
  /* top: -100px; */
  color: white !important;
}

/* .KinectFocalPoint */

.KinectFocalPoints {
  position: absolute;
}

.KinectFocalPoint {
  position: absolute;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 40px;
  height: 40px;
  background-color: #8200c8;
  /*#840d00;*/
  border-radius: 50%;
  
  top: 0;
  left: 0;
  /* transform: translate(-10px, -10px); */
  border: 1px solid black;
  /* cursor: pointer; */
  margin-left: -20px;
  margin-top: -20px;
  /* top: -100px; */
  color: white !important;
}

/* Motion Lines */
.GridLines {
  position: absolute;
  top: 0;
  transform-origin: top center;
}

.GridLines table {
  border-collapse: collapse;
  width: 100%;
  height: 100%;
}

.GridLines table td {
  border: 2px solid #efefef
}

.GridLines table td.GridLines-td--thickRight {
  border-right: 2px solid #300!important;
}

.GridLines table td.GridLines-td--thickBottom {
  border-bottom: 2px solid #300!important;
}

/* Motion Lines */
.MotionLine {
  opacity: 1;
  /* -webkit-transition: opacity 1500ms;
  transition: opacity 1500ms; */
}

.MotionLine.fadeOut {
  animation-name: fadeOutMotionLine;
  animation-duration: 200ms;
  /* NOTE: this 1500ms should be the same value as what's in ./middleware/index.js => customWebsocketMiddleware, for the setTimeout duration of the removal for the MotionLine */
}

@keyframes fadeOutMotionLine {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

/* UTILS */
.noselect {
  -webkit-touch-callout: none;
  /* iOS Safari */
  -webkit-user-select: none;
  /* Safari */
  -khtml-user-select: none;
  /* Konqueror HTML */
  -moz-user-select: none;
  /* Firefox */
  -ms-user-select: none;
  /* Internet Explorer/Edge */
  user-select: none;
  /* Non-prefixed version, currently
                                  supported by Chrome and Opera */
}