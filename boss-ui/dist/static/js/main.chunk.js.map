{"version":3,"file":"static/js/main.chunk.js","sources":["/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/App.css","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/index.css","webpack:///./src/App.css?da7c","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/App.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/actions/index.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/components/Camera.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/components/Cameras.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/components/FocalPoint.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/components/FocalPoints.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/components/GridLines.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/components/Head.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/components/Heads.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/components/Kinect.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/components/Kinects.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/components/Menu.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/components/MotionLine.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/components/MotionLines.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/components/PopupInfo.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/components/Scene.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/components/Stand.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/components/UnderVisuals.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/containers/Camera.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/containers/FocalPoint.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/containers/FocalPoints.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/containers/GridLines.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/containers/Head.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/containers/Kinect.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/containers/Menu.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/containers/MotionLine.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/containers/MotionLines.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/containers/PopupInfo.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/containers/Scene.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/containers/Stand.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/containers/UnderVisuals.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/helpers/index.js","webpack:///./src/index.css?02e3","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/index.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/middleware/index.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/reducers/focalPoints.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/reducers/index.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/reducers/kinectFocalPoints.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/reducers/menu.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/reducers/motionLines.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/reducers/stands.js","/Users/aj/Work/code/heads/heads2/heads/boss-ui/src/serviceWorker.js"],"sourcesContent":["exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"body {\\n  font-size: 14px;\\n}\\n\\n.App {\\n  text-align: center;\\n}\\n\\n.App-logo {\\n  -webkit-animation: App-logo-spin infinite 20s linear;\\n          animation: App-logo-spin infinite 20s linear;\\n  height: 40vmin;\\n}\\n\\n.App-header {\\n  background-color: #282c34;\\n  min-height: 100vh;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: calc(10px + 2vmin);\\n  color: white;\\n}\\n\\n.App-link {\\n  color: #61dafb;\\n}\\n\\n@-webkit-keyframes App-logo-spin {\\n  from {\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg);\\n  }\\n\\n  to {\\n    -webkit-transform: rotate(360deg);\\n            transform: rotate(360deg);\\n  }\\n}\\n\\n@keyframes App-logo-spin {\\n  from {\\n    -webkit-transform: rotate(0deg);\\n            transform: rotate(0deg);\\n  }\\n\\n  to {\\n    -webkit-transform: rotate(360deg);\\n            transform: rotate(360deg);\\n  }\\n}\\n\\n/* Menu */\\n.Menu {\\n  z-index: 20;\\n  /* Higher than the Scene */\\n  position: relative;\\n  background: #EEE;\\n  padding-bottom: 10px;\\n  border-bottom: 1px solid black;\\n  padding: 30px 10px 10px 60px;\\n\\n  /* padding-left: 60px; */\\n  /* 30px + 10px */\\n}\\n\\n.Menu-zoomer {\\n  position: fixed;\\n  z-index: 1;\\n  top: 0;\\n  left: 0;\\n  width: 25px;\\n  height: 100%;\\n  background: grey;\\n  bottom: 0;\\n  /* padding: 20px 5px; */\\n  box-sizing: border-box;\\n}\\n\\n/* Hide this because we don't need it */\\n.Menu-zoomer .rc-slider-mark {\\n  display: none;\\n}\\n\\n.Menu-zoomer .Menu-zoomer-scale .rc-slider-handle {\\n  border-color: #006e80;\\n}\\n\\n.Menu-zoomer .Menu-zoomer-scale .rc-slider-track {\\n  background-color: #006e80;\\n}\\n\\n.Menu-zoomer .Menu-zoomer-scale,\\n.Menu-zoomer .Menu-zoomer-translateY {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  bottom: 0;\\n  box-sizing: border-box;\\n  height: 100%;\\n  width: 25px;\\n  background: grey;\\n  padding: 15px 5px;\\n}\\n\\n.Menu-zoomer .Menu-zoomer-translateY {\\n  left: 25px;\\n}\\n\\n.Menu-zoomer .Menu-zoomer-translateX {\\n  position: absolute;\\n  top: 0;\\n  left: 50px;\\n  width: calc(100vw - 50px);\\n  height: 25px;\\n  background: grey;\\n  padding: 5px;\\n  box-sizing: border-box;\\n}\\n\\n.Menu label,\\n.Menu-form-label {\\n  display: inline-block;\\n  margin-right: 10px;\\n  min-width: 40px;\\n  font-size: 14px;\\n}\\n\\n.Menu-section {\\n  float: left;\\n  padding-left: 5px;\\n  padding-right: 5px;\\n}\\n\\n.Menu-bigButton {\\n  display: inline-block;\\n  padding: 20px;\\n  border: 1px solid black;\\n  cursor: pointer;\\n  box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.5);\\n}\\n\\n.Menu-form-posType-X,\\n.Menu-form-posType-Y {\\n  width: 60px;\\n}\\n\\n/* Stand */\\n.Stand {\\n  position: absolute;\\n  opacity: 0.25;\\n\\n  /* width: 100px;\\n  height: 100px;\\n  transform: translate(0px,0px);\\n  border: 1px solid black;\\n  background : grey; */\\n}\\n\\n.Stand-octagon {\\n  box-sizing: border-box;\\n  width: 100px;\\n  height: 100px;\\n  background: #6a6a6a;\\n  position: relative;\\n  border-right: 5px solid blue;\\n  cursor: pointer;\\n}\\n\\n.Stand-octagon:before {\\n  /* display: none; */\\n  box-sizing: border-box;\\n  content: \\\"\\\";\\n  width: 100px;\\n  height: 0;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  border-bottom: 29px solid #6a6a6a;\\n  border-left: 29px solid #fff;\\n  border-right: 29px solid #fff;\\n}\\n\\n.Stand-octagon:after {\\n  /* display: none; */\\n  box-sizing: border-box;\\n  content: \\\"\\\";\\n  width: 100px;\\n  height: 0;\\n  position: absolute;\\n  bottom: 0;\\n  left: 0;\\n  border-top: 29px solid #6a6a6a;\\n  border-left: 29px solid #fff;\\n  border-right: 29px solid #fff;\\n}\\n\\n.Stand--selected .Stand-octagon {\\n  background: #a52a79;\\n  border-right: 5px solid #3333EE;\\n}\\n\\n.Stand--selected .Stand-octagon:before {\\n  border-bottom-color: #a52a79;\\n}\\n\\n.Stand--selected .Stand-octagon:after {\\n  border-top-color: #a52a79;\\n}\\n\\n.Stand--active {\\n  opacity: 1;\\n}\\n\\n.Stand--selected {\\n  z-index: 10;\\n}\\n\\n/* Same height / width of Stand-container */\\n.Stand-rotateContainer {\\n  width: 100px;\\n  height: 100px;\\n  /* Use this so the origin is in the center */\\n  margin-left: -50px;\\n  margin-top: -50px;\\n}\\n\\n.Stand-container {\\n  position: absolute;\\n  width: 100px;\\n  height: 100px;\\n  -webkit-transform: translate(0px, 0px);\\n          transform: translate(0px, 0px);\\n  /* border: 5px solid #444; */\\n  /* background: #999; */\\n  /* border-right: 5px solid blue; */\\n}\\n\\n.Stand--selected .Stand-container {\\n  /* border: 5px solid #f25; */\\n  /* border-right: 5px solid blue; */\\n}\\n\\n.Stand-name {\\n  /* position: absolute;\\n  top: -20px;\\n  transform: rotate(-90deg) translate(-70px,-60px); Transform them to the top */\\n  position: absolute;\\n  top: 0;\\n  -webkit-transform: rotate(-90deg) translate(-38px, -80px);\\n  transform: rotate(-90deg) translate(-38px, -80px);\\n  left: 1px;\\n  width: 120px;\\n}\\n\\n.Stand-remove {\\n  position: absolute;\\n  bottom: 0;\\n  left: 0;\\n  cursor: pointer;\\n  border: 1px solid black;\\n}\\n\\n/* .Stand-select {\\n  position: absolute;\\n  right: 0;\\n  top: 0;\\n  cursor: pointer;\\n  border: 1px solid black;\\n} */\\n\\n\\n.Stand-info {\\n  display: block;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  border: 1px solid black;\\n  cursor: pointer;\\n}\\n\\n.PopupInfo {\\n  position: absolute;\\n  min-width: 160px;\\n  /* height: 190px; */\\n  top: 0;\\n  left: 0;\\n  background: white;\\n  border: 1px solid black;\\n  border-radius: 10px;\\n  z-index: 99;\\n  overflow: hidden;\\n  /* display: block;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  border: 1px solid black;\\n  cursor: pointer; */\\n}\\n\\n.PopupInfo-closeButton {\\n  position: absolute;\\n  /* bottom: 0;\\n  left: 0; */\\n  top: 0;\\n  right: 0;\\n  cursor: pointer;\\n  border: 1px solid black;\\n  padding: 5px;\\n}\\n\\n\\n.Stand-move {\\n  position: absolute;\\n  right: 0;\\n  bottom: 0;\\n  cursor: move;\\n  border: 1px solid black;\\n}\\n\\n.Stand-rotate {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n}\\n\\n/* .Stand-rotate-offset {\\n  position: absolute;\\n  left: -120px;\\n  bottom: -20px;\\n  background-color: blue;\\n  width: 10px;\\n  height: 10px;\\n} */\\n\\n.Stand-rotate-handle {\\n  width: 40px;\\n  height: 40px;\\n  background-color: blue;\\n  border-radius: 50%;\\n  position: relative;\\n  top: 0;\\n  left: 0;\\n  /* transform: translate(-10px, -10px); */\\n  border: 1px solid black;\\n  cursor: alias;\\n  margin-left: -45px;\\n  margin-top: -20px;\\n  /* top: -100px; */\\n  left: 100px;\\n\\n  /* width: 40px;\\n  height: 40px;\\n  background-color: blue;\\n  border-radius: 50%;\\n  position: relative;\\n  top: 0;\\n  left: 0;\\n  border: 1px solid black;\\n  cursor: alias; */\\n}\\n\\n.Stand-head,\\n.Stand-camera {\\n  position: relative;\\n}\\n\\n/* HEADS */\\n.Head {\\n  width: 80px;\\n  position: absolute;\\n  top: 15px;\\n  height: 68px;\\n  left: 50%;\\n  margin-left: -40px;\\n}\\n\\n.Head-rotateContainer {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  border-radius: 50%;\\n  border: 1px solid #840d00;\\n}\\n\\n.Head-rotateContainer,\\n.Head-container {\\n  width: 100%;\\n  height: 100%;\\n  cursor: pointer;\\n}\\n\\n\\n.Head-img {\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.Head-rotate {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n}\\n\\n/* .Stand-rotate-offset {\\n  position: absolute;\\n  left: -120px;\\n  bottom: -20px;\\n  background-color: blue;\\n  width: 10px;\\n  height: 10px;\\n} */\\n\\n.Head-rotate-handle {\\n  width: 40px;\\n  height: 40px;\\n  background-color: #840d00;\\n  border-radius: 50%;\\n  position: relative;\\n  top: 0;\\n  left: 0;\\n  /* transform: translate(-10px, -10px); */\\n  border: 1px solid black;\\n  cursor: alias;\\n  margin-left: -5px;\\n  margin-top: -20px;\\n  /* top: -100px; */\\n  left: 100px;\\n\\n  /* width: 40px;\\n  height: 40px;\\n  background-color: blue;\\n  border-radius: 50%;\\n  position: relative;\\n  top: 0;\\n  left: 0;\\n  border: 1px solid black;\\n  cursor: alias; */\\n}\\n\\n\\n/* CAMERAS */\\n.Camera {\\n\\n  /* width: 80px;\\n  position: absolute;\\n  top: 15px;\\n  height: 68px;\\n  left: 50%;\\n  margin-left: -40px; */\\n\\n  position: absolute;\\n  width: 0;\\n  height: 0;\\n  top: 50%;\\n  left: 50%;\\n  margin-left: -5px;\\n  /* To make camera centered, via 1/2 size of camImg */\\n  margin-top: -10px;\\n  /* To make camera centered, via 1/2 size of camImg */\\n}\\n\\n.Camera-rotateContainer {\\n  position: relative;\\n  /* top: -10px;\\n  left: -5px; */\\n  /* border-radius: 50%;\\n  border: 1px solid #840d00; */\\n}\\n\\n.Camera-rotateContainer,\\n.Camera-container {\\n  /* width: 100%;\\n  height: 100%; */\\n}\\n\\n.Camera-camImg {\\n  position: relative;\\n  height: 20px;\\n  width: 10px;\\n  background-color: green;\\n  cursor: pointer;\\n}\\n\\n.Camera--selected .Camera-camImg {\\n  border: 2px solid #f25;\\n  margin-left: -2px;\\n  margin-top: -2px;\\n}\\n\\n.Camera-camImg:after {\\n  content: '';\\n  position: absolute;\\n  height: 10px;\\n  width: 3px;\\n  background-color: black;\\n  top: 5px;\\n  right: -2px;\\n}\\n\\n\\n.Camera-img {\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.Camera-rotate {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n}\\n\\n/* .Stand-rotate-offset {\\n  position: absolute;\\n  left: -120px;\\n  bottom: -20px;\\n  background-color: blue;\\n  width: 10px;\\n  height: 10px;\\n} */\\n\\n.Camera-rotate {\\n  z-index: 10;\\n}\\n\\n.Camera-rotate-handle {\\n  width: 40px;\\n  height: 40px;\\n  background-color: GREEN;\\n  /*#840d00;*/\\n  border-radius: 50%;\\n  position: relative;\\n  top: 0;\\n  left: 0;\\n  /* transform: translate(-10px, -10px); */\\n  border: 1px solid black;\\n  cursor: alias;\\n  margin-left: -60px;\\n  margin-top: -20px;\\n  /* top: -100px; */\\n  left: 100px;\\n\\n  /* width: 40px;\\n  height: 40px;\\n  background-color: blue;\\n  border-radius: 50%;\\n  position: relative;\\n  top: 0;\\n  left: 0;\\n  border: 1px solid black;\\n  cursor: alias; */\\n}\\n\\n.Camera--selected .Camera-rotate-handle {\\n  border: 1px solid #f25;\\n}\\n\\n\\n/* KINECTS */\\n.Kinect {\\n\\n  /* width: 80px;\\n  position: absolute;\\n  top: 15px;\\n  height: 68px;\\n  left: 50%;\\n  margin-left: -40px; */\\n\\n  position: absolute;\\n  width: 0;\\n  height: 0;\\n  top: 50%;\\n  left: 50%;\\n  margin-left: -5px;\\n  /* To make kinect centered, via 1/2 size of camImg */\\n  margin-top: -10px;\\n  /* To make kinect centered, via 1/2 size of camImg */\\n}\\n\\n.Kinect-rotateContainer {\\n  position: relative;\\n  /* top: -10px;\\n  left: -5px; */\\n  /* border-radius: 50%;\\n  border: 1px solid #840d00; */\\n}\\n\\n.Kinect-rotateContainer,\\n.Kinect-container {\\n  /* width: 100%;\\n  height: 100%; */\\n}\\n\\n.Kinect-camImg {\\n  position: absolute;\\n  height: 30px;\\n  width: 20px;\\n  margin-top: -15px;\\n  margin-left: -20px;\\n  background-color: rgb(130,0,200);\\n  cursor: pointer;\\n}\\n\\n.Kinect--selected .Kinect-camImg {\\n  border: 2px solid rgb(200,0,250);\\n  margin-left: -2px;\\n  margin-top: -2px;\\n}\\n\\n.Kinect-camImg:after {\\n  content: '';\\n  position: absolute;\\n  height: 20px;\\n  width: 3px;\\n  background-color: black;\\n  top: 5px;\\n  right: -2px;\\n}\\n\\n\\n.Kinect-img {\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.Kinect-rotate {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n}\\n\\n/* .Stand-rotate-offset {\\n  position: absolute;\\n  left: -120px;\\n  bottom: -20px;\\n  background-color: blue;\\n  width: 10px;\\n  height: 10px;\\n} */\\n\\n.Kinect-rotate {\\n  z-index: 10;\\n}\\n\\n.Kinect-rotate-handle {\\n  width: 40px;\\n  height: 40px;\\n  background-color: rgb(130,0,200);\\n  /*#840d00;*/\\n  border-radius: 50%;\\n  position: relative;\\n  top: 0;\\n  left: 0;\\n  /* transform: translate(-10px, -10px); */\\n  border: 1px solid black;\\n  cursor: alias;\\n  margin-left: -60px;\\n  margin-top: -20px;\\n  /* top: -100px; */\\n  left: 100px;\\n\\n  /* width: 40px;\\n  height: 40px;\\n  background-color: blue;\\n  border-radius: 50%;\\n  position: relative;\\n  top: 0;\\n  left: 0;\\n  border: 1px solid black;\\n  cursor: alias; */\\n}\\n\\n.Kinect--selected .Kinect-rotate-handle {\\n  border: 1px solid #f25;\\n}\\n\\n\\n/* .Kinects {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n}\\n\\n.Kinect {\\n\\n\\n  position: absolute;\\n  width: 0;\\n  height: 0;\\n  top: 50%;\\n  left: 50%;\\n  margin-left: -5px;\\n  margin-top: -10px;\\n}\\n\\n.Kinect-rotateContainer {\\n  position: relative;\\n}\\n\\n.Kinect-rotateContainer,\\n.Kinect-container {\\n}\\n\\n.Kinect-camImg {\\n  position: relative;\\n  height: 20px;\\n  width: 10px;\\n  background-color: green;\\n  cursor: pointer;\\n}\\n\\n.Kinect--selected .Kinect-camImg {\\n  border: 2px solid #f25;\\n  margin-left: -2px;\\n  margin-top: -2px;\\n}\\n\\n.Kinect-camImg:after {\\n  content: '';\\n  position: absolute;\\n  height: 10px;\\n  width: 3px;\\n  background-color: black;\\n  top: 5px;\\n  right: -2px;\\n}\\n\\n\\n.Kinect-img {\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.Kinect-rotate {\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n}\\n\\n\\n.Kinect-rotate {\\n  z-index: 10;\\n}\\n\\n.Kinect-rotate-handle {\\n  width: 40px;\\n  height: 40px;\\n  background-color: GREEN;\\n  border-radius: 50%;\\n  position: relative;\\n  top: 0;\\n  left: 0;\\n  border: 1px solid black;\\n  cursor: alias;\\n  margin-left: -60px;\\n  margin-top: -20px;\\n  left: 100px;\\n\\n}\\n\\n.Kinect--selected .Kinect-rotate-handle {\\n  border: 1px solid #f25;\\n}\\n*/\\n\\n/* .Stand-rotate-offset {\\n  position: absolute;\\n  left: -120px;\\n  bottom: -20px;\\n  background-color: blue;\\n  width: 10px;\\n  height: 10px;\\n} */\\n\\n/* Focal Point */\\n.FocalPoint {\\n  text-align: center;\\n  position: absolute;\\n}\\n\\n.FocalPoint-move-handle {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  width: 40px;\\n  height: 40px;\\n  background-color: #7f848e;\\n  /*#840d00;*/\\n  border-radius: 50%;\\n  position: relative;\\n  top: 0;\\n  left: 0;\\n  /* transform: translate(-10px, -10px); */\\n  border: 1px solid black;\\n  cursor: move;\\n  margin-left: -20px;\\n  margin-top: -20px;\\n  /* top: -100px; */\\n  color: white !important;\\n}\\n\\n/* .KinectFocalPoint */\\n\\n.KinectFocalPoints {\\n  position: absolute;\\n}\\n\\n.KinectFocalPoint {\\n  position: absolute;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  width: 40px;\\n  height: 40px;\\n  background-color: #8200c8;\\n  /*#840d00;*/\\n  border-radius: 50%;\\n  \\n  top: 0;\\n  left: 0;\\n  /* transform: translate(-10px, -10px); */\\n  border: 1px solid black;\\n  /* cursor: pointer; */\\n  margin-left: -20px;\\n  margin-top: -20px;\\n  /* top: -100px; */\\n  color: white !important;\\n}\\n\\n/* Motion Lines */\\n.GridLines {\\n  position: absolute;\\n  top: 0;\\n  -webkit-transform-origin: top center;\\n          transform-origin: top center;\\n}\\n\\n.GridLines table {\\n  border-collapse: collapse;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.GridLines table td {\\n  border: 2px solid #efefef\\n}\\n\\n.GridLines table td.GridLines-td--thickRight {\\n  border-right: 2px solid #300!important;\\n}\\n\\n.GridLines table td.GridLines-td--thickBottom {\\n  border-bottom: 2px solid #300!important;\\n}\\n\\n/* Motion Lines */\\n.MotionLine {\\n  opacity: 1;\\n  /* -webkit-transition: opacity 1500ms;\\n  transition: opacity 1500ms; */\\n}\\n\\n.MotionLine.fadeOut {\\n  -webkit-animation-name: fadeOutMotionLine;\\n          animation-name: fadeOutMotionLine;\\n  -webkit-animation-duration: 600ms;\\n          animation-duration: 600ms;\\n  /* NOTE: this 1500ms should be the same value as what's in ./middleware/index.js => customWebsocketMiddleware, for the setTimeout duration of the removal for the MotionLine */\\n}\\n\\n@-webkit-keyframes fadeOutMotionLine {\\n  from {\\n    opacity: 1;\\n  }\\n\\n  to {\\n    opacity: 0;\\n  }\\n}\\n\\n@keyframes fadeOutMotionLine {\\n  from {\\n    opacity: 1;\\n  }\\n\\n  to {\\n    opacity: 0;\\n  }\\n}\\n\\n/* UTILS */\\n.noselect {\\n  -webkit-touch-callout: none;\\n  /* iOS Safari */\\n  -webkit-user-select: none;\\n  /* Safari */\\n  /* Konqueror HTML */\\n  -moz-user-select: none;\\n  /* Firefox */\\n  -ms-user-select: none;\\n  /* Internet Explorer/Edge */\\n  user-select: none;\\n  /* Non-prefixed version, currently\\n                                  supported by Chrome and Opera */\\n}\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"body {\\n  margin: 0;\\n  padding: 0;\\n  font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", \\\"Roboto\\\", \\\"Oxygen\\\",\\n    \\\"Ubuntu\\\", \\\"Cantarell\\\", \\\"Fira Sans\\\", \\\"Droid Sans\\\", \\\"Helvetica Neue\\\",\\n    sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\\ncode {\\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \\\"Courier New\\\",\\n    monospace;\\n}\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../node_modules/css-loader/index.js??ref--6-oneOf-3-1!../node_modules/postcss-loader/src/index.js??postcss!./App.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js??ref--6-oneOf-3-1!../node_modules/postcss-loader/src/index.js??postcss!./App.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js??ref--6-oneOf-3-1!../node_modules/postcss-loader/src/index.js??postcss!./App.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import React from 'react'\nimport Menu from './containers/Menu'\nimport Scene from './containers/Scene'\nimport './App.css';\nimport 'rc-slider/assets/index.css';\n\n// import {scale, rotate, translate, compose, applyToPoint} from 'transformation-matrix';\n// window.c_tm = {scale, rotate, translate, compose, applyToPoint};\n\nconst App = () => (\n  <div>\n    <Menu />\n    <Scene />\n  </div>\n)\n\nexport default App\n\n// import React, { Component } from 'react';\n// // import logo from './logo.svg';\n// import './App.css';\n\n// // Disable the scrolling of the page.\n// const bodyScrollLock = require('body-scroll-lock');\n// const disableBodyScroll = bodyScrollLock.disableBodyScroll;\n// // const enableBodyScroll = bodyScrollLock.enableBodyScroll;\n\n// // const targetElement = document.querySelector(\"html\")\n// disableBodyScroll(document.querySelector(\"html\"));\n// disableBodyScroll(document.querySelector(\"body\"));\n\n// class App extends Component {\n\n//   render() {\n//     return (\n//       <div style={{textAlign: \"left\"}} className=\"App\">\n//         hi\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n\n\n","// WEBSOCKET\nimport { WEBSOCKET_CONNECT, WEBSOCKET_DISCONNECT, WEBSOCKET_SEND } from '@giantmachines/redux-websocket'\n\nconst websocketUrl = \"ws://localhost:8081/ws\";\nexport const websocketConnect = (url = websocketUrl) => {\n    return {\n        type: WEBSOCKET_CONNECT,\n        payload: { url }\n    }\n}\n\nexport const websocketDisconnect = () => {\n    return {\n        type: WEBSOCKET_DISCONNECT,\n    }\n}\n\nexport const websocketSend = (payload) => {\n    // console.log('WEBSOCK SEND', payload);\n    return {\n        type: WEBSOCKET_SEND,\n        payload: payload\n    }\n}\n\n// MENU\nexport const menuDeselectStandAndAll = () => ({\n    type: 'MENU_DESELECT_STAND_AND_ALL',\n})\n\nexport const menuSelectStand = index => ({\n    type: 'MENU_SELECT_STAND',\n    index\n})\n\nexport const menuSelectCamera = ({ standIndex, cameraIndex }) => {\n    return ({\n        type: 'MENU_SELECT_CAMERA',\n        standIndex,\n        cameraIndex\n    })\n}\n\nexport const menuSelectKinect = kinectName => ({\n    type: 'MENU_SELECT_KINECT',\n    kinectName\n})\n\n// export const menuSelectCamera = ({standIndex, cameraIndex}) => ({\n//     type: 'MENU_SELECT_CAMERA',\n//     standIndex,\n//     cameraIndex\n// })\n\nexport const menuSelectHead = ({ standIndex, headIndex }) => ({\n    type: 'MENU_SELECT_HEAD',\n    standIndex,\n    headIndex\n})\n\nexport const menuSelectFocalPoint = index => ({\n    type: 'MENU_SELECT_FOCALPOINT',\n    index\n})\n\nexport const menuHideAllRotates = () => ({\n    type: 'MENU_HIDE_ALL_ROTATES'\n})\n\nexport const menuShowAllRotates = () => ({\n    type: 'MENU_SHOW_ALL_ROTATES'\n})\n\nexport const menuEnableForceShowAllRotatesOnSelect = () => ({\n    type: 'MENU_ENABLE_FORCE_SHOW_ALL_ROTATES_ON_SELECT'\n})\n\nexport const menuDisableForceShowAllRotatesOnSelect = () => ({\n    type: 'MENU_DISABLE_FORCE_SHOW_ALL_ROTATES_ON_SELECT'\n})\n\nexport const menuToggleHideRotates = (rotateType) => ({\n    type: 'MENU_TOGGLE_HIDE_ROTATES',\n    rotateType\n})\n\nexport const menuToggleForceShowRotatesOnSelect = (rotateType) => ({\n    type: 'MENU_TOGGLE_FORCE_SHOW_ROTATES_ON_SELECT',\n    rotateType\n})\n\nexport function sceneFetchFromUrl(sceneUrl) {\n    return dispatch => {\n        return fetch(sceneUrl)\n            .then(response => response.json())\n            .then(json => {\n                if (typeof json === \"object\") {\n                    if (json.scale) {\n                        dispatch(menuSetScale(json.scale));\n                    }\n                    if (json.translate && json.translate.x && json.translate.y) {\n                        dispatch(menuSetTranslateX(json.translate.x));\n                        dispatch(menuSetTranslateY(json.translate.y));\n                    }\n                    // if (json.kinects) {\n                    //     console.log(\"kinnn\");\n                    //     dispatch(kinectSetScene(json))\n                    // }\n                }\n                \n                dispatch(standSetScene(json))\n            })\n            .catch(e => console.log(e))\n    }\n}\n\nexport const standSetScene = (sceneData) => ({\n    type: 'STAND_SET_SCENE',\n    sceneData\n});\n\nexport const menuSetScale = (scale) => ({\n    type: 'MENU_SET_SCALE',\n    scale\n});\n\nexport const menuSetTranslateX = (x) => ({\n    type: 'MENU_SET_TRANSLATE_X',\n    x\n});\n\nexport const menuSetTranslateY = (y) => ({\n    type: 'MENU_SET_TRANSLATE_Y',\n    y\n});\n\n// STAND\n\nexport const standAdd = options => ({\n    type: 'STAND_ADD',\n    options\n})\n\nexport const standSetFieldByIndex = (standIndex, fieldName, value) => ({\n    type: 'STAND_SET_FIELD_BY_INDEX',\n    index: standIndex,\n    fieldName,\n    value\n});\n\nexport const standSetInFieldsByIndex = (standIndex, fieldNames, value) => ({\n    type: 'STAND_SETIN_FIELDS_BY_INDEX',\n    index: standIndex,\n    fieldNames,\n    value\n});\n\nexport const standMoveByIndex = (standIndex, pos) => ({\n    type: 'STAND_MOVE_BY_INDEX',\n    index: standIndex,\n    pos\n})\nexport const standRotateByIndex = (standIndex, rot) => ({\n    type: 'STAND_ROTATE_BY_INDEX',\n    index: standIndex,\n    rot\n})\n\nexport const standRemoveByIndex = index => ({\n    type: 'STAND_REMOVE_BY_INDEX',\n    index\n})\n\nexport const standSetIsActive = (headName) => ({\n    type: 'STAND_SET_IS_ACTIVE',\n    headName\n})\n\nexport const standSetIsNotActive = (headName) => ({\n    type: 'STAND_SET_IS_NOT_ACTIVE',\n    headName\n})\n\n// KINECT\nexport const kinectMoveByIndex = (standIndex, kinectIndex, pos) => ({\n    type: 'KINECT_MOVE_BY_INDEX',\n    standIndex: standIndex,\n    kinectIndex: kinectIndex,\n    pos\n})\n\nexport const kinectRotateByIndex = (standIndex, kinectIndex, rot) => ({\n    type: 'KINECT_ROTATE_BY_INDEX',\n    standIndex,\n    kinectIndex,\n    rot\n})\n\nexport const kinectAddNew = (standIndex) => ({\n    type: 'KINECT_ADD_NEW',\n    standIndex\n})\n\nexport const kinectRemoveByIndex = (standIndex, kinectIndex) => ({\n    type: 'KINECT_REMOVE_BY_INDEX',\n    standIndex,\n    kinectIndex\n})\n\nexport const kinectSetFocalPoints = ({kinectName, focalPoints}) => ({\n    type: 'KINECT_SET_FOCAL_POINTS',\n    focalPoints,\n    kinectName\n})\n\nexport const kinectClearFocalPoints = ({kinectName}) => ({\n    type: 'KINECT_CLEAR_FOCAL_POINTS',\n    kinectName\n})\n\n// export const kinectSetScene = (sceneData) => ({\n//     type: 'KINECT_SET_SCENE',\n//     sceneData\n// });\n\n// export const kinectMoveByName = ({kinectName, pos}) => ({\n//     type: 'KINECT_MOVE_BY_NAME',\n//     kinectName: kinectName,\n//     pos\n// })\n\n// export const kinectRotateByName = ({kinectName, rot}) => ({\n//     type: 'KINECT_ROTATE_BY_NAME',\n//     kinectName,\n//     rot\n// })\n\n// export const kinectClearFocalPoints = (kinectName) => ({\n//     type: 'KINECT_CLEAR_FOCAL_POINTS',\n//     kinectName\n// })\n\n// HEAD\nexport const headMoveByIndex = (standIndex, headIndex, pos) => ({\n    type: 'HEAD_MOVE_BY_INDEX',\n    standIndex: standIndex,\n    headIndex: headIndex,\n    pos\n})\n\n// Note this is similar to getting \"head-positioned\" from the websocket\nexport const headRotateByHeadName = (headName, rotation) => ({\n    type: 'HEAD_ROTATE_BY_HEADNAME',\n    headName,\n    rotation\n})\n\nexport const headRotateByIndex = (standIndex, headIndex, rot) => ({\n    type: 'HEAD_ROTATE_BY_INDEX',\n    standIndex,\n    headIndex,\n    rot\n})\n\nexport const headRotateStartByIndex = (standIndex, headIndex) => ({\n    type: 'HEAD_ROTATE_START_BY_INDEX',\n    standIndex,\n    headIndex\n})\nexport const headRotateStopByIndex = (standIndex, headIndex) => ({\n    type: 'HEAD_ROTATE_STOP_BY_INDEX',\n    standIndex,\n    headIndex\n})\n\n// CAMERA\nexport const cameraMoveByIndex = (standIndex, cameraIndex, pos) => ({\n    type: 'CAMERA_MOVE_BY_INDEX',\n    standIndex: standIndex,\n    cameraIndex: cameraIndex,\n    pos\n})\n\nexport const cameraRotateByIndex = (standIndex, cameraIndex, rot) => ({\n    type: 'CAMERA_ROTATE_BY_INDEX',\n    standIndex,\n    cameraIndex,\n    rot\n})\n\nexport const cameraAddNew = (standIndex) => ({\n    type: 'CAMERA_ADD_NEW',\n    standIndex\n})\n\nexport const cameraRemoveByIndex = (standIndex, cameraIndex) => ({\n    type: 'CAMERA_REMOVE_BY_INDEX',\n    standIndex,\n    cameraIndex\n})\n\n// POPUP\nexport const popupInfoMove = (standIndex, pos) => ({\n    type: 'POPUP_INFO_MOVE_BY_INDEX',\n    // popupId: popupId,\n    standIndex,\n    pos\n})\n\nexport const popupInfoAddNew = (standIndex, pos) => ({\n    type: 'POPUP_INFO_ADD_NEW',\n    standIndex,\n    // popupId,\n    // popupType,\n    pos,\n    // payload\n})\n\nexport const popupInfoRemove = (standIndex) => ({\n    type: 'POPUP_INFO_REMOVE',\n    standIndex\n})\n\nexport const popupInfoRemoveAll = () => ({\n    type: 'POPUP_INFO_REMOVE_ALL'\n})\n\n// FOCAL POINTS\n\nexport const focalPointAdd = options => ({\n    type: 'FOCALPOINT_ADD',\n    options\n})\n\n// export const focalPointSetFieldByIndex = (focalPointIndex, fieldName, value) => ({\n//     type: 'FOCALPOINT_SET_FIELD_BY_INDEX',\n//     index: focalPointIndex,\n//     fieldName,\n//     value\n// });\n\n// export const focalPointSetInFieldsByIndex = (focalPointIndex, fieldNames, value) => ({\n//     type: 'FOCALPOINT_SETIN_FIELDS_BY_INDEX',\n//     index: focalPointIndex,\n//     fieldNames,\n//     value\n// });\n\nexport const focalPointMoveByIndex = (focalPointIndex, pos) => ({\n    type: 'FOCALPOINT_MOVE_BY_INDEX',\n    index: focalPointIndex,\n    pos\n})\n\nexport const focalPointRemoveByIndex = index => ({\n    type: 'FOCALPOINT_REMOVE_BY_INDEX',\n    index\n})\n\nexport const focalPointSetIsActive = (focalPointName) => ({\n    type: 'FOCALPOINT_SET_IS_ACTIVE',\n    focalPointName\n})\n\nexport const focalPointSetIsNotActive = (focalPointName) => ({\n    type: 'FOCALPOINT_SET_IS_NOT_ACTIVE',\n    focalPointName\n})\n\n\n// export const standRemoveByIndex = index => ({\n//     type: 'STAND_REMOVE_BY_INDEX',\n//     index\n// })\n\n// WEBSOCKET - MOTION LINES\n\nexport const motionLinesAddLine = (options) => {\n    const { lineId, shape, coords } = options;\n\n    return {\n        type: 'MOTIONLINES_ADD',\n        lineId,\n        shape,\n        coords\n    }\n}\n\nexport const motionLinesRemoveLine = (options) => {\n    const { lineId } = options;\n    return {\n        type: 'MOTIONLINES_REMOVE',\n        lineId,\n    }\n}","import React from 'react';\n//import Cameras from '../containers/Cameras'\n// import Draggable from 'react-draggable'; \nimport { DraggableCore } from 'react-draggable';\n// import Draggable, {DraggableCore} from 'react-draggable'; \n// import Stand from '../containers/Stand';\nimport { rotateVector } from '../helpers';\nimport cn from \"classnames\";\n\nimport {encodeRot, decodeRot, encodePosRelativeStand, decodePosRelativeStand, noTouchMove} from '../helpers';\n\nexport default class Camera extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            moveRelativeStartPos: { x: 0, y: 0 },\n            // pos : {x:0, y:0},\n            // rotateRad : 0\n        };\n\n        this.handleMoveStart = this.handleMoveStart.bind(this);\n        this.handleMoveDrag = this.handleMoveDrag.bind(this);\n        this.handleMoveStop = this.handleMoveStop.bind(this);\n\n        this.handleRotateStart = this.handleRotateStart.bind(this);\n        this.handleRotateDrag = this.handleRotateDrag.bind(this);\n        this.handleRotateStop = this.handleRotateStop.bind(this);\n\n        // Refs\n        this.refCameraRotateHandle = React.createRef();\n    }\n\n    componentDidMount() {\n        noTouchMove(this.refCameraRotateHandle.current);\n    }\n\n    // Move\n    handleMoveStart(e, a) {\n        const curPos = this.getCurrentPos();\n        const { x, y } = a;\n        const pos = { x: x - curPos.x, y: y - curPos.y };\n\n        this.setState({ moveRelativeStartPos: pos });\n        this.props.selectCamera();\n    }\n\n    handleMoveDrag(e, a) {\n        const { x, y } = a;\n        const pos = { x, y }; //: x - origin.x, y: y - origin.y };\n        const rot = decodeRot(this.props.stand.get(\"rot\"));\n        const newPos = encodePosRelativeStand(this.props.menu, rotateVector(pos, rot));//, origin);\n        this.props.cameraMove(newPos);\n    }\n\n    // handleMoveDragBLAHJ(e, a) {\n    //     // console.log(\"h dr\", e, a);\n    //     const { x, y } = a;\n    //     const pos = encodePosScale(this.props.menu, { x, y });\n    //     // const pos = encrypt1({ x, y });\n    //     // const pos = { x, y };\n    //     // Convert the values \n\n    //     this.props.standMove(pos);\n    //     // this.setState({ pos });\n    // }\n\n    handleMoveStop(e, a) {\n        // this.props.cameraMove(pos);\n        // console.log(\"h stop\", e, a);\n    }\n\n\n    // Rotate\n    handleRotateStart(e, a) {\n        this.props.selectCamera();\n        // console.log(\"hrot str\", e, a);\n    }\n\n    handleRotateDrag(e, a) {\n        const { x, y } = a;\n        var rad = Math.atan2(y, x); // In radians\n        // Then you can convert it to degrees as easy as:\n        var deg = rad * (180 / Math.PI);\n\n        const standRot = decodeRot(this.props.stand.get(\"rot\"));\n        this.props.cameraRotate(encodeRot(deg - standRot));\n    }\n\n    handleRotateStop(e, a) {\n        // console.log(\"hrlt stop\", e, a);\n    }\n\n    getCurrentPos() {\n        let pos = decodePosRelativeStand(this.props.camera.get(\"pos\").toJS());\n        pos.x = isNaN(pos.x) ? 0 : pos.x;\n        pos.y = isNaN(pos.y) ? 0 : pos.y;\n\n        return pos;\n    }\n\n    render() {\n        const camera = this.props.camera;\n\n        let pos = this.getCurrentPos();\n\n        let rot = camera.get(\"rot\");\n        rot = isNaN(rot) ? 0 : rot;\n        rot = decodeRot(rot);\n\n        const selectedStandIndex = this.props.menu.get(\"selectedStandIndex\");\n        const selectedCameraIndex = this.props.menu.get(\"selectedCameraIndex\");\n\n        const isSelected = selectedStandIndex === this.props.standIndex && selectedCameraIndex === this.props.cameraIndex;\n\n        const fov = camera.get(\"fov\");\n        const fovLength = 500;\n        let fovHeight = 0;\n\n        if (0 < fov && fov < 180) {\n            const rad = (fov/2 * Math.PI/180);\n            fovHeight = fovLength * Math.tan(rad);\n        }\n        const topAdjust = 12; // This is related to the height of half the camera.\n        const fovStyle = {\n            width: 0,\n            height: 0,\n            borderTop: `${fovHeight}px solid transparent`,\n            borderRight: `${fovLength}px solid rgba(0,100,0,0.1)`,\n            borderBottom: `${fovHeight}px solid transparent`,\n            position: \"absolute\",\n            top: `-${fovHeight - topAdjust}px`,\n            left: \"12px\",\n            zIndex: 2,\n            pointerEvents: \"none\" // https://stackoverflow.com/questions/3680429/click-through-a-div-to-underlying-elements\n        }\n\n        const isCameraRotatesHidden = this.props.menu.get(\"isCameraRotatesHidden\");\n        const isForceShowCameraRotatesOnSelect = this.props.menu.get(\"isForceShowCameraRotatesOnSelect\");\n        const isShowCameraRotator = !isCameraRotatesHidden || (isSelected && isForceShowCameraRotatesOnSelect);\n\n        return (\n            <div className={cn(\"Camera\", { \"Camera--selected\": isSelected })} >\n                <DraggableCore\n                    // allowAnyClick= boolean,\n                    // cancel= string,\n                    // disabled= boolean,\n                    // enableUserSelectHack= boolean,\n                    // offsetParent={this.refStandRotateOffset.current} //HTMLElement,\n                    // grid= [number, number],\n                    handle=\".Camera-camImg\"\n                    onStart={this.handleMoveStart}\n                    onDrag={this.handleMoveDrag}\n                    onStop={this.handleMoveStop}\n                // onMouseDown= (e= MouseEvent) => void\n                >\n                    <div className=\"Camera-container\" style={{ transform: `translate(${pos.x}px, ${pos.y}px)` }}>\n                        <div className=\"Camera-rotateContainer\" style={{ transform: `rotate(${rot}deg)` }}>\n                            { \n                                !isShowCameraRotator ? null : \n                                    <div className=\"Camera-rotate noselect\">\n                                        {/* offset is used for the drag's reference */}\n                                        <DraggableCore\n                                            // allowAnyClick= boolean,\n                                            // cancel= string,\n                                            // disabled= boolean,\n                                            // enableUserSelectHack= boolean,\n                                            // offsetParent={this.refStandRotateOffset.current} //HTMLElement,\n                                            // grid= [number, number],\n                                            handle=\".Camera-rotate-handle\"\n                                            onStart={this.handleRotateStart}\n                                            onDrag={this.handleRotateDrag}\n                                            onStop={this.handleRotateStop}\n                                        // onMouseDown= (e= MouseEvent) => void\n                                        >\n                                            <div ref={this.refCameraRotateHandle} className=\"Camera-rotate-handle\"></div>\n                                        </DraggableCore>\n                                    </div>\n                            }\n\n                            <div className=\"Camera-camImg\"></div>\n\n                            <div className=\"Camera-fov\" style={fovStyle}>\n                                <div className=\"Camera-fov-1\"></div>\n                                <div className=\"Camera-fov-2\"></div>\n                            </div>\n                        </div>\n                    </div>\n                </DraggableCore>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport Camera from '../containers/Camera'\n\nexport default class Menu extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // pos : {x:0, y:0},\n            // rotateRad : 0\n        };\n    }\n\n    render() {\n        const cameras = this.props.cameras || [];\n\n        return (\n            <div className=\"Cameras\">\n                {cameras.map((camera, i) => <Camera key={i} camera={camera} cameraIndex={i} standIndex={this.props.standIndex}/>)}\n            </div>\n        );\n    }\n}","import React from 'react';\n//import Heads from '../containers/Heads'\n// import Draggable from 'react-draggable'; \nimport Draggable, { DraggableCore } from 'react-draggable';\n// import FocalPoint from '../containers/FocalPoint';\nimport cn from \"classnames\";\nimport PopupInfo from '../containers/PopupInfo';\n\nimport { encodeRot, decodeRot, encodePos, decodePos, noTouchMove } from '../helpers';\n\nexport default class Menu extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // pos : {x:0, y:0},\n            // rotateRad : 0\n        };\n\n        // this.onMouseDown = this.onMouseDown.bind(this);\n\n        this.togglePopupInfo = this.togglePopupInfo.bind(this);\n\n        this.handleMoveStart = this.handleMoveStart.bind(this);\n        this.handleMoveDrag = this.handleMoveDrag.bind(this);\n        this.handleMoveStop = this.handleMoveStop.bind(this);\n\n        // this.handleRotateStart = this.handleRotateStart.bind(this);\n        // this.handleRotateDrag = this.handleRotateDrag.bind(this);\n        // this.handleRotateStop = this.handleRotateStop.bind(this);\n\n        this.canDrag = this.canDrag.bind(this);\n\n        // this.handleMoveDragEnd = this.handleMoveDragEnd.bind(this);\n        // this.handleMoveDragEnter = this.handleMoveDragEnter.bind(this);\n        // this.handleMoveDragExit = this.handleMoveDragExit.bind(this);\n        // this.handleMoveDragLeave = this.handleMoveDragLeave.bind(this);\n        // this.handleMoveDragOver = this.handleMoveDragOver.bind(this);\n        // this.handleMoveDragStart = this.handleMoveDragStart.bind(this);\n\n        // Refs\n        this.FocalPointRotateHandle = React.createRef();\n        this.FocalPointMoveHandle = React.createRef();\n    }\n\n    componentDidMount() {\n        noTouchMove(this.FocalPointRotateHandle.current);\n        noTouchMove(this.FocalPointMoveHandle.current);\n    }\n\n    // handleMoveDrag = {this.handleMoveDrag}\n    // handleMoveDragEnd = {this.handleMoveDragEnd}\n    // handleMoveDragEnter = {this.handleMoveDragEnter}\n    // handleMoveDragExit = {this.handleMoveDragExit}\n    // handleMoveDragLeave = {this.handleMoveDragLeave}\n    // handleMoveDragOver = {this.handleMoveDragOver}\n    // handleMoveDragStart = {this.handleMoveDragStart}\n\n    // // If this is clicked in general\n    // onMouseDown() {\n    //     var FocalPoint = document.getElementsByClassName(\"FocalPoint\");\n    //     [...FocalPoints].forEach(FocalPoint => {\n    //         FocalPoint.classList.remove(\"FocalPoint-highest\");\n    //     });\n    // }\n\n    togglePopupInfo(e) {\n        if (!this.props.popupInfo) {\n            // The x and y of the Scene\n            var { x, y } = document.getElementById(\"Scene\").getBoundingClientRect();\n\n            const clickPos = { x: e.nativeEvent.clientX - x, y: e.nativeEvent.clientY - y };\n\n            this.props.popupInfoAddNew(clickPos);\n        } else {\n            this.props.popupInfoRemove();\n        }\n    }\n\n    canDrag() {\n        return this.props.focalPoint.get(\"type\") !== \"kinect\"\n    }\n\n    // Move\n    handleMoveStart(e, a) {\n        if (this.canDrag) {\n            this.props.focalPointSelect();\n        }\n        // console.log(\"h str\", e, a);\n        // this.props.focalPointMove(1,a.)\n    }\n\n    handleMoveDrag(e, a) {\n        if (this.canDrag) {\n            // console.log(\"h dr\", e, a);\n            const { x, y } = a;\n            const pos = encodePos(this.props.menu, { x, y });\n            // const pos = encrypt1({ x, y });\n            // const pos = { x, y };\n            // Convert the values \n\n            this.props.focalPointMove(pos);\n            // this.setState({ pos });\n        }\n    }\n\n    handleMoveStop(e, a) {\n    }\n\n    // // Rotate\n    // handleRotateStart(e, a) {\n    //     if (this.canDrag) {\n    //         this.props.focalPointSelect();\n    //     }\n    // }\n\n    // handleRotateDrag(e, a) {\n\n    //     const { x, y } = a;\n    //     var rad = Math.atan2(y, x); // In radians\n    //     var deg = encodeRot(rad * (180 / Math.PI));\n    //     // var deg = rad * (180 / Math.PI);\n\n    //     this.props.focalPointRotate(deg);\n    // }\n\n    // handleRotateStop(e, a) {\n    //     // console.log(\"hrlt stop\", e, a);\n    // }\n\n    render() {\n        if (typeof window !== 'undefined') {\n            window.c__t234 = this;\n        }\n        const focalPoint = this.props.focalPoint;\n        const isActive = focalPoint.get(\"isActive\");\n        // let pos = {x: 0, y:0};\n        let pos = decodePos(this.props.menu, focalPoint.get(\"pos\").toJS());\n\n        // let pos = decrypt1(focalPoint.get(\"pos\").toJS());\n        // let pos = focalPoint.get(\"pos\").toJS();\n        pos.x = isNaN(pos.x) || pos.x === \"\" ? 0 : pos.x;\n        pos.y = isNaN(pos.y) || pos.y === \"\" ? 0 : pos.y;\n\n        let rot = focalPoint.get(\"rot\");\n        rot = isNaN(rot) ? 0 : rot;\n        rot = decodeRot(rot); // flip it so rotation is opposite direction.\n\n        const FocalPointIndex = this.props.menu.get(\"FocalPointIndex\");\n        const isSelected = FocalPointIndex === this.props.index;\n\n        const heads = focalPoint.get(\"heads\");\n        const cameras = focalPoint.get(\"cameras\");\n\n        // const focalPointStyle = {transform:`translate(${focalPoint.pos.x}px, ${focalPoint.pos.y}px)`}\n        // console.log('ren');\n\n        // try {\n        //     pos = focalPoint.get(\"pos\");\n        // } catch(e) {}\n\n        let popupInfo;\n\n        if (this.props.popupInfo) {\n            popupInfo = (\n                <div className=\"FocalPoint-popupInfo\">\n                    <PopupInfo focalPointIndex={this.props.index} pos={this.props.popupInfo.get(\"pos\")} />\n                </div>\n            );\n        }\n\n        const FocalPointRotatesHidden = this.props.menu.get(\"FocalPointRotatesHidden\");\n        const FocalPointRotatesOnSelect = this.props.menu.get(\"FocalPointRotatesOnSelect\");\n        const FocalPointRotator = !FocalPointRotatesHidden || (isSelected && FocalPointRotatesOnSelect);\n\n        const focalPointName = focalPoint.get(\"name\") || `FP${this.props.index}`;\n        // if (focalPoint.get(\"name\")) {\n        //     // console.log('name', focalPoint.get(\"name\"));\n        // } else {\n        //     // console.log('noname', focalPoint.get(\"name\"), focalPoint.toJS());\n        // }\n\n        let styleFocalPointHandle = {};\n\n        if (focalPointName.indexOf(\"k\") === 0) {\n            styleFocalPointHandle.backgroundColor = \"#8200C8\";\n        }\n\n        return (\n            <div className={cn(\"FocalPoint\", { \"FocalPoint--selected\": isSelected, \"FocalPoint--active\": isActive })} >\n                <Draggable\n                    disabled={!this.canDrag()}\n                    handle=\".FocalPoint-move-handle\"\n                    defaultPosition={{ x: 0, y: 0 }}\n                    // position={null}\n                    position={pos}\n                    // grid={[25, 25]}\n                    onStart={this.handleMoveStart}\n                    onDrag={this.handleMoveDrag}\n                    onStop={this.handleMoveStop}\n                >\n\n                    <div style={styleFocalPointHandle} className=\"FocalPoint-move-handle\" onClick={this.props.focalPointSelect}>{focalPointName}</div>\n\n                    {/* <div ref={this.FocalPoint} className={cn(\"FocalPoint\", { \"FocalPoint--selected\": isSelected, \"FocalPoint--active\" : isActive })} onClick={this.props.focalPointSelect}> */}\n                    {/* <div ref={this.FocalPoint} id={`FocalPoint-${focalPointName}`} className={cn(\"FocalPoint\", { \"FocalPoint--selected\": isSelected, \"FocalPoint--active\" : isActive })} onClick={this.props.focalPointSelect}> */}\n\n                </Draggable>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport FocalPoint from '../containers/FocalPoint';\nimport cn from \"classnames\";\n// import { isKeyed } from 'immutable';\nimport { encodePos } from '../helpers';\n\nexport default class Menu extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // pos : {x:0, y:0},\n            // rotateRad : 0\n        };\n\n        this.initKinect = this.initKinect.bind(this);\n        this.kinectEventBodyFrame = this.kinectEventBodyFrame.bind(this);\n        this.kinectMoveFocalPoint = this.kinectMoveFocalPoint.bind(this);\n        this.convertToXYForScene = this.convertToXYForScene.bind(this);\n    }\n\n    // Note we're taking in the post calculated cameraX, cameraY\n    kinectMoveFocalPoint({focalPointIndex, x, y}) {\n        // console.log(\"h dr\", e, a);\n        // const { x, y } = a;\n        const pos = { x, y }\n\n        // const pos = encodePos(this.props.menu, { x, y });\n\n        // const pos = encrypt1({ x, y });\n        // const pos = { x, y };\n        // Convert the values \n\n        this.props.focalPointMoveByIndex(focalPointIndex, pos);\n        // this.setState({ pos });\n    }\n\n    kinectEventBodyFrame(bodyFrame) {\n        var JOINT_NUM = {\n            SPINEBASE: 0,\n            SPINEMID: 1,\n            NECK: 2,\n            HEAD: 3,\n            SHOULDERLEFT: 4,\n            ELBOWLEFT: 5,\n            WRISTLEFT: 6,\n            HANDLEFT: 7,\n            SHOULDERRIGHT: 8,\n            ELBOWRIGHT: 9,\n            WRISTRIGHT: 10,\n            HANDRIGHT: 11,\n            HIPLEFT: 12,\n            KNEELEFT: 13,\n            ANKLELEFT: 14,\n            FOOTLEFT: 15,\n            HIPRIGHT: 16,\n            KNEERIGHT: 17,\n            ANKLERIGHT: 18,\n            FOOTRIGHT: 19,\n            SPINESHOULDER: 20,\n            HANDTIPLEFT: 21,\n            THUMBLEFT: 22,\n            HANDTIPRIGHT: 23,\n            THUMBRIGHT: 24\n        }\n\n        var headPosDiv = document.getElementById(\"headPos\");\n\n        // ctx.clearRect(0, 0, canvas.width, canvas.height);\n        var index = 0;\n        bodyFrame.bodies.forEach(body => {\n            if (body.tracked) {\n                for (var jointType in body.joints) {\n                    var joint = body.joints[jointType];\n\n                    const {x, y} = this.convertToXYForScene(joint);\n\n                    if (parseInt(jointType) === JOINT_NUM.HEAD) {\n                        // ctx.fillStyle = colorsForHead[index];\n                        headPosDiv.innerHTML = `x: ${joint.cameraX}<br/>y: ${joint.cameraY}<br/>z: ${joint.cameraZ}`;\n                        this.kinectMoveFocalPoint({focalPointIndex:index, x, y})\n                    } else {\n                        // ctx.fillStyle = colors[index];\n                    }\n                    // ctx.fillRect(joint.depthX * 512, joint.depthY * 424, 10, 10);\n                }\n                //draw hand states\n                // updateHandState(body.leftHandState, body.joints[7]);\n                // updateHandState(body.rightHandState, body.joints[11]);\n                index++;\n            }\n        });\n    }\n\n    initKinect() {\n        window.initKinect({\n            socketUrl: 'http://10.0.1.38:8000/',\n            events: {\n                bodyFrame: this.kinectEventBodyFrame\n            }\n        });\n    }\n\n    convertToXYForScene(joint) {\n\n        const xMul = -2;\n        const yMul = xMul;//1.1;\n        const xAdd = 0; //0.5;\n        const yAdd = 0.5;\n        const xOrigin = 0;\n        const yOrigin = 2;\n\n        return {\n            x : (joint.cameraX + xAdd) * xMul + xOrigin,\n            y : (joint.cameraZ + yAdd) * yMul + yOrigin\n        }\n    }\n\n    componentDidMount() {\n        const locatiobnUrl = new URL(document.location.href);\n        if (locatiobnUrl.searchParams.get(\"kinect\")) {\n            this.initKinect();\n        }\n    }\n\n    render() {\n        const focalPoints = this.props.focalPoints.map((focalPoint, i) => {\n            return <FocalPoint key={i} name={`fp${i}`} index={i} focalPoint={focalPoint} />\n        });\n\n        return (\n            <div className=\"FocalPoints\">\n                {focalPoints}\n            </div>\n        );\n    }\n}","import React from 'react'\nimport { throttle } from 'throttle-debounce';\nimport cn from 'classnames'\nimport { DraggableCore } from 'react-draggable';\n\nexport default class Menu extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            numTrs: 10,\n            numTds: 10,\n            additionalColsAbove: 0,\n            calculatedGrid: false,\n            // initialDragPos: {x: 0, y: 0}\n        };\n\n        this.refGridLines = React.createRef();\n\n        this.initialDragPos = { x: 0, y: 0 };\n\n        this.handleScroll = this.handleScroll.bind(this);\n        this.handleOnWheel = this.handleOnWheel.bind(this);\n        // this.handleOnWheel = throttle(60, this.handleOnWheel.bind(this));\n\n        // this.recalcGrid = this.recalcGrid.bind(this);\n        this.recalcGrid = throttle(200, this.recalcGrid.bind(this));\n        this.handleMoveStart = this.handleMoveStart.bind(this);\n        // this.handleMoveDrag = this.handleMoveDrag.bind(this);\n        this.handleMoveDrag = throttle(60, this.handleMoveDrag.bind(this));\n        // this.recalcGrid = throttle(200, this.recalcGrid.bind(this));\n        this.handleMoveStop = this.handleMoveStop.bind(this);\n\n        // this.setScale = e => { props.setScale(e.target.value) };\n        // this.setTranslateX = e => { props.setTranslateX(e.target.value) };\n        // this.setTranslateY = e => { props.setTranslateY(e.target.value) };\n\n    }\n\n    // Rotate\n    handleMoveStart(e, a) {\n        e.preventDefault();\n\n        this.initialDragPos = {\n            x: a.x,\n            y: a.y\n        };\n    }\n\n    handleMoveDrag(e, a) {\n        e.preventDefault();\n\n        const { x, y } = a;\n\n        const newX = x - this.initialDragPos.x;\n        const newY = y - this.initialDragPos.y;\n\n        this.initialDragPos.x = x;\n        this.initialDragPos.y = y;\n\n        // this.props.setTranslateX(this.props.menu, deltaX);\n        this.props.setTranslateX(parseFloat(this.props.menu.getIn([\"translate\", \"x\"])) + newX);\n        this.props.setTranslateY(parseFloat(this.props.menu.getIn([\"translate\", \"y\"])) + newY);\n\n        // this.props.setTranslateX(parseFloat(newX));\n        // this.props.setTranslateY(parseFloat(newY));\n\n        // var rad = Math.atan2(y, x); // In radians\n        // // Then you can convert it to degrees as easy as:\n        // var deg = rad * (180 / Math.PI);\n\n        // const standRot = decodeRot(this.props.stand.get(\"rot\"));\n        // // const standRot = this.props.stand.get(\"rot\");\n\n        // this.props.headRotate(encodeRot(deg - standRot));\n        // // this.props.headRotate(deg - standRot);\n    }\n\n    handleMoveStop(e, a) {\n        e.preventDefault();\n        // this.props.headRotateStop();\n    }\n\n    componentDidMount() {\n        window.addEventListener('scroll', this.handleScroll);\n        this.refGridLines.current.addEventListener(\"wheel\", this.handleOnWheel, { passive: false });\n        // window.addEventListener(\"wheel\", this.handleOnWheel, { passive: false });\n        this.recalcGrid();\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.handleScroll);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        try {\n            if (this.props.menu.getIn([\"translate\", \"x\"]) !== prevProps.menu.getIn([\"translate\", \"x\"]) ||\n                this.props.menu.getIn([\"translate\", \"y\"]) !== prevProps.menu.getIn([\"translate\", \"y\"]) ||\n                this.props.menu.getIn([\"scale\"]) !== prevProps.menu.getIn([\"scale\"])\n            ) {\n                this.recalcGrid();\n            }\n        } catch (e) { }\n    }\n\n    // NOTE this is throttled\n    recalcGrid() {\n        // Menu Specified translate and scale\n        const translateX = parseFloat(this.props.menu.getIn([\"translate\", \"x\"]));\n        const translateY = parseFloat(this.props.menu.getIn([\"translate\", \"y\"]));\n        const scale = parseFloat(this.props.menu.get(\"scale\"));\n\n        const additionalColsAbove = Math.ceil(translateY / scale) + 1; // Always add an extra 1 (just for smoother scrolls)\n        // const additionalColsBelow = 5; //Math.ceil(translateY / scale) + 1; // Always add an extra 1 (just for smoother scrolls)\n\n        this.setState({\n            additionalColsAbove,\n        });\n\n\n        // // cell dimensions: cw = cell width; ch = cell height\n        // const cw = 100;\n        // const ch = cw;\n\n        // // Generic dimensions\n        // const height = 1000;\n        // const width = height;\n        // const left = width / -2;\n        // const top = 0;\n\n        // // Grid transformations\n        // const gridTranslateX = translateX;\n        // const gridTranslateY = translateY;\n        // const gridScale = scale / 100;\n        // const gridHeight = 1000;\n        // const gridWidth = height;\n        // const gridLeft = width / -2;\n        // const gridTop = 0;\n\n        // // Table rows / columns\n\n        // this.setState({\n        //     translateX: gridTranslateX,\n        //     translateY: gridTranslateY,\n        //     scale: gridScale,\n        //     height : gridHeight,\n        //     width: gridWidth,\n        //     top: gridTop,\n        //     left: gridLeft,\n        //     numTrs,\n        //     numTds,\n        //     calculatedGrid : true\n        // });\n    }\n\n    handleScroll(e) {\n\n        // e.preventdefault();\n        // console.log(e);\n        // console.log(e.metaKey);\n        this.recalcGrid();\n        // console.log('s');\n        // newFn();\n        // let scrollTop = event.srcElement.body.scrollTop;\n        // let itemTranslate = Math.min(0, scrollTop/3 - 60);\n\n        // this.setState({\n        //   transform: itemTranslate\n        // });\n    }\n\n    handleOnWheel(e) {\n        // // If the \"Command\" keyt is pressed\n        if (e.metaKey) {\n            e.stopPropagation();\n            e.preventDefault();\n            this.props.setScale(parseFloat(this.props.menu.getIn([\"scale\"])) - (e.deltaY/2));\n        }\n    }\n\n    render() {\n        const winH = window.innerHeight;\n        const winW = window.innerWidth;\n\n        const translateX = parseFloat(this.props.menu.getIn([\"translate\", \"x\"]));\n        const translateY = parseFloat(this.props.menu.getIn([\"translate\", \"y\"]));\n        let scale = parseFloat(this.props.menu.get(\"scale\"));\n        // const scale = parseFloat(this.props.menu.get(\"scale\"));\n        // const scale = parseFloat(this.props.menu.get(\"scale\"));\n\n        // default cell dimension (height &  width)\n        let defaultCellDim;\n\n        if (scale <= 10) {\n            defaultCellDim = 1000;\n        } else if (scale <= 16) {\n            defaultCellDim = 500;\n        } else {\n            // This is the default value;\n            defaultCellDim = 100;\n        }\n\n        if (scale < 10) {\n            scale = 10;\n        }\n\n        const extraRows = 1;\n        let numTrs = Math.ceil(winH / scale) + extraRows; // Always add an additional one\n        let numTds = Math.ceil(winW / scale);\n\n        // Ensure the num Tds is an odd number.\n        if (numTds % 2 === 1) {\n            numTds++;\n        }\n\n        const gridTranslateX = translateX;\n        const gridTranslateY = translateY + this.state.additionalColsAbove * scale * -1;\n        const gridScale = scale / 100;\n\n        // const gridHeight = 1000;\n        // const gridWidth = 1000;//numTds * scale;\n        // const gridLeft = gridWidth / -2;\n        // const gridTop = 0;\n        const gridHeight = numTrs * defaultCellDim;\n        const gridWidth = numTds * defaultCellDim;\n        const gridLeft = gridWidth / -2;\n        const gridTop = 0;\n\n        const grid = {\n            height: gridHeight,\n            width: gridWidth,\n            top: gridTop,\n            left: gridLeft,\n            translateX: gridTranslateX,\n            translateY: gridTranslateY,\n            scale: gridScale\n        }\n\n        const cells = Array.apply(null, Array(numTrs)).map((v, i) => {\n            return (\n                <tr key={i}>\n                    {Array.apply(null, Array(numTds)).map((val2, j) => (\n                        <td className={cn({\n                            \"GridLines-td--thickRight\": j === numTds / 2 - 1,\n                            \"GridLines-td--thickBottom\": i === this.state.additionalColsAbove + extraRows - 2\n                        })} key={j}></td>\n                    ))}\n                </tr>\n            );\n        });\n\n        const styleGridLines = {\n            height: `${grid.height}px`,\n            width: `${grid.width}px`,\n            top: `${grid.top}px`,\n            left: `${grid.left}px`,\n            transform: `translate(${grid.translateX}px, ${grid.translateY}px) scale(${grid.scale})`\n        }\n\n        return (\n            // <div onWheel={this.handleOnWheel}>\n            <div >\n                <DraggableCore\n                    // allowAnyClick= boolean,\n                    // cancel= string,\n                    // disabled= boolean,\n                    // enableUserSelectHack= boolean,\n                    // offsetParent={this.refStandRotateOffset.current} //HTMLElement,\n                    // grid= [number, number],\n                    handle=\".GridLines-table\"\n                    onStart={this.handleMoveStart}\n                    onDrag={this.handleMoveDrag}\n                    onStop={this.handleMoveStop}\n                // onMouseDown= (e= MouseEvent) => void\n                >\n                    <div ref={this.refGridLines} className=\"GridLines\" style={styleGridLines}>\n                        <table className=\"GridLines-table\">\n                            <tbody>\n                                {cells}\n                            </tbody>\n                        </table>\n                    </div>\n                </DraggableCore>\n            </div>\n        )\n        // return (\n        //     <div className=\"GridLines\" style={{position: \"absolute\"}}>\n        //         <div style={{position: \"absolute\"}}>{displayedLines}</div>\n        //     </div>\n        // )\n    }\n}\n\n// import React from 'react'\n// import MotionLine from '../containers/MotionLine';\n\n// export default class Menu extends React.Component {\n//     constructor(props) {\n//         super(props);\n\n//         this.state = {\n\n//         };\n//     }\n\n//     render() {\n//         // let linesJS; \n//         let displayedLines = [];\n\n//         try {\n//             // linesJS = this.props.motionLines.get(\"lines\").toList().toJS();\n//             // // console.log('linesJS', linesJS);\n//             // if (linesJS.length >= 2) {\n//             //     window.c_ljs = {linesJS, mls : this.props.motionLines};\n//             // }\n\n//             this.props.motionLines.get(\"lines\").forEach((line, id) => { \n//                 const lineJS = line.toJS();\n//                 displayedLines.push(<MotionLine key={id} coords={lineJS.coords} shape={lineJS.shape}/>)\n//             })\n\n//             // this.props.motionLines.get(\"lines\").toJS().forEach((line, id) => {\n//             //     displayedLines.push(<MotionLine key={id} coords={line.coords} shape={line.shape}/>)\n//             // });\n\n//             console.log(displayedLines);\n\n//             // displayedLines = linesJS.map((line, i) => <MotionLine key={i} coords={line.coords} shape={line.shape}/>);\n\n//             // showVals = linesJS.map((line, i) => <div key={i}>key={i} coords={line.coords.join(',')} shape={line.shape}</div>);\n\n\n//             // shape = {this.props.shape}<br/>\n//             //         coords = {this.props.coords.map(coord => <span>{coord},</span>)}<br/>\n//             //         pos: {pos0.x}, {pos0.y} - {pos1.x}, {pos1.y}\n\n\n//             // motionLines = this.props.motionLines.get(\"lines\").toList().toJS().map((line, id) => {\n//             //     return <div key={id}>{line.get(\"coords\")}</div>\n//             // }).toJS();\n\n//         } catch(e) {\n//             console.log('Error', e);\n//         }\n\n\n//         return (\n//             <div className=\"GridLines\" style={{position: \"absolute\"}}>\n//                 <div style={{position: \"absolute\"}}>{displayedLines}</div>\n//             </div>\n//         )\n//         // return (\n//         //     <div className=\"GridLines\" style={{position: \"absolute\"}}>\n//         //         Motion lines: \n//         //         <div style={{position: \"absolute\"}}>{displayedLines}</div>\n//         //         <div style={{position: \"absolute\"}}>{showVals}</div>\n//         //     </div>\n//         // )\n//     }\n// }","import React from 'react';\n//import Heads from '../containers/Heads'\n// import Draggable from 'react-draggable'; \nimport { DraggableCore } from 'react-draggable';\n// import Draggable, {DraggableCore} from 'react-draggable'; \n// import Stand from '../containers/Stand';\nimport cn from \"classnames\";\n\nimport {encodeRot, decodeRot, noTouchMove} from '../helpers';\n\nexport default class Menu extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // pos : {x:0, y:0},\n            // rotateRad : 0\n        };\n\n        this.handleRotateStart = this.handleRotateStart.bind(this);\n        this.handleRotateDrag = this.handleRotateDrag.bind(this);\n        this.handleRotateStop = this.handleRotateStop.bind(this);\n\n        // Refs\n        this.refHeadRotateHandle = React.createRef();\n    }\n\n    componentDidMount() {\n        noTouchMove(this.refHeadRotateHandle.current);\n    }\n    /*\n        // Move\n        handleMoveStart(e,a) {\n            // console.log(\"h str\", e, a);\n            // this.props.standMove(1,a.)\n        }\n    \n        handleMoveDrag(e,a) {\n            // console.log(\"h dr\", e, a);\n            const {x,y} = a;\n            const pos = {x,y};\n            this.props.standMove(pos);\n            // this.setState({ pos });\n        }\n    \n        handleMoveStop(e,a) {\n            // console.log(\"h stop\", e, a);\n        }\n    */\n\n    // Rotate\n    handleRotateStart(e, a) {\n        e.preventDefault();\n        this.props.headRotateStart();\n    }\n\n    handleRotateDrag(e, a) {\n        e.preventDefault();\n        const { x, y } = a;\n        var rad = Math.atan2(y, x); // In radians\n        // Then you can convert it to degrees as easy as:\n        var deg = rad * (180 / Math.PI);\n\n        const standRot = decodeRot(this.props.stand.get(\"rot\"));\n        // const standRot = this.props.stand.get(\"rot\");\n\n        this.props.headRotate(encodeRot(deg - standRot));\n        // this.props.headRotate(deg - standRot);\n    }\n\n    handleRotateStop(e, a) {\n        e.preventDefault();\n        this.props.headRotateStop();\n    }\n\n    render() {\n        const head = this.props.head;\n\n        // let pos = stand.get(\"pos\").toJS();\n        // pos.x = isNaN(pos.x) ? 0 : pos.x;\n        // pos.y = isNaN(pos.y) ? 0 : pos.y;\n\n        let rot = head.get(\"rot\");\n        rot = isNaN(rot) ? 0 : rot;\n        rot = decodeRot(rot);\n\n        let vRot = head.get(\"vRot\");\n        vRot = isNaN(vRot) ? 0 : vRot;\n        vRot = decodeRot(vRot);\n\n        const selectedStandIndex = this.props.menu.get(\"selectedStandIndex\");\n        const selectedHeadIndex = this.props.menu.get(\"selectedHeadIndex\");\n\n        const isSelected = selectedStandIndex === this.props.standIndex && selectedHeadIndex === this.props.headIndex;\n\n        const isHeadRotatesHidden = this.props.menu.get(\"isHeadRotatesHidden\");\n        const isForceShowHeadRotatesOnSelect = this.props.menu.get(\"isForceShowHeadRotatesOnSelect\");\n        const isShowHeadRotator = !isHeadRotatesHidden || (isSelected && isForceShowHeadRotatesOnSelect);\n\n        return (\n            <div className={cn(\"Head noselect\", { \"Head--selected\": isSelected })}>\n                <div className=\"Head-rotateContainer\" style={{ transform: `rotate(${rot}deg)` }}>\n                    <div className=\"Head-container\">\n                        <img alt=\"head\" className=\"Head-img\" src=\"./media/head-arrow.png\" draggable=\"false\" />\n                    </div>\n                </div>\n                <div className=\"Head-rotateContainer\" style={{ transform: `rotate(${vRot}deg)` }}>\n                    <div className=\"Head-container\">\n                        {/* <img alt=\"head\" className=\"Head-img\" src=\"./media/head-arrow.png\" draggable=\"false\" /> */}\n\n                        {!isShowHeadRotator ? null :\n                            <div className=\"Head-rotate noselect\">\n                                {/* offset is used for the drag's reference */}\n                                <DraggableCore\n                                    // allowAnyClick= boolean,\n                                    // cancel= string,\n                                    // disabled= boolean,\n                                    // enableUserSelectHack= boolean,\n                                    // offsetParent={this.refStandRotateOffset.current} //HTMLElement,\n                                    // grid= [number, number],\n                                    handle=\".Head-rotate-handle\"\n                                    onStart={this.handleRotateStart}\n                                    onDrag={this.handleRotateDrag}\n                                    onStop={this.handleRotateStop}\n                                // onMouseDown= (e= MouseEvent) => void\n                                >\n                                    <div ref={this.refHeadRotateHandle} className=\"Head-rotate-handle\"></div>\n                                </DraggableCore>\n                            </div>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport Head from '../containers/Head'\n\nexport default class Menu extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // pos : {x:0, y:0},\n            // rotateRad : 0\n        };\n    }\n\n    render() {\n        const heads = this.props.heads;\n\n        return (\n            <div className=\"Heads\">\n                {heads.map((head, i) => <Head key={i} head={head} headIndex={i} standIndex={this.props.standIndex}/>)}\n            </div>\n        );\n    }\n}","import React from 'react';\n//import Kinects from '../containers/Kinects'\n// import Draggable from 'react-draggable'; \nimport { DraggableCore } from 'react-draggable';\n// import Draggable, {DraggableCore} from 'react-draggable'; \n// import Stand from '../containers/Stand';\nimport { rotateVector } from '../helpers';\nimport cn from \"classnames\";\n\nimport { encodeRot, decodeRot, encodePosRelativeStand, encodePosForKinectFocusPoint, decodePosRelativeStand, noTouchMove } from '../helpers';\n\nexport default class Kinect extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            moveRelativeStartPos: { x: 0, y: 0 },\n            // pos : {x:0, y:0},\n            // rotateRad : 0\n        };\n\n        this.handleMoveStart = this.handleMoveStart.bind(this);\n        this.handleMoveDrag = this.handleMoveDrag.bind(this);\n        this.handleMoveStop = this.handleMoveStop.bind(this);\n\n        this.handleRotateStart = this.handleRotateStart.bind(this);\n        this.handleRotateDrag = this.handleRotateDrag.bind(this);\n        this.handleRotateStop = this.handleRotateStop.bind(this);\n\n        // Refs\n        this.refKinectRotateHandle = React.createRef();\n    }\n\n    componentDidMount() {\n        noTouchMove(this.refKinectRotateHandle.current);\n    }\n\n    // Move\n    handleMoveStart(e, a) {\n        const curPos = this.getCurrentPos();\n        const { x, y } = a;\n        const pos = { x: x - curPos.x, y: y - curPos.y };\n\n        this.setState({ moveRelativeStartPos: pos });\n        this.props.selectKinect();\n    }\n\n    handleMoveDrag(e, a) {\n        const { x, y } = a;\n        const pos = { x, y }; //: x - origin.x, y: y - origin.y };\n        const rot = decodeRot(this.props.stand.get(\"rot\"));\n        const newPos = encodePosRelativeStand(this.props.menu, rotateVector(pos, rot));//, origin);\n        this.props.kinectMove(newPos);\n    }\n\n    handleMoveStop(e, a) {\n        // this.props.kinectMove(pos);\n        // console.log(\"h stop\", e, a);\n    }\n\n\n    // Rotate\n    handleRotateStart(e, a) {\n        this.props.selectKinect();\n        // console.log(\"hrot str\", e, a);\n    }\n\n    handleRotateDrag(e, a) {\n        const { x, y } = a;\n        var rad = Math.atan2(y, x); // In radians\n        // Then you can convert it to degrees as easy as:\n        var deg = rad * (180 / Math.PI);\n\n        const standRot = decodeRot(this.props.stand.get(\"rot\"));\n        this.props.kinectRotate(encodeRot(deg - standRot));\n    }\n\n    handleRotateStop(e, a) {\n        // console.log(\"hrlt stop\", e, a);\n    }\n\n    getCurrentPos() {\n        try {\n            let pos = decodePosRelativeStand(this.props.kinect.get(\"pos\").toJS());\n            pos.x = isNaN(pos.x) ? 0 : pos.x;\n            pos.y = isNaN(pos.y) ? 0 : pos.y;\n\n            return pos;\n        } catch (e) {\n            console.log(\"error in getCurrentPos\", e);\n            return { x: 0, y: 0 }\n        }\n    }\n\n    render() {\n        const kinect = this.props.kinect;\n\n        if (kinect && kinect.get) {\n            let pos = this.getCurrentPos();\n\n            let rot = kinect.get(\"rot\");\n            rot = isNaN(rot) ? 0 : rot;\n            rot = decodeRot(rot);\n\n            const selectedStandIndex = this.props.menu.get(\"selectedStandIndex\");\n            const selectedKinectIndex = this.props.menu.get(\"selectedKinectIndex\");\n\n            const isSelected = selectedStandIndex === this.props.standIndex && selectedKinectIndex === this.props.kinectIndex;\n\n            const fov = kinect.get(\"fov\");\n            const fovLength = 1000;//1900;\n            let fovHeight = 0;\n\n            if (0 < fov && fov < 180) {\n                const rad = (fov / 2 * Math.PI / 180);\n                fovHeight = fovLength * Math.tan(rad);\n            }\n            const topAdjust = 12; // This is related to the height of half the kinect.\n            const fovStyle = {\n                width: 0,\n                height: 0,\n                borderTop: `${fovHeight}px solid transparent`,\n                borderRight: `${fovLength}px solid rgba(130,0,200,0.1)`,\n                borderBottom: `${fovHeight}px solid transparent`,\n                position: \"absolute\",\n                top: `-${fovHeight - topAdjust}px`,\n                // left: \"12px\",\n                left: 0,\n                zIndex: 2,\n                marginTop: 3,\n                pointerEvents: \"none\" // https://stackoverflow.com/questions/3680429/click-through-a-div-to-underlying-elements\n            }\n\n            const isKinectRotatesHidden = this.props.menu.get(\"isKinectRotatesHidden\");\n            const isForceShowKinectRotatesOnSelect = this.props.menu.get(\"isForceShowKinectRotatesOnSelect\");\n            const isShowKinectRotator = !isKinectRotatesHidden || (isSelected && isForceShowKinectRotatesOnSelect);\n\n            let kinectName = kinect.get(\"name\");\n            let kinectFocalPoints;\n            let kinectFocalPointsForThisKinect;\n            if (kinectName == \"kinect-01\")\n                window.c_kfp = this;\n\n            if (this.props.kinectFocalPoints && this.props.kinectFocalPoints.get) {\n                kinectFocalPointsForThisKinect = this.props.kinectFocalPoints.get(kinectName);\n                if (kinectFocalPointsForThisKinect && kinectFocalPointsForThisKinect.size > 0) {\n                    window.c_klfp2 = kinectFocalPointsForThisKinect;\n\n                    kinectFocalPoints = kinectFocalPointsForThisKinect.toJS().map((kfp, i) => {\n                        const encPos = encodePosForKinectFocusPoint({ x: kfp.z, y: kfp.x * -1 })\n\n                        window.c_tra = {\n                            encPos\n                        }\n                        const styleKinectFocalPoint = {\n                            transform: `translate(${encPos.x}px, ${encPos.y}px)`,\n                            // y: encodePosScale(this.props.menu, kfp.z)\n                        }\n                        // window.c_kk2 = {kfp, enc;\n                        return <div key={i} style={styleKinectFocalPoint} className={`KinectFocalPoint bil KinectFocalPoint-${this.props.kinectIndex}`}>K{kfp.bodyIndex}</div>\n                        // return <div key={i} class={`KinectFocalPoint KinectFocalPoint-${kinectName}` }>K{kfp.bodyIndex}</div>\n                    });\n                }\n            }\n\n            return (\n                <div className={cn(\"Kinect\", { \"Kinect--selected\": isSelected })} >\n                    <DraggableCore\n                        // allowAnyClick= boolean,\n                        // cancel= string,\n                        // disabled= boolean,\n                        // enableUserSelectHack= boolean,\n                        // offsetParent={this.refStandRotateOffset.current} //HTMLElement,\n                        // grid= [number, number],\n                        handle=\".Kinect-camImg\"\n                        onStart={this.handleMoveStart}\n                        onDrag={this.handleMoveDrag}\n                        onStop={this.handleMoveStop}\n                    // onMouseDown= (e= MouseEvent) => void\n                    >\n                        <div className=\"Kinect-container\" style={{ transform: `translate(${pos.x}px, ${pos.y}px)` }}>\n                            <div className=\"Kinect-rotateContainer\" style={{ transform: `rotate(${rot}deg)` }}>\n                                {\n                                    !isShowKinectRotator ? null :\n                                        <div className=\"Kinect-rotate noselect\">\n                                            {/* offset is used for the drag's reference */}\n                                            <DraggableCore\n                                                // allowAnyClick= boolean,\n                                                // cancel= string,\n                                                // disabled= boolean,\n                                                // enableUserSelectHack= boolean,\n                                                // offsetParent={this.refStandRotateOffset.current} //HTMLElement,\n                                                // grid= [number, number],\n                                                handle=\".Kinect-rotate-handle\"\n                                                onStart={this.handleRotateStart}\n                                                onDrag={this.handleRotateDrag}\n                                                onStop={this.handleRotateStop}\n                                            // onMouseDown= (e= MouseEvent) => void\n                                            >\n                                                <div ref={this.refKinectRotateHandle} className=\"Kinect-rotate-handle\"></div>\n                                            </DraggableCore>\n                                        </div>\n                                }\n\n                                <div className=\"Kinect-camImg\"></div>\n\n                                <div className=\"Kinect-fov\" style={fovStyle}>\n                                    {/* <div className=\"Kinect-fov-1\"></div>\n                                    <div className=\"Kinect-fov-2\"></div> */}\n                                </div>\n\n                                <div className=\"Kinect-focalPoints KinectFocalPoints\">\n                                    {kinectFocalPoints}\n                                </div>\n                            </div>\n                        </div>\n                    </DraggableCore>\n                </div>\n            );\n        } else {\n            window.c_whynokin = this;\n            return <div className=\"NoKinect\"></div>\n        }\n    }\n}","import React from 'react';\nimport Kinect from '../containers/Kinect'\n\nexport default class Menu extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // pos : {x:0, y:0},\n            // rotateRad : 0\n        };\n    }\n\n    render() {\n        const kinects = this.props.kinects;\n\n        if (!kinects || kinects.size === 0) {\n            if (typeof window !== 'undefined') {\n                window.c__kinectno = kinects;\n            }\n            return <div className=\"Kinects Kinects--none\"></div>\n        } else {\n            if (typeof window !== 'undefined') {\n                window.c__kinectyes = kinects;\n            }\n            return <div className=\"Kinects\">\n                {kinects.map((kinect, i) => kinect ? <Kinect key={i} kinect={kinect} kinectIndex={i} standIndex={this.props.standIndex}/> : null)}\n            </div>\n        }\n    }\n}","// https://redux.js.org/basics/exampletodolist#entry-point\n// http://localhost:3000/\n\nimport React from 'react'\n// import { fromJS } from 'immutable';\n// import Slider, { Range } from 'rc-slider';\nimport Slider from 'rc-slider';\n\nlet exportSceneMsgTimeout;\n\nlet defaultWebsocketUrl;\nlet defaultSceneUrl;\nif (window.location.hostname === \"localhost\" && window.location.port === \"3000\") {\n    defaultWebsocketUrl = \"ws://localhost:8081/ws\";\n    defaultSceneUrl = \"json/temp.json\";\n} else {\n    defaultWebsocketUrl = 'ws://' + window.location.hostname + \":\" + window.location.port + '/ws';\n    defaultSceneUrl = \"/installation/dev/scene.json\";\n}\n\nexport default class Menu extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sceneUrl: defaultSceneUrl,\n            // sceneUrl : \"/build/json/temp.json\",\n            websocketUrl: defaultWebsocketUrl, //\"ws://localhost:8081/ws\"\n            // sceneUrl : \"/json/temp.json\"\n            // sceneUrl : \"/json/temp2.json\"\n        };\n\n        this.addStand = this.addStand.bind(this);\n        this.addFocalPoint = this.addFocalPoint.bind(this);\n        this.setLoadSceneUrl = this.setLoadSceneUrl.bind(this);\n        this.loadScene = this.loadScene.bind(this);\n        this.loadTempSceneJson = this.loadTempSceneJson.bind(this);\n        this.loadRegSceneJson = this.loadRegSceneJson.bind(this);\n\n        this.addNewCamera = this.addNewCamera.bind(this);\n        this.removeCurrentCamera = this.removeCurrentCamera.bind(this);\n        this.exportSceneToJSON = this.exportSceneToJSON.bind(this);\n        this.setScale = e => { props.setScale(e.target.value) };\n        this.setTranslateX = e => { props.setTranslateX(e.target.value) };\n        this.setTranslateY = e => { props.setTranslateY(e.target.value) };\n\n        // Focal Point\n        this.addFocalPoint = this.addFocalPoint.bind(this);\n\n        this.setWebsocketUrl = e => { this.setState({ websocketUrl: e.target.value }) };\n        this.websocketConnect = this.websocketConnect.bind(this);\n        this.websocketDisconnect = this.websocketDisconnect.bind(this);\n        this.websocketLoadLocalhostUrl = this.websocketLoadLocalhostUrl.bind(this);\n        this.websocketLoadOtherUrl = this.websocketLoadOtherUrl.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadScene();\n        this.websocketConnect();\n    }\n\n    addStand() {\n        this.props.addStand({})\n    }\n\n    addFocalPoint() {\n        this.props.addFocalPoint({})\n    }\n\n    setLoadSceneUrl(e) {\n        const sceneUrl = e.target.value;\n        this.setState({ sceneUrl });\n    }\n\n    exportSceneToJSON() {\n        var stands = this.props.stands.toJS();\n\n        var scene = JSON.stringify({ name: \"export\", stands });\n\n        // document.create\n        var el = document.getElementById(\"clipboard-input\");\n        el.value = scene;\n        el.select();\n        document.execCommand(\"copy\");\n\n        const msg = document.getElementById(\"clipboard-msg\");\n        msg.innerText = \"Copied\";\n        clearTimeout(exportSceneMsgTimeout);\n\n        exportSceneMsgTimeout = setTimeout(() => {\n            msg.innerText = \"\";\n        }, 1000);\n    }\n\n    loadScene() {\n        this.props.loadSceneFromUrl(this.state.sceneUrl);\n    }\n\n    loadTempSceneJson() {\n        this.setState({\n            sceneUrl: \"json/temp.json\"\n        })\n    }\n\n    loadRegSceneJson() {\n        this.setState({\n            sceneUrl: \"/installation/dev/scene.json\"\n        })\n    }\n\n    addNewCamera() {\n        this.props.cameraAddNew(this.props.selectedStandIndex);\n    }\n\n    removeCurrentCamera() {\n        console.log('c_ 12');\n        this.props.cameraRemove(this.props.selectedStandIndex, this.props.selectedCameraIndex);\n    }\n\n    // Web socket connection\n    websocketConnect() {\n        this.props.websocketConnect(this.state.websocketUrl);\n    }\n\n    websocketDisconnect() {\n        this.props.websocketDisconnect();\n    }\n\n    websocketLoadLocalhostUrl() {\n        this.setState({\n            websocketUrl: \"ws://localhost:8081/ws\"\n        })\n    }\n\n    websocketLoadOtherUrl() {\n\n    }\n\n    render() {\n        // {\n        //     \"name\": \"stand0\",\n        //     \"pos\": {\n        //         \"x\": 54,\n        //         \"y\": 13\n        //     },\n        //     \"rot\": 0,\n        //     \"cameras\": [\n        //         {\n        //             \"name\": \"camera0\",\n        //             \"pos\": {\n        //                 \"x\": 0.1,\n        //                 \"y\": 0\n        //             },\n        //             \"rot\": 0,\n        //             \"fov\": 60,\n        //             \"description\": \"Raspberry Pi PiNoir Camera V2 Video Module\"\n        //         }\n        //     ],\n        //     \"heads\": [\n        //         {\n        //             \"name\": \"head0\",\n        //             \"pos\": {\n        //                 \"x\": 0,\n        //                 \"y\": 0\n        //             },\n        //             \"rot\": 0\n        //         }\n        //     ]\n        // }\"\n\n        const standSchema = {\n            \"name\": { type: \"text\" },\n            \"pos\": {\n                type: \"pos\"\n                // type: \"obj\",\n                // obj : { \n                //     x: {type: 'number'},\n                //     y: {type: 'number'}\n                // }\n            },\n            \"rot\": { type: \"number\", min: -1 * Math.PI, max: Math.PI },\n        };\n\n        const cameraSchema = {\n            \"name\": { type: \"text\" },\n            \"pos\": {\n                type: \"pos\"\n                // type: \"obj\",\n                // obj : { \n                //     x: {type: 'number'},\n                //     y: {type: 'number'}\n                // }\n            },\n            \"rot\": { type: \"number\", min: -1 * Math.PI, max: Math.PI },\n            \"fov\": { type: \"number\" },\n            \"description\": { type: \"text\" }\n\n            // \"name\" : {type: \"text\"},\n            // \"pos\": {\n            //     type: \"pos\"\n            //     // type: \"obj\",\n            //     // obj: {\n            //     //     \"x\": { type: \"number\" },\n            //     //     \"y\": { type: \"number\" }\n            //     // }\n            // },\n            // \"rot\": { type: \"number\", min: -1 * Math.PI, max: Math.PI },\n            // \"fov\": { type: \"number\" },\n            // \"description\": { type: \"text\" }\n        };\n\n        const headSchema = {\n            \"name\": { type: \"text\" },\n            \"pos\": {\n                type: \"pos\"\n                // type: \"obj\",\n                // obj: {\n                //     \"x\": { type: \"number\" },\n                //     \"y\": { type: \"number\" }\n                // }\n            },\n            \"rot\": { type: \"number\", min: -1 * Math.PI, max: Math.PI },\n        };\n\n        // `fieldNames` param is of type array. e.g. fieldNames = [0, \"heads\", 0, \"rot\"]\n        const inputHandler = fieldNames => {\n\n            return (e) => {\n                const value = e.target.value;\n\n                this.props.standSetInFields(this.props.selectedStandIndex, fieldNames, value);\n                // this.props.standSetField(this.props.selectedStandIndex, fieldName, value);\n            }\n        }\n\n        // // `fieldNames` param is of type array. e.g. fieldNames = [0, \"heads\", 0, \"rot\"]\n        // const inputHandlerForFieldNames = fieldNames => {\n        //     return (e) => {\n        //         const value = e.target.value;\n        //         this.props.standSetInFields(this.props.selectedStandIndex, fieldNames, value);\n        //     }\n        // }\n\n        const posHandler = (fieldNames, axis) => {\n            return (e) => {\n                let value = parseFloat(e.target.value);\n                if (isNaN(value)) {\n                    value = \"\";\n                }\n\n                // console.log(\"====\", this.props.selectedStandIndex, fieldName, axis, value);\n                this.props.standSetInFields(this.props.selectedStandIndex, [...fieldNames, axis], value);\n            }\n        }\n\n        // const getTextInput = ({label, name, value, onChange}) => {\n        const getTextInput = ({ fieldName, fieldVal, parentFieldNames }) => {\n            return getInput({ fieldName, fieldVal, type: \"text\", parentFieldNames });\n        }\n\n        const getNumberInput = ({ fieldName, fieldVal, parentFieldNames }) => {\n            return getInput({ fieldName, fieldVal, type: \"number\", parentFieldNames });\n        }\n\n        const getPosInput = ({ fieldName, fieldVal, parentFieldNames }) => {\n            const { x, y } = fieldVal && fieldVal.toJS ? fieldVal.toJS() : { x: 0, y: 0 };\n            const fieldNameX = `${fieldName}.x`;\n            const fieldNameY = `${fieldName}.y`;\n\n            window.c_sdfa2 = { fieldName, fieldVal };\n\n            const fieldNames = [...parentFieldNames, fieldName];\n\n            return (\n                <div className=\"Menu-form-posType\">\n                    <label >X</label>\n                    <input className=\"Menu-form-posType-X\" name={fieldNameX} type=\"number\" onChange={posHandler(fieldNames, \"x\")} value={x} />\n                    <label style={{ minWidth: 0 }}>Y</label>\n                    <input className=\"Menu-form-posType-Y\" name={fieldNameY} type=\"number\" onChange={posHandler(fieldNames, \"y\")} value={y} />\n                </div>\n            );\n        }\n\n        const getInput = ({ fieldName, fieldVal, type, parentFieldNames }) => {\n            const fieldNames = [...parentFieldNames, fieldName];\n            return (\n                <div>\n                    <label htmlFor={fieldName}>{fieldName}</label>\n                    <input name={fieldName} type={type} onChange={inputHandler(fieldNames)} value={fieldVal} />\n                </div>\n            )\n        }\n\n        // Got through each for schema... then get associated to object\n        // The parent field names is in case the onChange needs to pass along more field names for the stand\n        const getInputsBySchema = ({ schema, immutableObj, parentFieldNames = [] }) => {\n            if (!immutableObj || !immutableObj.get) {\n                return null;\n            }\n\n            var fields = Object.keys(schema);\n\n            return fields.map(fieldName => {\n                const fieldVal = immutableObj.get(fieldName);\n                // const type = fields[fieldName] ? fields[fieldName].type : \"\";\n\n                // console.log(\"fieldVal\", fieldVal)\n\n                switch (schema[fieldName].type) {\n                    case \"text\":\n                        return <span key={fieldName}>{getTextInput({ fieldName, fieldVal, parentFieldNames })}</span>\n                    case \"number\":\n                        return <span key={fieldName}>{getNumberInput({ fieldName, fieldVal, parentFieldNames })}</span>\n                    // case \"array\":\n                    //     break;\n                    case \"pos\":\n                        return <span key={fieldName}>{getPosInput({ fieldName, fieldVal, parentFieldNames })}</span>\n                    case \"obj\":\n                        return <div key={fieldName}>OBJ - {fieldName}</div>\n                    default:\n                        return null;\n                }\n            })\n        }\n\n        // const standSchema = {\n        //     \"name\": { type: \"text\" },\n        //     \"pos\": { type: \"obj\", obj : { x: {type: 'number', y: {type: 'number'}}} },\n        //     \"rot\": { type: \"number\"},\n        //     \"cameras\": {\n        //         type: \"array\", \n        //         arrayObj : {\n        //             \"name\" : {type: \"text\"},\n        //             \"pos\": {\n        //                 type: \"obj\",\n        //                 obj: {\n        //                     \"x\": { type: \"number\" },\n        //                     \"y\": { type: \"number\" }\n        //                 }\n        //             },\n        //             \"rot\": { type: \"number\" },\n        //             \"fov\": { type: \"number\" },\n        //             \"description\": { type: \"text\" }\n        //         }\n        //     },\n        //     \"heads\": {\n        //         type: \"array\",\n        //         arrayObj : {\n        //             \"name\" : {type: \"text\"},\n        //             \"pos\": {\n        //                 type: \"obj\",\n        //                 obj: {\n        //                     \"x\": { type: \"number\" },\n        //                     \"y\": { type: \"number\" }\n        //                 }\n        //             },\n        //             \"rot\": { type: \"number\" },\n        //         }\n        //     }\n        // };\n\n        const stands = this.props.stands;\n        const menu = this.props.menu;\n        const selectedStandIndex = this.props.selectedStandIndex;\n        const selectedHeadIndex = menu.get(\"selectedHeadIndex\");\n        const selectedCameraIndex = menu.get(\"selectedCameraIndex\");\n        const scale = menu.get(\"scale\");\n        const translateX = menu.getIn([\"translate\", \"x\"]);\n        const translateY = menu.getIn([\"translate\", \"y\"]);\n\n        const getStandInfo = () => {\n            if (stands.size > 0 && stands.get) {\n                const stand = stands.get(selectedStandIndex);\n                if (stand) {\n                    return {\n                        selectedStand: stand,\n                        cameras: stand && stand.get ? stand.get(\"cameras\") : [],\n                        heads: stand && stand.get ? stand.get(\"heads\") : []\n                    }\n                }\n            }\n\n            return {\n                selectedStand: {},\n                cameras: [],\n                heads: []\n            };\n        }\n\n        const { selectedStand, cameras, heads } = getStandInfo();\n\n        let standOptions = stands.map((stand, i) => {\n            return <option key={i} value={i}>{i} - {stand.get(\"name\")}</option>\n        });\n\n        let defaultStandOption = <option key={\"no selection\"} value=\"\">None selected</option>;\n\n        standOptions = ([defaultStandOption]).concat(standOptions);\n\n        let cameraOptions;\n        if (cameras) {\n            cameraOptions = cameras.map((camera, i) => {\n                return <option key={i} value={i}>{i} - {camera.get(\"name\")}</option>\n            });\n        }\n\n        const headOptions = heads.map((head, i) => {\n            return <option key={i} value={i}>{i} - {head.get(\"name\")}</option>\n        });\n\n        const getStandForm = () => {\n            return getInputsBySchema({ schema: standSchema, immutableObj: selectedStand });\n        }\n\n        const getHeadForm = () => {\n            const selectedHead = heads && heads.get ? heads.get(selectedHeadIndex) : undefined;\n            if (selectedHead !== undefined) {\n                return getInputsBySchema({ schema: headSchema, immutableObj: selectedHead, parentFieldNames: [\"heads\", selectedHeadIndex] });\n            } else {\n                return undefined;\n            }\n        }\n\n        const getCameraForm = () => {\n            const selectedCamera = cameras && cameras.get ? cameras.get(selectedCameraIndex) : undefined;\n            if (selectedCamera !== undefined) {\n                return getInputsBySchema({ schema: cameraSchema, immutableObj: selectedCamera, parentFieldNames: [\"cameras\", selectedCameraIndex] });\n            } else {\n                return undefined;\n            }\n        }\n\n        const standInputs = getStandForm();\n\n        const headInputs = getHeadForm();\n\n        const cameraInputs = getCameraForm();\n\n        const isStandRotatesHidden = this.props.menu.get(\"isStandRotatesHidden\");\n        const isCameraRotatesHidden = this.props.menu.get(\"isCameraRotatesHidden\");\n        const isHeadRotatesHidden = this.props.menu.get(\"isHeadRotatesHidden\");\n\n        const isForceShowStandRotatesOnSelect = this.props.menu.get(\"isForceShowStandRotatesOnSelect\");\n        const isForceShowHeadRotatesOnSelect = this.props.menu.get(\"isForceShowHeadRotatesOnSelect\");\n        const isForceShowCameraRotatesOnSelect = this.props.menu.get(\"isForceShowCameraRotatesOnSelect\");\n\n        const transformLabelStyles = { width: 120 };\n\n        // Websocket connection buttons\n        const websocketStatus = this.props.menu.get(\"websocketStatus\");\n        let websocketConnectionButton;\n\n        if (websocketStatus === \"open\") {\n            websocketConnectionButton = <button onClick={this.websocketDisconnect}>Disconnect</button>\n        } else if (websocketStatus === \"connecting\") {\n            websocketConnectionButton = <button disabled={true}>Connecting</button>\n        } else {\n            websocketConnectionButton = <button onClick={this.websocketConnect}>Connect</button>\n        }\n\n        // Inputs for stand, head, camera\n        let standDetails;\n\n        if (selectedStandIndex >= 0) {\n            standDetails = (\n                <div>\n                    <div className=\"Menu-section Menu-section--stand\">\n                        <div>\n                            <label className=\"Menu-form-label\">Stand</label><br />\n                            <select value={selectedStandIndex} onChange={(e) => this.props.selectStand(e.target.value)}>\n                                {standOptions}\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"Menu-section Menu-section--standInputs\" >\n                        {standInputs}\n                    </div>\n                    <div className=\"Menu-section Menu-section--camera\" style={{ paddingLeft: \"20px\", float: \"left\" }}>\n                        <div>\n                            <label className=\"Menu-form-label\">Camera</label><br />\n                            <select value={selectedCameraIndex} onChange={(e) => this.props.selectCamera(e.target.value)}>\n                                {cameraOptions}\n                            </select>\n                        </div>\n                        <div>\n                            <button onClick={this.addNewCamera}>Add New</button>\n                        </div>\n                        <div>\n                            <button onClick={this.removeCurrentCamera}>Remove Current</button>\n                        </div>\n                    </div>\n                    <div className=\"Menu-section Menu-section--cameraInputs\" >\n                        {cameraInputs}\n                    </div>\n\n                    <div className=\"Menu-section Menu-section--head\" style={{ paddingLeft: \"20px\", float: \"left\" }}>\n                        <div>\n                            <label className=\"Menu-form-label\">Head</label><br />\n                            <select value={this.props.menu.get(\"selectedHeadIndex\")} onChange={(e) => this.props.selectHead(e.target.value)}>\n                                {headOptions}\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"Menu-section Menu-section--headInputs\" >\n                        {headInputs}\n                    </div>\n                </div>\n            );\n        }\n\n        // Focal Point details\n        let focalPointDetails;\n\n        return (\n            <div className=\"Menu\">\n                <div className=\"Menu-zoomer\">\n                    <div className=\"Menu-zoomer-scale\">\n                        <Slider\n                            min={1}\n                            max={400}\n                            vertical={true}\n                            onChange={this.props.setScale}\n                            value={parseFloat(scale)}\n                        />\n                    </div>\n                    <div className=\"Menu-zoomer-translateY\">\n                        <Slider\n                            min={-3000}\n                            max={3000}\n                            vertical={true}\n                            onChange={val => this.props.setTranslateY(val)}\n                            value={parseFloat(translateY)}\n                        />\n                    </div>\n                    <div className=\"Menu-zoomer-translateX\">\n                        <Slider\n                            min={-1500}\n                            max={3000}\n                            onChange={this.props.setTranslateX}\n                            value={parseFloat(translateX)}\n                        />\n                    </div>\n                </div>\n                <div>\n                    <div className=\"Menu-section\">\n                        <div className=\"Menu-bigButton\" onClick={this.addStand}>Add Stand</div>\n                    </div>\n                    <div className=\"Menu-section\">\n                        <div className=\"Menu-bigButton\" onClick={this.addFocalPoint}>Add Focal Point</div>\n                    </div>\n                    <div className=\"Menu-section\">\n                        {/* <span onClick={ajaxUrl.bion} style={{cursor: \"pointer\"}}>restart</span> <span style={{cursor: \"pointer\"}}>stop</span> */}\n                        <a href={`http://${document.location.hostname}:8000/restart?service=boss`} target=\"_blank\" style={{cursor: \"pointer\"}}>restart</a>&nbsp; &nbsp; &nbsp;\n                        <a href={`http://${document.location.hostname}:8000/stop?service=boss`} target=\"_blank\" style={{marginLeft: 20, cursor: \"pointer\"}}>stop</a>\n                    </div>\n                    {standDetails}\n                    {focalPointDetails}\n                    <div style={{ clear: \"both\" }}></div>\n                </div>\n                <div style={{ marginTop: 15 }}>\n                    <div style={{ display: \"inline-block\", background: \"#FBB\", padding: \"5px\" }}>\n                        <div className=\"Menu-loadScene\">\n                            <label>Import Scene:</label>\n                            <input style={{ width: 200 }} placeholder=\"Scene Url\" value={this.state.sceneUrl} onChange={this.setLoadSceneUrl} />&nbsp;\n                            <button onClick={this.loadScene}>Load</button>&nbsp;<button onClick={this.loadTempSceneJson}>Temp</button>&nbsp;<button onClick={this.loadRegSceneJson}>Reg</button>\n                        </div><div className=\"Menu-getScene\">\n                            <label>Export Scene:</label>\n                            <input id=\"clipboard-input\" style={{ width: 200 }} placeholder=\"This will be populated on 'Copy to clipboard'.\" />&nbsp;\n                            <button onClick={this.exportSceneToJSON}>Copy to clipboard</button>\n                            <span id=\"clipboard-msg\"></span>\n                        </div>\n                    </div>\n                    <div style={{ display: \"inline-block\", background: \"#BFB\", padding: \"5px\" }}>\n                        <div className=\"Menu-scaleScene\">\n                            <label style={transformLabelStyles}>Scale Scene:</label>\n                            <input type=\"number\" style={{ width: 100 }} placeholder=\"Scale\" value={scale} onChange={this.setScale} />&nbsp;\n                    </div>\n                        <div className=\"Menu-translateScene\">\n                            <label style={transformLabelStyles}>Translate Scene:</label>\n                            <input type=\"number\" style={{ width: 45 }} placeholder=\"x\" value={translateX} onChange={this.setTranslateX} />&nbsp;\n                            <input type=\"number\" style={{ width: 45 }} placeholder=\"y\" value={translateY} onChange={this.setTranslateY} />&nbsp;\n                        </div>\n                    </div>\n                    <div style={{ display: \"inline-block\", background: \"#BBF\", padding: \"5px\" }}>\n                        <div className=\"Menu-websocket\">\n                            <label>Websocket Url:</label><span id=\"websocket-msg\"></span><br />\n                            <input type=\"text\" style={{ width: 200 }} placeholder=\"Websocket Url\" value={this.state.websocketUrl} onChange={this.setWebsocketUrl} />&nbsp;\n\n                            {websocketConnectionButton}&nbsp;\n                            <button onClick={this.websocketLoadLocalhostUrl}>Autofill localhost:8081</button>&nbsp;\n                            {/* <button onClick={this.websocketLoadOtherUrl}>Other URL</button>&nbsp; */}\n                        </div>\n                    </div>\n                </div>\n                <div style={{ display: \"inline-block\", background: \"#FFFFEE\", padding: \"5px\" }}>\n                    Show Rotates:&nbsp;\n                    {/* <button onClick={this.props.menuToggleHideHeadRotates}>{isStandRotatesHidden ? \"Show\" : \"Hide\"} Stand</button>\n                    <button onClick={this.props.menuToggleHideCameraRotates}>{isCameraRotatesHidden ? \"Show\" : \"Hide\"} Camera</button>\n                    <button onClick={this.props.menuToggleHideStandRotates}>{isHeadRotatesHidden ? \"Show\" : \"Hide\"} Head</button>\n                    <button onClick={this.props.menuToggleHideStandRotates}>{isHeadRotatesHidden ? \"Show\" : \"Hide\"} Head</button> */}\n                    Stand<input name=\"Stand\" type=\"checkbox\" checked={!isStandRotatesHidden} onChange={this.props.menuToggleHideStandRotates} />&nbsp;\n                    Head<input name=\"Head\" type=\"checkbox\" checked={!isHeadRotatesHidden} onChange={this.props.menuToggleHideHeadRotates} />&nbsp;\n                    Camera<input name=\"Camera\" type=\"checkbox\" checked={!isCameraRotatesHidden} onChange={this.props.menuToggleHideCameraRotates} />&nbsp;\n                    <button onClick={this.props.menuShowAllRotates}>Show All</button>\n                    <button onClick={this.props.menuHideAllRotates}>Hide All</button>\n                    {/* <button>Toggle visuals</button> */}\n                </div>\n                <div style={{ display: \"inline-block\", background: \"#FFEEFF\", padding: \"5px\" }}>\n                    Force Show On Select:&nbsp;\n                    Stand<input name=\"Stand\" type=\"checkbox\" checked={isForceShowStandRotatesOnSelect} onChange={this.props.menuToggleForceShowStandRotatesOnSelect} />&nbsp;\n                    Head<input name=\"Head\" type=\"checkbox\" checked={isForceShowHeadRotatesOnSelect} onChange={this.props.menuToggleForceShowHeadRotatesOnSelect} />&nbsp;\n                    Camera<input name=\"Camera\" type=\"checkbox\" checked={isForceShowCameraRotatesOnSelect} onChange={this.props.menuToggleForceShowCameraRotatesOnSelect} />&nbsp;\n                    <button onClick={this.props.menuEnableForceShowAllRotatesOnSelect}>Show All</button>\n                    <button onClick={this.props.menuDisableForceShowAllRotatesOnSelect}>Hide All</button>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport cn from 'classnames'\nimport {decodePos} from '../helpers';\n// import {encodeRot, decodeRot, encodePos, decodePos} from '../helpers';\n\nconst lineStyle = (x1, y1, x2, y2, startFade) => {\n    const distance = Math.sqrt(((x1 - x2) * (x1 - x2)) + ((y1 - y2) * (y1 - y2)));\n\n    const xMid = (x1+x2)/2;\n    const yMid = (y1+y2)/2;\n\n    const slopInRad = Math.atan2(y1 - y2, x1 - x2);\n    // const salopeInDegrees = (slopInRad * 180) / Math.PI;\n\n    const style = {\n        position: \"absolute\",\n        width : distance,\n        marginLeft : distance / -2,\n        left: xMid,\n        top: yMid,\n        transform: `rotate(${slopInRad}rad)`,\n        border: \"1.5px solid #f224f5\",\n        // opacity: startFade ? 0.9 : 1\n    }\n\n    return style;\n}\n\n\nexport default class Menu extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            startFade : false\n        };\n    }\n\n    componentDidMount() {\n        this.setState({\n            startFade: true\n        })\n        \n    }\n\n    render() {\n        window.c_ML1 = { thi: this, menu : this.props.menu, decodePos};\n\n        let pos0 = decodePos(this.props.menu, {x: this.props.coords[0], y: this.props.coords[1]});\n        let pos1 = decodePos(this.props.menu, {x: this.props.coords[2], y: this.props.coords[3]});\n        // let delta = {x : pos1.x - pos0.x, y: pos1.y - pos0.y};\n        let style = lineStyle(pos0.x, pos0.y, pos1.x, pos1.y, this.state.startFade);\n\n        // return (\n        //     <div className=\"MotionLine\" >\n        //         <div style={style}>\n        //             shape = {this.props.shape}<br/>\n        //             pos: ({pos0.x}, {pos0.y}) -> {pos1.x}, {pos1.y}\n        //         </div>\n        //     </div>\n        // )\n        return (\n            <div className={cn(\"MotionLine\", {fadeOut : this.state.startFade})} style={style}/>\n        )\n        // return (\n        //     <div className=\"MotionLine\" style={{position: \"absolute\"}}>\n        //         shape = {this.props.shape}<br/>\n        //         coords = {this.props.coords.map(coord => <span>{coord},</span>)}<br/>\n        //         pos: {pos0.x}, {pos0.y} - {pos1.x}, {pos1.y}\n        //         <Line x1={pos0.x} y1={pos0.y} x2={pos1.x} y2={pos1.y}/>\n        //     </div>\n        // )\n    }\n}","import React from 'react'\nimport MotionLine from '../containers/MotionLine';\n\nexport default class Menu extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n        };\n    }\n\n    render() {\n        // let linesJS; \n        let displayedLines = [];\n        \n        try {\n            // linesJS = this.props.motionLines.get(\"lines\").toList().toJS();\n            // // console.log('linesJS', linesJS);\n            // if (linesJS.length >= 2) {\n            //     window.c_ljs = {linesJS, mls : this.props.motionLines};\n            // }\n\n            this.props.motionLines.get(\"lines\").forEach((line, id) => { \n                const lineJS = line.toJS();\n                displayedLines.push(<MotionLine key={id} coords={lineJS.coords} shape={lineJS.shape}/>)\n            })\n\n            // this.props.motionLines.get(\"lines\").toJS().forEach((line, id) => {\n            //     displayedLines.push(<MotionLine key={id} coords={line.coords} shape={line.shape}/>)\n            // });\n\n            // console.log(displayedLines);\n\n            // displayedLines = linesJS.map((line, i) => <MotionLine key={i} coords={line.coords} shape={line.shape}/>);\n\n            // showVals = linesJS.map((line, i) => <div key={i}>key={i} coords={line.coords.join(',')} shape={line.shape}</div>);\n            \n            \n            // shape = {this.props.shape}<br/>\n            //         coords = {this.props.coords.map(coord => <span>{coord},</span>)}<br/>\n            //         pos: {pos0.x}, {pos0.y} - {pos1.x}, {pos1.y}\n\n\n            // motionLines = this.props.motionLines.get(\"lines\").toList().toJS().map((line, id) => {\n            //     return <div key={id}>{line.get(\"coords\")}</div>\n            // }).toJS();\n            \n        } catch(e) {\n            console.log('Error', e);\n        }\n\n        \n        return (\n            <div className=\"MotionLines\" style={{position: \"absolute\"}}>\n                <div style={{position: \"absolute\"}}>{displayedLines}</div>\n            </div>\n        )\n        // return (\n        //     <div className=\"MotionLines\" style={{position: \"absolute\"}}>\n        //         Motion lines: \n        //         <div style={{position: \"absolute\"}}>{displayedLines}</div>\n        //         <div style={{position: \"absolute\"}}>{showVals}</div>\n        //     </div>\n        // )\n    }\n}","import React from \"react\";\n//import Cameras from '../containers/Cameras'\n// import Draggable from 'react-draggable';\n// // -> Needed? import { DraggableCore } from 'react-draggable';\n// import Draggable, {DraggableCore} from 'react-draggable';\n// import Stand from '../containers/Stand';\nimport { rotateVector } from \"../helpers\";\n// import cn from \"classnames\";\nimport axios from \"axios\";\n\nimport { decodeRot, encodePosScale, decodePosScale } from \"../helpers\";\n// import {encodeRot, decodeRot, encodePosScale, decodePosScale} from '../helpers';\n\nwindow.c_a = axios;\n\nexport default class Popup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // moveRelativeStartPos: { x: 0, y: 0 },\n            // pos : {x:0, y:0},\n            // rotateRad : 0\n        };\n\n        this.handleMoveStart = this.handleMoveStart.bind(this);\n        this.handleMoveDrag = this.handleMoveDrag.bind(this);\n        this.handleMoveStop = this.handleMoveStop.bind(this);\n\n        this.closePopupInfo = this.closePopupInfo.bind(this);\n        this.makeRequest = this.makeRequest.bind(this);\n        this.getEndpoints = this.getEndpoints.bind(this);\n\n        this.popupEndpoints = [\n            {\n                categoryName: \"Head\",\n                endpoints: [\n                    {\n                        label: \"Find Zero\",\n                        port: 8080,\n                        route: \"/find_zero\"\n                    }\n                ]\n            },\n            {\n                categoryName: \"Leds\",\n                endpoints: [\n                    {\n                        label: \"Rainbow\",\n                        port: 8082,\n                        route: \"/run/rainbow\"\n                    },\n                    {\n                        label: \"Lowred\",\n                        port: 8082,\n                        route: \"/run/lowred\"\n                    },\n                    {\n                        label: \"Bounce\",\n                        port: 8082,\n                        route: \"/run/bounce\"\n                    },\n                    {\n                        label: \"Off\",\n                        port: 8082,\n                        route: \"/run/off\"\n                    }\n                ]\n            },\n            {\n                categoryName: \"Host\",\n                endpoints: [\n                    {\n                        label: \"Restart\",\n                        port: 80,\n                        route: \"/restart-host\"\n                    },\n                    {\n                        label: \"Shutdown-host\",\n                        port: 80,\n                        route: \"/shutdown-host?pw=1199\"\n                    }\n                ]\n            }\n        ];\n        // this.handleRotateStart = this.handleRotateStart.bind(this);\n        // this.handleRotateDrag = this.handleRotateDrag.bind(this);\n        // this.handleRotateStop = this.handleRotateStop.bind(this);\n    }\n\n    makeRequest(url) {\n        window.c_ww = this;\n        \n        axios\n            .get(url)\n            .then(data => {\n                console.log(`Done ${url} `, JSON.stringify(data));\n            })\n            .catch(err => {\n                console.log(`Err with request: ${err}`);\n                alert(`Err with request: ${err}`);\n            });\n    }\n\n    getEndpoints() {\n        const getRequestButton = ({ label, port, route }) => {\n            console.log({ label, port, route });\n            const getUrl = `http://${this.props.headName}.head.service.consul:${port}${route}`;\n\n            return (\n                <button\n                    style={{ marginRight: 15 }}\n                    onClick={this.makeRequest.bind(this, getUrl)}\n                >\n                    {label}\n                </button>\n            );\n        };\n\n        return this.popupEndpoints.map(({ categoryName, endpoints }) => {\n            // const { categoryName, endpoints } = endpointCategory;\n\n            return (\n                <>\n                    <p>\n                        {categoryName}\n                        <br />\n                        {endpoints.map(({ label, port, route }) => {\n                            // const {label, port, route} = endpoint\n                            return getRequestButton({ label, port, route });\n                        })}\n                    </p>\n                </>\n            );\n        });\n    }\n\n    closePopupInfo() {\n        this.props.popupInfoRemove();\n    }\n\n    // Move\n    handleMoveStart(e, a) {\n        const curPos = this.getCurrentPos();\n        const { x, y } = a;\n        const pos = { x: x - curPos.x, y: y - curPos.y };\n\n        this.setState({ moveRelativeStartPos: pos });\n        // this.props.selectCamera();\n    }\n\n    handleMoveDrag(e, a) {\n        const { x, y } = a;\n        // const origin = this.state.moveRelativeStartPos;\n        // const pos = { x: x - origin.x, y: y - origin.y };\n        const pos = { x, y }; //: x - origin.x, y: y - origin.y };\n        // const pos = { x, y }; //: x - origin.x, y: y - origin.y };\n        const rot = decodeRot(this.props.stand.get(\"rot\"));\n\n        const newPos = encodePosScale(this.props.menu, rotateVector(pos, rot)); //, origin);\n\n        this.props.popupInfoMove(newPos);\n    }\n\n    handleMoveStop(e, a) {\n        // this.props.cameraMove(pos);\n        // console.log(\"h stop\", e, a);\n    }\n\n    // // Rotate\n    // handleRotateStart(e, a) {\n    //     this.props.selectCamera();\n    //     // console.log(\"hrot str\", e, a);\n    // }\n\n    // handleRotateDrag(e, a) {\n    //     const { x, y } = a;\n    //     var rad = Math.atan2(y, x); // In radians\n    //     // Then you can convert it to degrees as easy as:\n    //     var deg = rad * (180 / Math.PI);\n\n    //     const standRot = decodeRot(this.props.stand.get(\"rot\"));\n    //     this.props.cameraRotate(encodeRot(deg - standRot));\n    // }\n\n    // handleRotateStop(e, a) {\n    //     // console.log(\"hrlt stop\", e, a);\n    // }\n\n    getCurrentPos() {\n        // let pos = this.props.get(\"pos\").toJS();\n        let pos = this.props.popupInfo.get(\"pos\").toJS();\n        pos.x = isNaN(pos.x) ? 0 : pos.x;\n        pos.y = isNaN(pos.y) ? 0 : pos.y;\n\n        return decodePosScale(this.props.menu, pos);\n        // return pos;\n    }\n\n    render() {\n        // let pos = this.getCurrentPos();\n\n        let rootVal = \"http://consul-fe.service.consul\";\n        // if (typeof window !== 'undefined') {\n        //     rootVal = typeof location !== \"undefined\" && location.host === \"127.0.0.1:8081\" ? document.location.hostname : \"http://consul-fe.service.consul\";\n        // } else {\n        if (\n            typeof window !== \"undefined\" &&\n            document &&\n            document.location &&\n            document.location.hostname\n        ) {\n            rootVal =\n                document.location.hostname === \"127.0.0.1\"\n                    ? document.location.hostname\n                    : \"http://consul-fe.service.consul\";\n        }\n        // }\n\n        const consulInstallationUrl = `${rootVal}:8500/ui/dc1/kv/the-heads/`;\n        // installation\n\n        if (typeof window !== \"undefined\") {\n            window.c__t23 = this;\n        }\n\n        const standName = this.props.stand.get(\"name\");\n\n        // // const heads = this.props.stand.getIn([\"heads\"]);\n        // // const headRefName = heads ? heads.keySeq().first() : \"\";\n        // const headName = \"asd\";//this.props.stand.getIn([\"heads\", 0, headRefName]);\n\n        // // const cameras = this.props.stand.getIn([\"cameras\"]);\n        // // const cameraRefName = cameras ? cameras.keySeq().first() : \"\";\n        // // // const cameraName = this.props.stand.getIn([\"cameras\"]).keySeq().first();\n        // const cameraName = \"ds\"; //this.props.stand.getIn([\"cameras\", 0, cameraRefName]);\n\n        // // // const kinectName = this.props.stand.getIn([\"kinects\", 0, \"name\"]);\n        // // const kinects = this.props.stand.getIn([\"kinects\"]);\n        // // const kinectRefName = kinects ? kinects : kinects.keySeq().first();\n        // const kinectName = \"dfa\"; //this.props.stand.getIn([\"kinects\", 0, kinectRefName]);\n\n        const heads = this.props.stand.getIn([\"heads\"]);\n        const headRefName = heads && heads.keySeq ? heads.keySeq().first() : \"\";\n        const headName = this.props.stand.getIn([\"heads\", 0, headRefName]);\n\n        const cameras = this.props.stand.getIn([\"cameras\"]);\n        // const cameraRefName = cameras && cameras.keySeq ? cameras.keySeq().first() : \"\";\n        const cameraName = this.props.stand.getIn([\"cameras\"]).keySeq().first();\n        // const cameraName = this.props.stand.getIn([\"cameras\", 0, cameraRefName]);\n\n        const kinects = this.props.stand.getIn([\"kinects\"]);\n        const kinectName = this.props.stand.getIn([\"kinects\", 0, \"name\"]);\n        // const kinectRefName = kinects && kinects.keySeq ? kinects : kinects.keySeq().first();\n        // const kinectName = this.props.stand.getIn([\"kinects\", 0, kinectRefName]);\n        // const kinectName = this.props.stand.getIn([\"kinects\", 0, kinectRefName]);\n\n        function getLink(type, name) {\n            if (name) {\n                return (\n                    <a\n                        style={{ display: \"block\" }}\n                        target=\"_blank\"\n                        href={`http://${consulInstallationUrl}/${type}/${name}.yaml/edit`}\n                    >\n                        {name}\n                    </a>\n                );\n            } else {\n                return undefined;\n            }\n        }\n\n        let standLink = getLink(\"stands\", standName);\n        let headLink = getLink(\"heads\", headName);\n        let cameraLink = getLink(\"cameras\", cameraName);\n        let kinectLink = getLink(\"kinects\", kinectName);\n\n        let endpoints = this.getEndpoints();\n\n        return (\n            <div className=\"PopupInfo\">\n                Links:\n                {standLink}\n                {headLink}\n                {cameraLink}\n                {kinectLink}\n                {endpoints}\n                <div\n                    className=\"PopupInfo-closeButton\"\n                    onClick={this.closePopupInfo}\n                >\n                    X\n                </div>\n            </div>\n        );\n\n        // let rot = camera.get(\"rot\");\n        // rot = isNaN(rot) ? 0 : rot;\n        // rot = decodeRot(rot);\n\n        // const selectedStandIndex = this.props.menu.get(\"selectedStandIndex\");\n        // const selectedCameraIndex = this.props.menu.get(\"selectedCameraIndex\");\n\n        // const isSelected = selectedStandIndex === this.props.standIndex && selectedCameraIndex === this.props.cameraIndex;\n\n        // const fov = camera.get(\"fov\");\n        // const fovLength = 500;\n        // let fovHeight = 0;\n\n        // if (0 < fov && fov < 180) {\n        //     const rad = (fov/2 * Math.PI/180);\n        //     fovHeight = fovLength * Math.tan(rad);\n        // }\n        // const topAdjust = 12; // This is related to the height of half the camera.\n        // const fovStyle = {\n        //     width: 0,\n        //     height: 0,\n        //     borderTop: `${fovHeight}px solid transparent`,\n        //     borderRight: `${fovLength}px solid rgba(0,100,0,0.1)`,\n        //     borderBottom: `${fovHeight}px solid transparent`,\n        //     position: \"absolute\",\n        //     top: `-${fovHeight - topAdjust}px`,\n        //     left: \"12px\",\n        //     zIndex: 2,\n        //     pointerEvents: \"none\" // https://stackoverflow.com/questions/3680429/click-through-a-div-to-underlying-elements\n        // }\n\n        // window.c_fov = {fovHeight, fovLength, fov, fovStyle};\n\n        // const areRotatesHidden = this.props.menu.get(\"areRotatesHidden\");\n\n        // return (\n        //     <div className={cn(\"Camera\", { \"Camera--selected\": isSelected })} >\n        //         <DraggableCore\n        //             // allowAnyClick= boolean,\n        //             // cancel= string,\n        //             // disabled= boolean,\n        //             // enableUserSelectHack= boolean,\n        //             // offsetParent={this.refStandRotateOffset.current} //HTMLElement,\n        //             // grid= [number, number],\n        //             handle=\".Camera-camImg\"\n        //             onStart={this.handleMoveStart}\n        //             onDrag={this.handleMoveDrag}\n        //             onStop={this.handleMoveStop}\n        //         // onMouseDown= (e= MouseEvent) => void\n        //         >\n        //             <div className=\"Camera-container\" style={{ transform: `translate(${pos.x}px, ${pos.y}px)` }}>\n        //                 <div className=\"Camera-rotateContainer\" style={{ transform: `rotate(${rot}deg)` }}>\n        //                     {\n        //                         areRotatesHidden ? null :\n        //                             <div className=\"Camera-rotate noselect\">\n        //                                 {/* offset is used for the drag's reference */}\n        //                                 <DraggableCore\n        //                                     // allowAnyClick= boolean,\n        //                                     // cancel= string,\n        //                                     // disabled= boolean,\n        //                                     // enableUserSelectHack= boolean,\n        //                                     // offsetParent={this.refStandRotateOffset.current} //HTMLElement,\n        //                                     // grid= [number, number],\n        //                                     handle=\".Camera-rotate-handle\"\n        //                                     onStart={this.handleRotateStart}\n        //                                     onDrag={this.handleRotateDrag}\n        //                                     onStop={this.handleRotateStop}\n        //                                 // onMouseDown= (e= MouseEvent) => void\n        //                                 >\n        //                                     <div className=\"Camera-rotate-handle\"></div>\n        //                                 </DraggableCore>\n        //                             </div>\n        //                     }\n\n        //                     <div className=\"Camera-camImg\"></div>\n\n        //                     <div className=\"Camera-fov\" style={fovStyle}>\n        //                         <div className=\"Camera-fov-1\"></div>\n        //                         <div className=\"Camera-fov-2\"></div>\n        //                     </div>\n        //                 </div>\n        //             </div>\n        //         </DraggableCore>\n        //     </div>\n        // );\n    }\n}\n","import React from 'react'\n//import Heads from '../containers/Heads'\n// import Draggable, {DraggableCore} from 'react-draggable'; \nimport Stand from '../containers/Stand';\n// import FocalPoint from '../containers/FocalPoint';\nimport FocalPoints from '../containers/FocalPoints';\n// import Popups from '../components/Popups';\nimport UnderVisuals from '../containers/UnderVisuals';\n\nexport default class Menu extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n        };\n\n        // this.handleDrag = this.handleDrag.bind(this);\n        // this.handleDragEnd = this.handleDragEnd.bind(this);\n        // this.handleDragEnter = this.handleDragEnter.bind(this);\n        // this.handleDragExit = this.handleDragExit.bind(this);\n        // this.handleDragLeave = this.handleDragLeave.bind(this);\n        // this.handleDragOver = this.handleDragOver.bind(this);\n        // this.handleDragStart = this.handleDragStart.bind(this);\n    }\n\n    componentDidMount() {\n        var html = document.getElementsByTagName(\"html\")[0];\n\n\n        html.addEventListener(\"mousedown\", (e) => {\n            if (e.target.tagName.toUpperCase() === \"HTML\") {\n                this.props.menuDeselectStandAndAll();\n            }\n        })\n\n        html.addEventListener(\"touchstart\", (e) => {\n            if (e.target.tagName.toUpperCase() === \"HTML\") {\n                this.props.menuDeselectStandAndAll();\n            }\n        })\n    }\n\n    render() {\n        window.c_ko = this;\n\n        const stands = this.props.stands.map((stand, i) => {\n            return <Stand key={i} index={i} stand={stand} />\n        });\n\n        const standsContainerStyle = {\n            position: \"relative\"\n        }\n\n        // let kinects = [];\n        // try {\n        //     var tempKinectsImmObj = this.props.kinects.get(\"kinects\");\n        //     // var tempKinectsJSObj = tempKinectsImmObj.toJS();\n            \n        //     // for (var kinectName in tempKinectsJSObj) {\n        //     // tempKinectsImmObj.keyName\n        //     tempKinectsImmObj.keySeq().forEach((kinectName,i) => {\n        //         kinects.push(<Kinect key={kinectName} kinectName={kinectName} kinect={tempKinectsImmObj.get(kinectName)}/>) \n        //     });\n        //     // kinects = this.props.kinects.get(\"kinects\");\n        //     // kinects.map((kinect, i) => <Kinect key={i} index={i} kinect={kinect}/>);\n        // } catch(e) {}\n\n        \n        // const scale = this.props.menu.get(\"scale\");\n        // const translateX = this.props.menu.getIn([\"translate\", \"x\"]);\n        // const translateY = this.props.menu.getIn([\"translate\", \"y\"]);\n        \n        // const styleKinects = {\n        //     transform: `translate(${translateX}px, ${translateY}px) scale(${scale/100})`\n        //     // transform: `translate(${translateX*scale/100}px, ${translateY*scale/100}px) scale(${scale/100})`\n        // }\n\n        // window.c_sds = { \n        //     scale,\n        //     translateX,\n        //     translateY,\n        //     styleKinects\n        // }\n\n        return (\n            <div id=\"Scene\" className=\"Scene\">\n                <div style={standsContainerStyle}>\n                    <UnderVisuals />\n                    <div className=\"Stands\">\n                        {stands}\n                    </div>\n                    <FocalPoints />\n                    {/* <Popups popups={this.props.popups}/> */}\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\n//import Heads from '../containers/Heads'\n// import Draggable from 'react-draggable'; \nimport Draggable, { DraggableCore } from 'react-draggable';\n// import Stand from '../containers/Stand';\nimport cn from \"classnames\";\nimport Heads from './Heads';\nimport Cameras from './Cameras';\nimport Kinects from './Kinects';\nimport PopupInfo from '../containers/PopupInfo';\n\nimport {STAND_WIDTH, encodeRot, decodeRot, encodePos, decodePos, noTouchMove} from '../helpers';\n\nexport default class Menu extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // pos : {x:0, y:0},\n            // rotateRad : 0\n        };\n\n        // this.onMouseDown = this.onMouseDown.bind(this);\n\n        this.togglePopupInfo = this.togglePopupInfo.bind(this);\n\n        this.handleMoveStart = this.handleMoveStart.bind(this);\n        this.handleMoveDrag = this.handleMoveDrag.bind(this);\n        this.handleMoveStop = this.handleMoveStop.bind(this);\n\n        this.handleRotateStart = this.handleRotateStart.bind(this);\n        this.handleRotateDrag = this.handleRotateDrag.bind(this);\n        this.handleRotateStop = this.handleRotateStop.bind(this);\n\n        this.handleStandClick = this.handleStandClick.bind(this);\n\n        // this.handleMoveDragEnd = this.handleMoveDragEnd.bind(this);\n        // this.handleMoveDragEnter = this.handleMoveDragEnter.bind(this);\n        // this.handleMoveDragExit = this.handleMoveDragExit.bind(this);\n        // this.handleMoveDragLeave = this.handleMoveDragLeave.bind(this);\n        // this.handleMoveDragOver = this.handleMoveDragOver.bind(this);\n        // this.handleMoveDragStart = this.handleMoveDragStart.bind(this);\n\n        // Refs\n        this.refStandRotateHandle = React.createRef();\n        this.refStandMoveHandle = React.createRef();\n    }\n\n    componentDidMount() {\n        noTouchMove(this.refStandRotateHandle.current);\n        noTouchMove(this.refStandMoveHandle.current);\n    }\n\n    // handleMoveDrag = {this.handleMoveDrag}\n    // handleMoveDragEnd = {this.handleMoveDragEnd}\n    // handleMoveDragEnter = {this.handleMoveDragEnter}\n    // handleMoveDragExit = {this.handleMoveDragExit}\n    // handleMoveDragLeave = {this.handleMoveDragLeave}\n    // handleMoveDragOver = {this.handleMoveDragOver}\n    // handleMoveDragStart = {this.handleMoveDragStart}\n\n    // // If this is clicked in general\n    // onMouseDown() {\n    //     var highestStand = document.getElementsByClassName(\"Stand\");\n    //     [...Stands].forEach(Stand => {\n    //         Stand.classList.remove(\"Stand-highest\");\n    //     });\n    // }\n\n    togglePopupInfo(e) {\n        if (!this.props.popupInfo) {\n            // The x and y of the Scene\n            var {x, y} = document.getElementById(\"Scene\").getBoundingClientRect();\n\n            const clickPos = { x: e.nativeEvent.clientX - x, y: e.nativeEvent.clientY - y };\n\n            this.props.popupInfoRemoveAll();\n            this.props.popupInfoAddNew(clickPos);\n        }\n        //  else {\n        //     this.props.popupInfoRemove();\n        // }\n    }\n\n    // Move\n    handleStandClick(e, a) {\n        this.props.standSelect();\n        this.togglePopupInfo(e);\n        // console.log(\"h str\", e, a);\n        // this.props.standMove(1,a.)\n    }\n\n    // Move\n    handleMoveStart(e, a) {\n        this.props.standSelect();\n        // console.log(\"h str\", e, a);\n        // this.props.standMove(1,a.)\n    }\n\n    handleMoveDrag(e, a) {\n        // console.log(\"h dr\", e, a);\n        const { x, y } = a;\n        const pos = encodePos(this.props.menu, { x, y });\n        // const pos = encrypt1({ x, y });\n        // const pos = { x, y };\n        // Convert the values \n\n        this.props.standMove(pos);\n        // this.setState({ pos });\n    }\n\n    handleMoveStop(e, a) {\n    }\n\n    // Rotate\n    handleRotateStart(e, a) {\n        this.props.standSelect();\n    }\n\n    handleRotateDrag(e, a) {\n        const { x, y } = a;\n        var rad = Math.atan2(y, x); // In radians\n        var deg = encodeRot(rad * (180 / Math.PI));\n        // var deg = rad * (180 / Math.PI);\n\n        this.props.standRotate(deg);\n    }\n\n    handleRotateStop(e, a) {\n        // console.log(\"hrlt stop\", e, a);\n    }\n\n    render() {\n        const stand = this.props.stand;\n        const isActive = stand.get(\"isActive\");\n        // let pos = {x: 0, y:0};\n        let pos = decodePos(this.props.menu, stand.get(\"pos\").toJS());\n\n        // let pos = decrypt1(stand.get(\"pos\").toJS());\n        // let pos = stand.get(\"pos\").toJS();\n        pos.x = isNaN(pos.x) || pos.x === \"\" ? 0 : pos.x;\n        pos.y = isNaN(pos.y) || pos.y === \"\" ? 0 : pos.y;\n\n        let rot = stand.get(\"rot\");\n        rot = isNaN(rot) ? 0 : rot;\n        rot = decodeRot(rot); // flip it so rotation is opposite direction.\n\n        const selectedStandIndex = this.props.menu.get(\"selectedStandIndex\");\n        const isSelected = selectedStandIndex === this.props.index;\n\n        const heads = stand.get(\"heads\");\n        const cameras = stand.get(\"cameras\");\n        const kinects = stand.get(\"kinects\");\n\n        // const standStyle = {transform:`translate(${stand.pos.x}px, ${stand.pos.y}px)`}\n        // console.log('ren');\n\n        // try {\n        //     pos = stand.get(\"pos\");\n        // } catch(e) {}\n\n        let popupInfo;\n\n        if (this.props.popupInfo) {\n            popupInfo = (\n                <div className=\"Stand-popupInfo\">\n                    <PopupInfo standIndex={this.props.index} pos={this.props.popupInfo.get(\"pos\")}/>\n                </div>\n            );\n        }\n\n        const isStandRotatesHidden = this.props.menu.get(\"isStandRotatesHidden\");\n        const isForceShowStandRotatesOnSelect = this.props.menu.get(\"isForceShowStandRotatesOnSelect\");\n        const isShowStandRotator = !isStandRotatesHidden || (isSelected && isForceShowStandRotatesOnSelect);\n\n        const standName = stand.get(\"name\");\n\n        // Given the stand is 100px \n        // and the actual stand is 0.381 m (15')\n        // When the scene scale is 100\n        // set the transform:scale(X); to X = 0.381\n        // When the scene scale is 200 (100 * 2)\n        // set the transform:scale(X); to X = 0.381 * 2 = 0.762\n        const standContainerScale = STAND_WIDTH * this.props.menu.get(\"scale\") / 100\n        const styleStandContainer = {\n            transform: `scale(${standContainerScale})`\n        }\n        return (\n            <Draggable\n                handle=\".Stand-move\"\n                defaultPosition={{ x: 0, y: 0 }}\n                // position={null}\n                position={pos}\n                // grid={[25, 25]}\n                onStart={this.handleMoveStart}\n                onDrag={this.handleMoveDrag}\n                onStop={this.handleMoveStop}\n            >\n                {/* <DraggableCore\n                    // allowAnyClick= boolean,\n                    // cancel= string,\n                    // disabled= boolean,\n                    // enableUserSelectHack= boolean,\n                    // offsetParent= HTMLElement,\n                    // grid= [number, number],\n                    handle=\".Stand-rotate\"\n                    // onStart={this.handleRotateStart}\n                    // onDrag={this.handleRotateDrag}\n                    // onStop={this.handleRotateStop}\n                    // onMouseDown= (e= MouseEvent) => void\n                > */}\n\n                <div ref={this.refStand} id={`Stand-${standName}`} className={cn(\"Stand\", { \"Stand--selected\": isSelected, \"Stand--active\" : isActive })} onClick={this.handleStandClick}>\n                    {popupInfo}\n                    <div className=\"Stand-rotateContainer\" style={{ transform: `rotate(${rot}deg)` }}>\n                        <div style={styleStandContainer} className=\"Stand-container\">\n                            <div className=\"Stand-octagon\"></div>\n                            <div className=\"Stand-name noselect\">\n                                {stand.get(\"name\")} : {stand.getIn([\"heads\",0,\"name\"])}\n                            </div>\n                            {/* <div className=\"Stand-select noselect\" onClick={this.props.standStand}>\n                                    Select\n                                </div> */}\n                            {/* <div className=\"Stand-remove noselect\" onClick={this.props.standRemove}>\n                                X\n                                </div> */}\n                            <div ref={this.refStandMoveHandle} className=\"Stand-move noselect\">\n                                Move\n                            </div>\n                            {/* <div className=\"Stand-info noselect\" onClick={this.togglePopupInfo}>\n                                Info\n                            </div> */}\n\n                            { !isShowStandRotator ? null :\n                                <div className=\"Stand-rotate noselect\">\n                                    {/* offset is used for the drag's reference */}\n                                    <DraggableCore\n                                        // allowAnyClick= boolean,\n                                        // cancel= string,\n                                        // disabled= boolean,\n                                        // enableUserSelectHack= boolean,\n                                        // offsetParent={this.refStandRotateOffset.current} //HTMLElement,\n                                        // grid= [number, number],\n                                        handle=\".Stand-rotate-handle\"\n                                        onStart={this.handleRotateStart}\n                                        onDrag={this.handleRotateDrag}\n                                        onStop={this.handleRotateStop}\n                                    // onMouseDown= (e= MouseEvent) => void\n                                    >\n                                        <div ref={this.refStandRotateHandle} className=\"Stand-rotate-handle\"/>\n                                    </DraggableCore>\n                                </div>\n                            }\n\n                            <div className=\"Stand-heads\">\n                                <Heads heads={heads} standIndex={this.props.index} />\n                            </div>\n                            <div className=\"Stand-cameras\">\n                                <Cameras cameras={cameras} standIndex={this.props.index} />\n                            </div>\n                            <div className=\"Stand-kinects\">\n                                <Kinects kinects={kinects} standIndex={this.props.index} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Draggable>\n        );\n    }\n}","\nimport React from 'react'\nimport MotionLines from '../containers/MotionLines'\nimport GridLines from '../containers/GridLines'\n\nexport default class UnderVisuals extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n        }\n\n        // this.handleMoveStart = this.handleMoveStart.bind(this);\n    }\n\n    render() {\n        return (\n            <div>\n                <MotionLines/>\n                <GridLines/>\n            </div>\n        );\n    }\n}","import { connect } from 'react-redux'\nimport { menuSelectCamera, cameraMoveByIndex, cameraRotateByIndex} from '../actions'\nimport Camera from '../components/Camera'\n\nconst mapStateToProps = (state, ownProps) => {\n    // const stands = state.stands;\n    // const menu = state.menu;\n    // let stand = {}; // The stand for the camera\n    // let cameras;\n\n    // if (stands && stands.get && stands.get(ownProps.standIndex)) {\n    //     stand = stands.get(ownProps.standIndex);\n\n    //     if (stand.get && stand.get(\"cameras\")) {\n    //         cameras = stand.get(\"cameras\");\n    //     }\n    // }\n\n\n    return ({\n        stands: state.stands, //ownProps.filter === state.visibilityFilter\n        stand: state.stands.get(ownProps.standIndex),\n        // cameras: state.stands .get(ownProps.index),\n        menu: state.menu\n    });\n}\n\n// const mapStateToProps = (state, ownProps) => ({});\n// // ({\n// // //   active: ownProps.filter === state.visibilityFilter\n// // })​;\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    selectCamera: () => dispatch(menuSelectCamera({standIndex : ownProps.standIndex, cameraIndex: ownProps.cameraIndex})),\n    cameraMove: (pos) => dispatch(cameraMoveByIndex(ownProps.standIndex, ownProps.cameraIndex, pos)),\n    cameraRotate: (rot) => dispatch(cameraRotateByIndex(ownProps.standIndex, ownProps.cameraIndex, rot))\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Camera)","import { connect } from 'react-redux'\nimport { websocketSend, focalPointRemoveByIndex, focalPointMoveByIndex, focalPointRotateByIndex, menuSelectFocalPoint } from '../actions'\nimport FocalPoint from '../components/FocalPoint'\n\nconst mapStateToProps = (state, ownProps) =>\n  ({\n    focalPoints: state.focalPoints, //ownProps.filter === state.visibilityFilter\n    menu: state.menu,\n  });\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  focalPointSelect: () => dispatch(menuSelectFocalPoint(ownProps.index)),\n  // focalPointMove: (pos) => dispatch(focalPointMoveByIndex(ownProps.index, pos)),\n  focalPointMove: (pos) => {\n    // dispatch(headRotateByIndex(ownProps.standIndex, ownProps.headIndex, rot));\n    // const websocketPayload = {\n    //   \"type\": \"fp-location\",\n    //   \"data\": {\n    //     \"fpName\": ownProps.get(\"name\"),\n    //     \"location\": rot\n    //   }\n    // }\n    // dispatch(focalPointMoveByIndex(ownProps.index, pos));\n\n    // dispatch(headRotateByIndex(ownProps.standIndex, ownProps.headIndex, rot));\n    dispatch(focalPointMoveByIndex(ownProps.index, pos));\n\n    const websocketPayload = {\n      \"type\": \"focal-point-location\",\n      \"data\": {\n        \"focalPointName\": ownProps.name,\n        \"location\": pos\n      }\n    }\n    dispatch(websocketSend(websocketPayload));\n  },\n  focalPointRemove: () => dispatch(focalPointRemoveByIndex(ownProps.index))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FocalPoint)","import { connect } from 'react-redux'\n// import { focalPointRemoveByIndex, focalPointMoveByIndex, focalPointRotateByIndex, menuSelectFocalPoint } from '../actions'\nimport { focalPointMoveByIndex } from '../actions'\nimport FocalPoints from '../components/FocalPoints'\n\nconst mapStateToProps = (state, ownProps) =>\n({\n  focalPoints: state.focalPoints, //ownProps.filter === state.visibilityFilter\n  menu: state.menu,\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    // focalPointSelect: () => dispatch(menuSelectFocalPoint(ownProps.index)),\n    // focalPointMove: (pos) => dispatch(focalPointMoveByIndex(ownProps.index, pos)), \n    // focalPointRemove: () => dispatch(focalPointRemoveByIndex(ownProps.index))\n    focalPointMoveByIndex: (index, pos) => dispatch(focalPointMoveByIndex(index, pos)), \n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(FocalPoints)","import { connect } from 'react-redux'\nimport { menuSetScale, menuSetTranslateX, menuSetTranslateY } from '../actions'\nimport GridLines from '../components/GridLines'\n\nconst mapStateToProps = (state, ownProps) =>\n  ({\n    menu: state.menu //ownProps.filter === state.visibilityFilter\n  });\n\n// const mapStateToProps = (state, ownProps) => ({});\n// // ({\n// // //   active: ownProps.filter === state.visibilityFilter\n// // })​;\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  // standAdd: () => dispatch(standAdd(ownProps.filter)) \n\n  setScale: scale => dispatch(menuSetScale(scale)),\n  setTranslateX: x => dispatch(menuSetTranslateX(x)),\n  setTranslateY: y => dispatch(menuSetTranslateY(y))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(GridLines)","import { connect } from 'react-redux'\nimport { websocketSend, headRotateByIndex, headRotateStartByIndex, headRotateStopByIndex  } from '../actions'\n// import { menuSelectHead, headRotateByIndex} from '../actions'\nimport Head from '../components/Head'\n\nconst mapStateToProps = (state, ownProps) => {\n    // const stands = state.stands;\n    // const menu = state.menu;\n    // let stand = {}; // The stand for the head\n    // let heads;\n\n    // if (stands && stands.get && stands.get(ownProps.standIndex)) {\n    //     stand = stands.get(ownProps.standIndex);\n\n    //     if (stand.get && stand.get(\"heads\")) {\n    //         heads = stand.get(\"heads\");\n    //     }\n    // }\n\n\n    return ({\n        stands: state.stands, //ownProps.filter === state.visibilityFilter\n        stand: state.stands.get(ownProps.standIndex),\n        // heads: state.stands .get(ownProps.index),\n        menu: state.menu\n    });\n}\n\n// const mapStateToProps = (state, ownProps) => ({});\n// // ({\n// // //   active: ownProps.filter === state.visibilityFilter\n// // })​;\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    // standMove: (standIndex, pos) => dispatch(standMove(ownProps.filter)),\n    // standHead: () => dispatch(menuSelectHead(ownProps.index)),\n    // headSelect: () => dispatch(menuSelectHead(ownProps.standIndex, ownProps.index)),\n\n    // standSetField: (fieldName, value) => dispatch(standSetFieldByIndex(ownProps.index, fieldName, value)), // pos = {x, y}\n    // standSetInFields: (fieldNames, value) => dispatch(standSetInFieldsByIndex(ownProps.index, fieldNames, value)), // pos = {x, y}\n\n    // standMove: (pos) => dispatch(standMoveByIndex(ownProps.index, pos)), // pos = {x, y}\n    // standRemove: () => dispatch(standRemoveByIndex(ownProps.index)), // pos = {x, y}\n    // headRotate: (rot) => dispatch(headRotateByIndex(ownProps.standIndex, ownProps.index, rot)) // rot = radian amount\n    headRotateStart: () => dispatch(headRotateStartByIndex(ownProps.standIndex, ownProps.index)),\n    headRotateStop: () => dispatch(headRotateStopByIndex(ownProps.standIndex, ownProps.index)),\n    headRotate: (rot) => {\n        dispatch(headRotateByIndex(ownProps.standIndex, ownProps.headIndex, rot));\n\n        const websocketPayload = {\n            \"type\": \"head-rotation\",\n            \"data\": { \n                \"headName\": ownProps.head.get(\"name\"),\n                \"rotation\": rot\n            }\n        }\n        dispatch(websocketSend(websocketPayload));\n    }\n    // rot = radian amount\n    // standMoveByIndex: (standIndex, pos) => dispatch(standMoveByIndex(ownProps.index, pos)), // pos = {x, y}\n    // standRotateByIndex: (standIndex, rot) => dispatch(standRotateByIndex(ownProps.index, rot)) // rot = radian amount\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Head)","import { connect } from 'react-redux'\nimport { menuSelectKinect, kinectMoveByIndex, kinectRotateByIndex} from '../actions'\nimport Kinect from '../components/Kinect'\n\nconst mapStateToProps = (state, ownProps) => {\n    return ({\n        stands: state.stands, //ownProps.filter === state.visibilityFilter\n        stand: state.stands.get(ownProps.standIndex),\n        kinectFocalPoints: state.kinectFocalPoints,\n        // kinects: state.stands .get(ownProps.index),\n        menu: state.menu\n    });\n}\n\n// const mapStateToProps = (state, ownProps) => ({});\n// // ({\n// // //   active: ownProps.filter === state.visibilityFilter\n// // })​;\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    selectKinect: () => dispatch(menuSelectKinect({standIndex : ownProps.standIndex, kinectIndex: ownProps.kinectIndex})),\n    kinectMove: (pos) => dispatch(kinectMoveByIndex(ownProps.standIndex, ownProps.kinectIndex, pos)),\n    kinectRotate: (rot) => dispatch(kinectRotateByIndex(ownProps.standIndex, ownProps.kinectIndex, rot))\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Kinect)\n\n\n// import { connect } from 'react-redux'\n// import { kinectRemoveByName, kinectMoveByName, kinectRotateByName, menuSelectKinectByName } from '../actions'\n// import Kinect from '../components/Kinect'\n\n// const mapStateToProps = (state, ownProps) =>\n// ({\n//   kinects: state.kinects,\n//   menu: state.menu,\n// });\n\n// // const mapStateToProps = (state, ownProps) => ({});\n// // // ({\n// // // //   active: ownProps.filter === state.visibilityFilter\n// // // })​;\n\n// const mapDispatchToProps = (dispatch, ownProps) => ({\n//     kinectSelect: () => dispatch(menuSelectKinectByName(ownProps.kinectName)),\n//     kinectMove: (pos) => dispatch(kinectMoveByName({kinectName: ownProps.kinectName, pos})), // pos = {x, y}\n//     // kinectRemove: () => dispatch(kinectRemoveByName(ownProps.kinectName)), // pos = {x, y}\n//     kinectRotate: (rot) => dispatch(kinectRotateByName({kinectName: ownProps.kinectName, rot})) // rot = radian amount\n// });\n\n// export default connect(\n//     mapStateToProps,\n//     mapDispatchToProps\n// )(Kinect)\n\n\n\n// // import { connect } from 'react-redux'\n// // import { kinectMoveByName, kinectRotateByName, menuSelectKinectByName } from '../actions'\n// // import Kinect from '../components/Kinect'\n\n// // const mapStateToProps = (state, ownProps) =>\n// // ({\n// //   kinects: state.kinects, //ownProps.filter === state.visibilityFilter\n// //   menu: state.menu,\n// // });\n\n// // // const mapStateToProps = (state, ownProps) => ({});\n// // // // ({\n// // // // //   active: ownProps.filter === state.visibilityFilter\n// // // // })​;\n\n// // const mapDispatchToProps = (dispatch, ownProps) => ({\n// //     // kinectMove: (kinectIndex, pos) => dispatch(kinectMove(ownProps.filter)),\n// //     kinectSelect: () => dispatch(menuSelectKinectByName(ownProps.kinectName)),\n\n// //     // kinectSetField: (fieldName, value) => dispatch(kinectSetFieldByName(ownProps.kinectName, fieldName, value)), // pos = {x, y}\n// //     // kinectSetInFields: (fieldNames, value) => dispatch(kinectSetInFieldsByName(ownProps.kinectName, fieldNames, value)), // pos = {x, y}\n\n// //     kinectMove: (pos) => dispatch(kinectMoveByName({kinectName: ownProps.kinectName, pos})), // pos = {x, y}\n// //     // kinectRemove: () => dispatch(kinectRemoveByName(ownProps.kinectName)), // pos = {x, y}\n// //     kinectRotate: (rot) => dispatch(kinectRotateByName({kinectName: ownProps.kinectName, rot})) // rot = radian amount\n// //     // kinectMoveByName: (kinectIndex, pos) => dispatch(kinectMoveByName(ownProps.kinectName, pos)), // pos = {x, y}\n// //     // kinectRotateByName: (kinectIndex, rot) => dispatch(kinectRotateByName(ownProps.kinectName, rot)) // rot = radian amount\n// // });\n\n// // export default connect(\n// //     mapStateToProps,\n// //     mapDispatchToProps\n// // )(Kinect)","import { connect } from 'react-redux'\nimport {\n    menuDisableForceShowAllRotatesOnSelect,\n    menuEnableForceShowAllRotatesOnSelect,\n    menuToggleForceShowRotatesOnSelect,\n    menuHideAllRotates,\n    menuShowAllRotates,\n    menuToggleHideRotates,\n    sceneFetchFromUrl,\n    cameraAddNew,\n    cameraRemoveByIndex,\n    standAdd,\n    focalPointAdd,\n    menuSelectStand,\n    menuSelectCamera,\n    menuSelectHead,\n    standSetFieldByIndex,\n    standSetInFieldsByIndex,\n    menuSetScale,\n    menuSetTranslateX,\n    menuSetTranslateY,\n    websocketConnect,\n    websocketDisconnect\n} from '../actions';\n\nimport Menu from '../components/Menu'\n\nconst mapStateToProps = (state, ownProps) =>\n    ({\n        stands: state.stands,\n        menu: state.menu,\n        selectedStandIndex: state.menu && state.menu.get ? state.menu.get(\"selectedStandIndex\") : 0,\n        selectedCameraIndex: state.menu && state.menu.get ? state.menu.get(\"selectedCameraIndex\") : 0,\n        //   selectedHeadIndex: state.menu && state.menu.get ? state.menu.get(\"selectedHeadIndex\") : 0\n    });\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    addStand: () => dispatch(standAdd()),\n    addFocalPoint: () => dispatch(focalPointAdd()),\n    loadSceneFromUrl: (sceneUrl) => dispatch(sceneFetchFromUrl(sceneUrl)),\n    selectStand: index => dispatch(menuSelectStand(index)),\n    selectCamera: (cameraIndex) => dispatch(menuSelectCamera({ cameraIndex })),\n    // selectCamera: (cameraIndex) => dispatch(menuSelectCamera({cameraIndex})),\n    // selectCamera: (standIndex, cameraIndex) => dispatch(menuSelectCamera(standIndex, cameraIndex)),\n    selectHead: (headIndex) => dispatch(menuSelectHead({ headIndex })),\n\n    // selectHead: (standIndex, headIndex)  => dispatch(menuSelectHead(standIndex, headIndex)),\n    standSetField: (index, fieldName, value) => dispatch(standSetFieldByIndex(index, fieldName, value)), // pos = {x, y}\n    standSetInFields: (index, fieldNames, value) => dispatch(standSetInFieldsByIndex(index, fieldNames, value)), // pos = {x, y}\n    cameraAddNew: (standIndex) => dispatch(cameraAddNew(standIndex)),\n    cameraRemove: (standIndex, cameraIndex) => dispatch(cameraRemoveByIndex(standIndex, cameraIndex)),\n\n    setScale: scale => dispatch(menuSetScale(scale)),\n    setTranslateX: x => dispatch(menuSetTranslateX(x)),\n    setTranslateY: y => dispatch(menuSetTranslateY(y)),\n\n    menuToggleHideCameraRotates: () => dispatch(menuToggleHideRotates(\"camera\")),\n    menuToggleHideStandRotates: () => dispatch(menuToggleHideRotates(\"stand\")),\n    menuToggleHideHeadRotates: () => dispatch(menuToggleHideRotates(\"head\")),\n    menuHideAllRotates: () => dispatch(menuHideAllRotates()),\n    menuShowAllRotates: () => dispatch(menuShowAllRotates()),\n\n    menuToggleForceShowCameraRotatesOnSelect: () => dispatch(menuToggleForceShowRotatesOnSelect(\"camera\")),\n    menuToggleForceShowStandRotatesOnSelect: () => dispatch(menuToggleForceShowRotatesOnSelect(\"stand\")),\n    menuToggleForceShowHeadRotatesOnSelect: () => dispatch(menuToggleForceShowRotatesOnSelect(\"head\")),\n    menuDisableForceShowAllRotatesOnSelect: () => dispatch(menuDisableForceShowAllRotatesOnSelect()),\n    menuEnableForceShowAllRotatesOnSelect: () => dispatch(menuEnableForceShowAllRotatesOnSelect()),\n\n    websocketConnect: (url) => dispatch(websocketConnect(url)),\n    websocketDisconnect: () => dispatch(websocketDisconnect()),\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Menu)","import { connect } from 'react-redux'\n// import { standsActions } from '../actions'\nimport MotionLine from '../components/MotionLine'\n\nconst mapStateToProps = (state, ownProps) =>\n({\n  menu: state.menu //ownProps.filter === state.visibilityFilter\n});\n\n// const mapStateToProps = (state, ownProps) => ({});\n// // ({\n// // //   active: ownProps.filter === state.visibilityFilter\n// // })​;\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    // standAdd: () => dispatch(standAdd(ownProps.filter))\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(MotionLine)","import { connect } from 'react-redux'\n// import { standsActions } from '../actions'\nimport MotionLines from '../components/MotionLines'\n\nconst mapStateToProps = (state, ownProps) =>\n({\n  motionLines: state.motionLines //ownProps.filter === state.visibilityFilter\n});\n\n// const mapStateToProps = (state, ownProps) => ({});\n// // ({\n// // //   active: ownProps.filter === state.visibilityFilter\n// // })​;\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    // standAdd: () => dispatch(standAdd(ownProps.filter))\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(MotionLines)","import { connect } from 'react-redux'\nimport { popupInfoMove, popupInfoRemove } from '../actions'\nimport PopupInfo from '../components/PopupInfo'\n\nconst mapStateToProps = (state, ownProps) => {\n    // const stands = state.stands;\n    // const menu = state.menu;\n    // let stand = {}; // The stand for the camera\n    // let cameras;\n\n    // if (stands && stands.get && stands.get(ownProps.standIndex)) {\n    //     stand = stands.get(ownProps.standIndex);\n\n    //     if (stand.get && stand.get(\"cameras\")) {\n    //         cameras = stand.get(\"cameras\");\n    //     }\n    // }\n\n    const standIndex = ownProps.standIndex;\n\n    const stand = state.stands.get(standIndex);\n    let headName;\n    let headNames;\n\n    let standHeads = state.stands.getIn([standIndex, \"heads\"]);\n\n    if (standHeads && standHeads.size > 0) {\n        headNames = Object.keys(standHeads.toJS());\n        if (headNames && headNames.length > 0) {\n            headName = standHeads.getIn([headNames[0], \"name\"]);\n        }\n    }\n\n    return ({\n        // stands: state.stands, //ownProps.filter === state.visibilityFilter\n        stand, //: state.stands.get(ownProps.standIndex),\n        popupInfo: state.stands.getIn([standIndex,\"popupInfo\"]),\n        menu: state.menu,\n        headName\n    });\n}\n\n// const mapStateToProps = (state, ownProps) => ({});\n// // ({\n// // //   active: ownProps.filter === state.visibilityFilter\n// // })​;\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    // selectCamera: () => dispatch(menuSelectCamera({standIndex : ownProps.standIndex, cameraIndex: ownProps.cameraIndex})),\n    popupInfoMove: (pos) => dispatch(popupInfoMove(ownProps.standIndex, pos)),\n    popupInfoRemove: (pos) => dispatch(popupInfoRemove(ownProps.standIndex)),\n    // cameraRotate: (rot) => dispatch(cameraRotateByIndex(ownProps.standIndex, ownProps.cameraIndex, rot))\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(PopupInfo)","import { connect } from 'react-redux'\nimport { menuDeselectStandAndAll } from '../actions'\nimport Scene from '../components/Scene'\n\nconst mapStateToProps = (state, ownProps) =>\n  ({\n    stands: state.stands,\n    kinects: state.kinects,\n    focalPoints: state.focalPoints,\n    menu: state.menu\n    //   popups: state.popups //ownProps.filter === state.visibilityFilter\n  });\n\n// const mapStateToProps = (state, ownProps) => ({});\n// // ({\n// // //   active: ownProps.filter === state.visibilityFilter\n// // })​;\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  menuDeselectStandAndAll: () => dispatch(menuDeselectStandAndAll())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Scene)","import { connect } from 'react-redux'\nimport { popupInfoAddNew, popupInfoRemove, popupInfoRemoveAll, standRemoveByIndex, standMoveByIndex, standRotateByIndex, menuSelectStand } from '../actions'\nimport Stand from '../components/Stand'\n\nconst mapStateToProps = (state, ownProps) =>\n({\n  stands: state.stands, //ownProps.filter === state.visibilityFilter\n  menu: state.menu,\n  popupInfo: state.stands.getIn([ownProps.index, \"popupInfo\"])\n});\n\n// const mapStateToProps = (state, ownProps) => ({});\n// // ({\n// // //   active: ownProps.filter === state.visibilityFilter\n// // })​;\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    // standMove: (standIndex, pos) => dispatch(standMove(ownProps.filter)),\n    standSelect: () => dispatch(menuSelectStand(ownProps.index)),\n\n    // standSetField: (fieldName, value) => dispatch(standSetFieldByIndex(ownProps.index, fieldName, value)), // pos = {x, y}\n    // standSetInFields: (fieldNames, value) => dispatch(standSetInFieldsByIndex(ownProps.index, fieldNames, value)), // pos = {x, y}\n\n    popupInfoAddNew: (clickPos) => { dispatch(popupInfoAddNew(ownProps.index, clickPos)) },\n    popupInfoRemove: () => { dispatch(popupInfoRemove(ownProps.index)) },\n    popupInfoRemoveAll: () => { dispatch(popupInfoRemoveAll()) },\n\n    standMove: (pos) => dispatch(standMoveByIndex(ownProps.index, pos)), // pos = {x, y}\n    standRemove: () => dispatch(standRemoveByIndex(ownProps.index)), // pos = {x, y}\n    standRotate: (rot) => dispatch(standRotateByIndex(ownProps.index, rot)) // rot = radian amount\n    // standMoveByIndex: (standIndex, pos) => dispatch(standMoveByIndex(ownProps.index, pos)), // pos = {x, y}\n    // standRotateByIndex: (standIndex, rot) => dispatch(standRotateByIndex(ownProps.index, rot)) // rot = radian amount\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Stand)","import { connect } from 'react-redux'\n// import { menuSelectCamera, cameraMoveByIndex, cameraRotateByIndex} from '../actions'\nimport UnderVisuals from '../components/UnderVisuals'\n\nconst mapStateToProps = (state, ownProps) => {\n    return ({\n        stands: state.stands, //ownProps.filter === state.visibilityFilter\n        menu: state.menu\n    });\n}\n\n// const mapStateToProps = (state, ownProps) => ({});\n// // ({\n// // //   active: ownProps.filter === state.visibilityFilter\n// // })​;\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    // selectCamera: () => dispatch(menuSelectCamera({standIndex : ownProps.standIndex, cameraIndex: ownProps.cameraIndex})),\n    // cameraMove: (pos) => dispatch(cameraMoveByIndex(ownProps.standIndex, ownProps.cameraIndex, pos)),\n    // cameraRotate: (rot) => dispatch(cameraRotateByIndex(ownProps.standIndex, ownProps.cameraIndex, rot))\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(UnderVisuals)","// From: https://www.npmjs.com/package/transformation-matrix\nimport { scale, translate, compose, applyToPoint } from 'transformation-matrix';\n// import { scale, rotate, translate, compose, applyToPoint } from 'transformation-matrix';\n\nexport const STAND_WIDTH = 0.381;\n\n// E.g.: rotateVector([0,1], 90); for point 0,1 rotate by 90degrees.\nexport const rotateVector = (vec, ang, origin) => {\n    ang = -ang * (Math.PI / 180);\n    var cos = Math.cos(ang);\n    var sin = Math.sin(ang);\n\n    if (!origin) {\n        origin = { x: 0, y: 0 }\n    }\n\n    // Only rotate from the origin\n    const vecFromOrg = { x: vec.x - origin.x, y: vec.y - origin.y };\n\n    const rotatedPos = {\n        x: Math.round(10000 * (vecFromOrg.x * cos - vecFromOrg.y * sin)) / 10000,\n        y: Math.round(10000 * (vecFromOrg.x * sin + vecFromOrg.y * cos)) / 10000\n        // x: Math.round(10000*(vec.x * cos - vec.y * sin))/10000,\n        // y: Math.round(10000*(vec.x * sin + vec.y * cos))/10000\n    };\n\n    return {\n        x: rotatedPos.x + origin.x,\n        y: rotatedPos.y + origin.y\n    }\n\n    // NOTE: below is using arrays instead of pos objects\n    // ang = -ang * (Math.PI/180);\n    // var cos = Math.cos(ang);\n    // var sin = Math.sin(ang);\n    // return new Array(Math.round(10000*(vec[0] * cos - vec[1] * sin))/10000, Math.round(10000*(vec[0] * sin + vec[1] * cos))/10000);\n};\n\n// NOTE. I don't know if this should be encode or decode :)\nexport const encodePosForKinectFocusPoint = (pos) => {\n    // Because the Kinect has already been scaled \n    // we just need to undo the adjustment do to the stand width\n    return {\n        x: 100/STAND_WIDTH * pos.x,\n        y: 100/STAND_WIDTH * pos.y\n    }\n}\n\nexport const encodePosRelativeStand = (menu, pos) => {\n    const scaleVal = Math.max(1, menu.get(\"scale\"));\n    return {\n        x: pos.x / scaleVal,\n        y: pos.y / scaleVal\n    }\n}\n\nexport const decodePosRelativeStand = (pos) => {\n    return {\n        x: (100 / STAND_WIDTH) * pos.x,\n        y: (100 / STAND_WIDTH) * pos.y\n    }\n}\n\nexport const encodePos = (menu, pos) => {\n    const scaleVal = menu.get(\"scale\");\n    const translateX = parseFloat(menu.getIn([\"translate\", \"x\"]));\n    const translateY = parseFloat(menu.getIn([\"translate\", \"y\"]));\n\n    let matrix = compose(\n\n        scale(1 / scaleVal, -1 / scaleVal),\n        // rotate(Math.PI/2),\n        translate(-1 * translateX, -1 * translateY),\n    );\n\n    const newPos = applyToPoint(matrix, pos);\n\n    return newPos;\n}\n\nexport const decodePos = (menu, pos) => {\n    const scaleVal = menu.get(\"scale\");\n    const translateX = parseFloat(menu.getIn([\"translate\", \"x\"]));\n    const translateY = parseFloat(menu.getIn([\"translate\", \"y\"]));\n\n    let matrix = compose(\n        translate(translateX, translateY),\n        // rotate(-1*Math.PI/2),\n        scale(scaleVal, -1 * scaleVal)\n    );\n\n    const newPos = applyToPoint(matrix, pos);\n\n    return newPos;\n}\n\nexport const encodePosScale = (menu, pos) => {\n    const scaleVal = menu.get(\"scale\");\n\n    let matrix = compose(\n        scale(scaleVal, -1 * scaleVal)\n    );\n\n    const newPos = applyToPoint(matrix, pos);\n\n    return newPos;\n}\n\nexport const decodePosScale = (menu, pos) => {\n    const scaleVal = menu.get(\"scale\");\n\n    let matrix = compose(\n        scale(1 / scaleVal, -1 / scaleVal)\n    );\n\n    const newPos = applyToPoint(matrix, pos);\n\n    return newPos;\n}\n\nexport const encodeRot = (rot) => {\n    return -1 * rot;\n}\n\nexport const decodeRot = (rot) => {\n    return -1 * rot;\n}\n\n// Cookies\nexport const setCookie = (name, value, days) => {\n    var expires = \"\";\n    if (days) {\n        var date = new Date();\n        date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\n        expires = \"; expires=\" + date.toUTCString();\n    }\n    document.cookie = name + \"=\" + (value || \"\") + expires + \"; path=/\";\n}\nexport const getCookieAsBoolean = cookieName => {\n    const val = getCookie(cookieName);\n\n    if (typeof val === 'boolean') {\n        return val;\n    } else if (val === 'true' || val === 1) {\n        return true;\n    } else {\n        return false;\n    }\n}\nexport const getCookie = (name) => {\n    var nameEQ = name + \"=\";\n    var ca = document.cookie.split(';');\n    for (var i = 0; i < ca.length; i++) {\n        var c = ca[i];\n        while (c.charAt(0) === ' ') c = c.substring(1, c.length);\n        if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n    }\n    return null;\n}\nexport const eraseCookie = (name) => {\n    document.cookie = name + '=; Max-Age=-99999999;';\n}\n\nexport const noTouchMove = (elem) => {\n    if (elem && elem.addEventListener) {\n        elem.addEventListener('touchmove', function (e) {\n            e.preventDefault();\n        }, false);\n    }\n}","\nvar content = require(\"!!../node_modules/css-loader/index.js??ref--6-oneOf-3-1!../node_modules/postcss-loader/src/index.js??postcss!./index.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js??ref--6-oneOf-3-1!../node_modules/postcss-loader/src/index.js??postcss!./index.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js??ref--6-oneOf-3-1!../node_modules/postcss-loader/src/index.js??postcss!./index.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Redux related\nimport thunkMiddleware from 'redux-thunk'\nimport websocket from '@giantmachines/redux-websocket'\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux'\nimport rootReducer from './reducers';\nimport { customWebsocketMiddleware } from './middleware';\n\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(\n        // socketMiddleware,\n        // socketIoMiddleware,\n        websocket,\n        thunkMiddleware, // lets us dispatch() functions\n        customWebsocketMiddleware\n        // loggerMiddleware // neat middleware that logs actions\n    )\n);\n\n// // Connect to the websocket;\n// store.dispatch(websocketConnect())\n\n// window.c_ts = () => {\n//     console.log(\"going it\");\n//     store.dispatch(websocketSend(\"hi there\"));\n// }\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {\n    motionLinesAddLine,\n    motionLinesRemoveLine,\n    standSetIsActive,\n    standSetIsNotActive,\n    kinectSetFocalPoints,\n    kinectClearFocalPoints,\n    headRotateByHeadName\n} from \"../actions\";\nimport { WEBSOCKET_MESSAGE } from \"@giantmachines/redux-websocket\";\nimport { debounce } from 'throttle-debounce';\n\nconst temp = [{\n    \"type\": \"kinect\",\n    \"data\": {\n        \"name\": \"kinect-01\",\n        \"simplifiedBodies\": [{\n            \"bodyIndex\": 0,\n            \"tracked\": false\n        }, {\n            \"bodyIndex\": 1,\n            \"tracked\": false\n        }, {\n            \"bodyIndex\": 2,\n            \"tracked\": true,\n            \"joints\": [{\n                \"cameraX\": -0.3352165222167969,\n                \"cameraY\": 0.6552982330322266,\n                \"cameraZ\": 2.0847411155700684,\n                \"jointType\": 3,\n                \"trackingState\": 2\n            }]\n        }, {\n            \"bodyIndex\": 3,\n            \"tracked\": false\n        }, {\n            \"bodyIndex\": 4,\n            \"tracked\": false\n        }, {\n            \"bodyIndex\": 5,\n            \"tracked\": false\n        }],\n        \"pos0\": {\n            \"x\": 12.5,\n            \"y\": 12,\n            \"z\": 34\n        }\n    }\n}];\nconst payloadDataChunkData_HARDCODED = temp[0].data;\n\n// This is used as a timeout for specific headNames, to set a previously active head (stand) to isNotActive\nlet timeoutSetActive = {};\n\n\n// Kinect related functions\nfunction clearKinectFocalPoint(store, kinectName) {\n    console.log('clearKinectFocalPoint!', kinectName);\n    store.dispatch(kinectClearFocalPoints({ kinectName }));\n}\nconst CLEAR_KINECT_FOCAL_POINTS_TIMEOUT = 5000; // Time of not getting message to then clear all focal points for that kinect.\nlet debouncedClearKinectFocalPointFns = {};\n\nexport const customWebsocketMiddleware = store => next => action => {\n    if (action.type === WEBSOCKET_MESSAGE) {\n        let totalPayload; // parse through each payload\n        try {\n            totalPayload = JSON.parse(action.payload.data);\n\n            // For each payload data \n            totalPayload.forEach((payloadDataChunk, i) => {\n\n                const payloadType = payloadDataChunk.type;\n                const payloadDataChunkData = payloadDataChunk.data ? payloadDataChunk.data : {};\n\n                switch (payloadType) {\n                    case \"motion-line\":\n                        let lineId = (new Date()).getTime() + \"-\" + i;\n                        let shape = \"line\"; //payloadDataChunkData.shape;\n                        let coords = [];\n                        \n                        try {\n                            coords = payloadDataChunkData.p0;\n                            coords = coords.concat(payloadDataChunkData.p1);\n                        } catch(e) {}\n\n                        store.dispatch(motionLinesAddLine({\n                            lineId,\n                            shape,\n                            coords\n                        }))\n\n                        setTimeout(() => {\n                            store.dispatch(motionLinesRemoveLine({\n                                lineId\n                            }));\n                        }, 600); // NOTE: this 1500ms should be the same value as what's in App.css for .MotionLine.fadeOut's keyframe animation\n                        break;\n                    case \"active\":\n                        try {\n                            var headName;\n                            var rotation;\n\n                            try {\n                                headName = payloadDataChunk.data.name;\n                                store.dispatch(standSetIsActive(headName));\n                            } catch (e) { }\n\n                            try {\n                                rotation = payloadDataChunk.data.extra.rotation;\n                                store.dispatch(headRotateByHeadName(headName, rotation));\n                            } catch (e) { }\n\n                            clearTimeout(timeoutSetActive[headName]);\n\n                            var setToNotActiveAfterDur = 10 * 1000; // e.g. 10 seconds\n\n                            timeoutSetActive[headName] = setTimeout(() => {\n                                store.dispatch(standSetIsNotActive(headName));\n                            }, setToNotActiveAfterDur);\n                        } catch (e) { }\n                        break;\n                    case \"kinect\":\n                        // window.c_kpl = payloadDataChunk;\n                        try {\n                            // payloadDataChunk.data.simplifiedBodies[0].tracked\n\n                            var JOINT_NUM = { HEAD: 3 };\n                            // var kinectName = payloadDataChunkData_HARDCODED.name;\n                            // var simplifiedBodies = payloadDataChunkData_HARDCODED.simplifiedBodies;\n                            var kinectName = payloadDataChunkData.name;\n                            var simplifiedBodies = payloadDataChunkData.simplifiedBodies;\n                            var validBodies = simplifiedBodies.filter(body => body.tracked);\n                            const focalPoints = validBodies.map(body => {\n                                var joint_pos = {};\n                                if (body.joints && body.joints.length > 0) {\n                                    // This is where we decide which of the joints to use as the \n\n                                    var joint_pos = {};\n                                    body.joints.filter(joint => joint.jointType === JOINT_NUM.HEAD).forEach(joint => {\n                                        joint_pos = {\n                                            x: joint.cameraX,\n                                            y: joint.cameraY,\n                                            z: joint.cameraZ,\n                                            bodyIndex: body.bodyIndex\n                                        }\n                                    });\n                                }\n                                return joint_pos;\n                            });\n                            window.c_kk3 = { kinect: true, name: kinectName, focalPoints, payloadDataChunkData };\n                            store.dispatch(kinectSetFocalPoints({ kinectName, focalPoints }));\n\n                            // A debounce function which will clear all focal points for this particular kinect name\n                            // This ensure that if a kinect stores sending messages that we don't still consider \n                            // the focal points it last sent were still there.\n                            if(!debouncedClearKinectFocalPointFns[kinectName]) {\n                                debouncedClearKinectFocalPointFns[kinectName] = debounce(CLEAR_KINECT_FOCAL_POINTS_TIMEOUT, clearKinectFocalPoint);\n                            }\n                            debouncedClearKinectFocalPointFns[kinectName](store, kinectName);\n                            \n                        } catch (e) { console.log(e) }\n                        break;\n                    default:\n                        break;\n                }\n            });\n        } catch (e) { }\n    }\n    // window.c_cm = {\n    //     store,\n    //     next,\n    //     action\n    // };\n\n    next(action);\n}\n","import { fromJS } from \"immutable\";\n// https://www.npmjs.com/package/@giantmachines/redux-websocket\nimport { WEBSOCKET_MESSAGE } from \"@giantmachines/redux-websocket\";\n// import { WEBSOCKET_CONNECTING, WEBSOCKET_OPEN, WEBSOCKET_CLOSED, WEBSOCKET_MESSAGE } from \"@giantmachines/redux-websocket\";\n\n// Returns a new immutable object for a new focalPoint\nconst createNewFocalPoint = ({\n    name = undefined,\n    pos = { x: 0, y: 0 },\n    type = \"default\",\n    isActive = false,\n    isSelected = false, // Needed????\n} = {}, state) => {\n\n    return fromJS({\n        name,\n        pos,\n        isActive,\n        type\n    })\n\n    // return {\n    //     \"name\": \"focalPoint0\",\n    //     \"pos\": {\n    //         \"x\": 0,//-1.5,\n    //         \"y\": 0\n    //     },\n    // }\n}\n\n// const getNewName = (prefix, arrayObj) => {\n//     let maxFocalPointNum = Math.max.apply(null, arrayObj.map(st => st.name).filter(d => d.indexOf(prefix) === 0).map(d => parseInt(d.replace(prefix, \"\"))).filter(d => !isNaN(d)))\n\n//     if (maxFocalPointNum >= 0) {\n//         return `${prefix}${maxFocalPointNum + 1}`;\n//     } else {\n//         return `${prefix}0`;\n//     }\n// }\n\n// const getFocalPointIndexFromHeadName = (state, headName) => {\n//     var temp = state.findIndex(focalPoint => focalPoint.getIn([\"heads\",0, \"name\"]) === headName)\n//     return temp;\n// };\n\n\nconst findFocalIndexByName = (state, name) => {\n    if (state) {\n        return state.findIndex(fp => fp.get(\"name\") === name);\n    }\n    return -1;\n}\n\nconst processWebsocketData = (state, payloadDataChunk) => {\n    let { type, data } = payloadDataChunk;\n    // let headName, heads, focalPointIndex, headIndex, rotation;\n    var newState;\n    switch (type) {\n        case \"focal-points\":\n\n            if (state.size > 30)\n                return state;\n\n            newState = state;\n            if (typeof window !== 'undefined') {\n                window.c__st824 = {\n                    state,\n                    data,\n                    type\n                }\n            }\n            // Remove all focal points that aren't 'ui'\n            newState = newState.filter(fp => fp.get('type') === 'ui');\n            // Remove all focal points that are kinect\n            // newState = newState.filter(fp => !fp.get('name') || fp.get('name').indexOf(\"k\") !== 0);\n\n            if (data && data.focal_points) {\n                let focalPoints = data.focal_points;\n\n                if (focalPoints.length > 0) {\n                    focalPoints.forEach(fp => {\n                        const name = fp.name;\n                        const pos = fp.pos;\n                        const ttl = fp.ttl;\n                        const type = fp.fp_type || \"kinect\";\n                        let focalIndex;\n\n                        try {\n                            focalIndex = findFocalIndexByName(newState, name);\n                        } catch (e) {\n                            console.log('Error: focalPoint processWebsocketData. e: ', e)\n                        };\n\n                        if (focalIndex >= 0) {\n                            newState = newState.setIn([focalIndex, \"pos\"], fromJS(pos));\n                            newState = newState.setIn([focalIndex, \"ttl\"], fromJS(ttl));\n                        } else {\n                            newState = newState.push(createNewFocalPoint({ name, pos, type }, state));\n                        }\n                    });\n\n                    return newState;\n                }\n                //  else {\n                //     //console.log(\"focal points, no payload\", data);\n                // }\n            }\n            return newState;\n            break;\n        case \"focalpoint-positioned\":\n            // headName = data.headName;\n            // rotation = data.rotation;\n            // // position = data.position;\n\n            // focalPointIndex = state.findIndex(focalPoint => {\n\n            //     heads = focalPoint.get(\"heads\");\n            //     if (heads && heads.size > 0) {\n            //         headIndex = heads.findIndex((head, i) => {\n            //             return head.get(\"name\") === headName;\n            //         })\n            //     }\n\n            //     if (headIndex >= 0) {\n\n            //         return true;\n            //     } else {\n            //         headIndex = undefined;\n            //         return false;\n            //     }\n            // })\n\n            // if (focalPointIndex >= 0 && headIndex >= 0) {\n            //     // Convert position (0-200) to degrees (0 - 360)\n            //     // rotation = 360 * position / 200;\n\n            //     newState = state.setIn([focalPointIndex, \"heads\", headIndex, \"rot\"], rotation);\n\n            //     // If the head isn't manually moving, do not move the virtual rotation of the head.\n            //     if (!newState.getIn([focalPointIndex, \"isManualHeadMove\"])) {\n            //         return newState.setIn([focalPointIndex, \"heads\", headIndex, \"vRot\"], rotation);\n            //     } else {\n            //         // Ignore the messages if head is manually being rotated within the UI\n            //         return newState;\n            //     }\n            // }\n\n            break;\n        default:\n            break;\n    }\n\n    return state;\n}\n\nconst focalPoints = (state = fromJS([]), action) => {\n    window.c_sn_str = { state, action };\n    let newState = state;\n    let tempFocalPointIndex;\n\n    switch (action.type) {\n        // Websocket message\n        // NOTE: This should probably be handles by the websocket middleware... which then sends specific dispatch (window.c_ )\n        case WEBSOCKET_MESSAGE:\n            let totalPayload;\n            try {\n                totalPayload = JSON.parse(action.payload.data);\n\n                // For each payload data \n                totalPayload.forEach(payloadDataChunk => {\n                    newState = processWebsocketData(newState, payloadDataChunk);\n                });\n\n                return newState;\n            } catch (e) { }\n\n            return state;\n        case 'FOCALPOINT_ADD':\n            return state.push(createNewFocalPoint({ type: 'ui', name: `fp${state.size}` }, state));\n        case 'FOCALPOINT_SETIN_FIELDS_BY_INDEX':\n            // return state.setIn([action.index,\"pos\"], fromJS(action.pos));\n            let setInLocation = [action.index];\n            setInLocation = setInLocation.concat(action.fieldNames);\n            return state.setIn(setInLocation, fromJS(action.value));\n        case 'FOCALPOINT_SET_FIELD_BY_INDEX':\n            return state.setIn([action.index, action.fieldName], fromJS(action.value));\n        case 'FOCALPOINT_MOVE_BY_INDEX':\n            return state.setIn([action.index, \"pos\"], fromJS(action.pos));\n        case 'FOCALPOINT_ROTATE_BY_INDEX':\n            return state.setIn([action.index, \"rot\"], fromJS(action.rot));\n        case 'FOCALPOINT_REMOVE_BY_INDEX':\n            return state.remove(action.index);\n\n        case 'FOCALPOINT_SET_SCENE':\n            if (action.sceneData && action.sceneData.focalPoints && action.sceneData.focalPoints.length > 0) {\n                return fromJS(action.sceneData.focalPoints);\n            }\n            return state;\n\n        // // Active or not\n        // case 'FOCALPOINT_SET_IS_ACTIVE':\n        //     tempFocalPointIndex = getFocalPointIndexFromHeadName(state, action.headName);\n\n        //     if (tempFocalPointIndex >= 0 ) {\n        //         return state.setIn([tempFocalPointIndex, \"isActive\"], true);\n        //     } else {\n        //         return state;\n        //     }\n        // case 'FOCALPOINT_SET_IS_NOT_ACTIVE':\n        //     tempFocalPointIndex = getFocalPointIndexFromHeadName(state, action.headName);\n\n        //     if (tempFocalPointIndex >= 0 ) {\n        //         return state.setIn([tempFocalPointIndex, \"isActive\"], false);\n        //     } else {\n        //         return state;\n        //     }\n\n        // Default\n        default:\n            return state;\n    }\n}\n\nexport default focalPoints","import { combineReducers } from 'redux';\nimport menu from './menu';\nimport stands from './stands';\nimport focalPoints from './focalPoints';\nimport motionLines from './motionLines';\nimport kinectFocalPoints from './kinectFocalPoints';\n\nexport default combineReducers({\n    menu,\n    stands,\n    focalPoints,\n    motionLines,\n    kinectFocalPoints\n})","import { fromJS } from \"immutable\";\n\nconst initialState = {\n    // e.g. { \"kinect-01\" : [ {x: _, y: _}, bodyIndex: 2  }}\n\n    // // NOT THIS OLD ONE: e.g. { \"kinect-01\" : { focalPoints, pos: {x: _, y: _}, rot: -90 }}\n}\n\nconsole.log(\"**NEED TO SETUP A TIMEOUT IF WE GET NO MESSAGE FROM KINECT**\");\n\nconst kinect = (state = fromJS(initialState), action) => {\n    window.c_KK123 = { state, action };\n    let newState = state; \n    // let tempFocalPointIndex; \n\n    switch (action.type) {\n        // Websocket message\n        // NOTE: This should probably be handles by the websocket middleware... which then sends specific dispatch (window.c_ )\n        // case WEBSOCKET_MESSAGE:\n        //     let totalPayload;\n        //     try {\n        //         totalPayload = JSON.parse(action.payload.data);\n\n        //         // For each payload data \n        //         totalPayload.forEach(payloadDataChunk => {\n        //             newState = processWebsocketData(newState, payloadDataChunk);\n        //         });\n\n        //         return newState;\n        //     } catch (e) { }\n\n        //     return state;\n\n        case 'KINECT_SET_FOCAL_POINTS':\n            window.c_s89 = {state, action};\n            return state.set(action.kinectName, fromJS(action.focalPoints));\n        case 'KINECT_CLEAR_FOCAL_POINTS':\n            return state.set(action.kinectName, fromJS([]));\n            // return state.setIn([action.kinectName, \"focalPoints\"], fromJS(action.focalPoints));\n        // case 'KINECT_SET_SCENE':\n        //     console.log(\"setting kinect scene\");\n        //     window.c_aa4 = action;\n        //     try {\n                \n        //         let kinects = action.sceneData.kinects;\n\n        //         kinects.forEach(kinect => {\n        //             newState = newState.setIn([\"kinects\",kinect.name], fromJS(kinect))\n        //         });\n\n        //         return newState;\n        //     } catch (e) {\n        //         console.log(`error with KINECT_SET_SCENE`, e);\n        //     }\n        // // push(createNewFocalPoint({}, state));\n        // // case 'KINECT_SETIN_FIELDS_BY_INDEX':\n        // //     // return state.setIn([action.index,\"pos\"], fromJS(action.pos));\n        // //     let setInLocation = [action.index];\n        // //     setInLocation = setInLocation.concat(action.fieldNames);\n        // //     return state.setIn(setInLocation, fromJS(action.value));\n        // // case 'KINECT_SET_FIELD_BY_INDEX':\n        // //     return state.setIn([action.index, action.fieldName], fromJS(action.value));\n        // case 'KINECT_MOVE_BY_NAME':\n        //     return state.setIn([action.kinectName, \"pos\"], fromJS(action.pos));\n        // case 'KINECT_ROTATE_BY_NAME':\n        //     return state.setIn([action.kinectName, \"rot\"], fromJS(action.rot));\n        // case 'KINECT_REMOVE_BY_NAME':\n        //     return state.remove(action.kinectName);\n\n        // case 'KINECT_SET_SCENE':\n        //     if (action.sceneData && action.sceneData.focalPoints && action.sceneData.focalPoints.length > 0) {\n        //         return fromJS(action.sceneData.focalPoints);\n        //     }\n        //     return state;\n\n        // // // Active or not\n        // // case 'KINECT_SET_IS_ACTIVE':\n        // //     tempFocalPointIndex = getFocalPointIndexFromHeadName(state, action.headName);\n\n        // //     if (tempFocalPointIndex >= 0 ) {\n        // //         return state.setIn([tempFocalPointIndex, \"isActive\"], true);\n        // //     } else {\n        // //         return state;\n        // //     }\n        // // case 'KINECT_SET_IS_NOT_ACTIVE':\n        // //     tempFocalPointIndex = getFocalPointIndexFromHeadName(state, action.headName);\n\n        // //     if (tempFocalPointIndex >= 0 ) {\n        // //         return state.setIn([tempFocalPointIndex, \"isActive\"], false);\n        // //     } else {\n        // //         return state;\n        // //     }\n\n        // Default\n        default:\n            return state;\n    }\n}\n\nexport default kinect","import {fromJS} from \"immutable\";\nimport { setCookie, getCookie, getCookieAsBoolean } from '../helpers';\nimport { WEBSOCKET_CONNECTING, WEBSOCKET_OPEN, WEBSOCKET_CLOSED } from \"@giantmachines/redux-websocket\";\n// NOTE: WEBSOCKET_MESSAGE is dealt within ../middleware/index.js\n// ... which in turn handles the message and dispatches a specific type of dispatch message\n\nconst scale = getCookie(\"menu-scale\");\nconst translateX = getCookie(\"menu-translateX\");\nconst translateY = getCookie(\"menu-translateY\");\n\n// window.c_34 = {setCookie, getCookie};\n\n\nconst initialState = {\n    selectedStandIndex : undefined,\n    selectedCameraIndex : undefined,\n    selectedHeadIndex : undefined,\n    selectedFocalPointIndex : undefined,\n    isRotatesHidden : getCookieAsBoolean(\"menu-isRotatesHidden\") || 0,\n    isStandRotatesHidden : getCookieAsBoolean(\"menu-isStandRotatesHidden\") || 0,\n    isHeadRotatesHidden : getCookieAsBoolean(\"menu-isHeadRotatesHidden\") || 0,\n    isCameraRotatesHidden : getCookieAsBoolean(\"menu-isCameraRotatesHidden\") || 0,\n    isForceShowStandRotatesOnSelect : getCookieAsBoolean(\"menu-isForceShowStandRotatesOnSelect\") || 0,\n    isForceShowHeadRotatesOnSelect : getCookieAsBoolean(\"menu-isForceShowHeadRotatesOnSelect\") || 0,\n    isForceShowCameraRotatesOnSelect : getCookieAsBoolean(\"menu-isForceShowCameraRotatesOnSelect\") || 0,\n    scale: scale !== null ? scale : 1,\n    translate: {\n        x: translateX !== null ? translateX : 0,\n        y: translateY !== null ? translateY : 0\n    },\n    websocketStatus: undefined\n}\n\nconst stands = (state = fromJS(initialState), action) => {\n    let newState = state;\n\n    switch (action.type) {\n        case 'MENU_DESELECT_STAND_AND_ALL':\n            newState = newState.set(\"selectedStandIndex\", undefined);\n            newState = newState.set(\"selectedHeadIndex\", undefined);\n            return newState.set(\"selectedCameraIndex\", undefined);\n        case 'MENU_SELECT_STAND':\n            newState = newState.set(\"selectedStandIndex\", parseInt(action.index));\n            newState = newState.set(\"selectedHeadIndex\", 0);\n            return newState.set(\"selectedCameraIndex\", 0);\n        case 'MENU_SELECT_CAMERA':\n            newState = state.set(\"selectedCameraIndex\", parseInt(action.cameraIndex));\n\n            // If standIndex is defined set that as well\n            if (action.standIndex) {\n                newState = newState.set(\"selectedStandIndex\", parseInt(action.standIndex));\n            }\n            return newState;\n        case 'MENU_SELECT_HEAD':\n            newState = state.set(\"selectedHeadIndex\", parseInt(action.headIndex));\n\n            // If standIndex is defined set that as well\n            if (action.standIndex) {\n                newState = newState.set(\"selectedStandIndex\", parseInt(action.standIndex));\n            }\n            return newState;\n        case 'MENU_HIDE_ALL_ROTATES':\n            setCookie(\"menu-isStandRotatesHidden\", true);\n            setCookie(\"menu-isHeadRotatesHidden\", true);\n            setCookie(\"menu-isCameraRotatesHidden\", true);\n            newState = state.set(\"isStandRotatesHidden\", true);\n            newState = newState.set(\"isHeadRotatesHidden\", true);\n            return newState.set(\"isCameraRotatesHidden\", true);\n        case 'MENU_SHOW_ALL_ROTATES':\n            setCookie(\"menu-isStandRotatesHidden\", false);\n            setCookie(\"menu-isHeadRotatesHidden\", false);\n            setCookie(\"menu-isCameraRotatesHidden\", false);\n            newState = state.set(\"isStandRotatesHidden\", false);\n            newState = newState.set(\"isHeadRotatesHidden\", false);\n            return newState.set(\"isCameraRotatesHidden\", false);\n        case 'MENU_TOGGLE_HIDE_ROTATES':\n            if (action.rotateType === \"stand\") {\n                setCookie(\"menu-isStandRotatesHidden\", !state.get(\"isStandRotatesHidden\"));\n                return state.set(\"isStandRotatesHidden\", !state.get(\"isStandRotatesHidden\"));\n            } else if (action.rotateType === \"head\") {\n                setCookie(\"menu-isHeadRotatesHidden\", !state.get(\"isHeadRotatesHidden\"));\n                return state.set(\"isHeadRotatesHidden\", !state.get(\"isHeadRotatesHidden\"));\n            } else if (action.rotateType === \"camera\") {\n                setCookie(\"menu-isCameraRotatesHidden\", !state.get(\"isCameraRotatesHidden\"));\n                return state.set(\"isCameraRotatesHidden\", !state.get(\"isCameraRotatesHidden\"));\n            }\n            break;\n        case 'MENU_ENABLE_FORCE_SHOW_ALL_ROTATES_ON_SELECT':\n            setCookie(\"menu-isForceShowStandRotatesOnSelect\", true);\n            setCookie(\"menu-isForceShowHeadRotatesOnSelect\", true);\n            setCookie(\"menu-isForceShowCameraRotatesOnSelect\", true);\n            newState = state.set(\"isForceShowStandRotatesOnSelect\", true);\n            newState = newState.set(\"isForceShowHeadRotatesOnSelect\", true);\n            return newState.set(\"isForceShowCameraRotatesOnSelect\", true);\n        case 'MENU_DISABLE_FORCE_SHOW_ALL_ROTATES_ON_SELECT':\n            setCookie(\"menu-isForceShowStandRotatesOnSelect\", false);\n            setCookie(\"menu-isForceShowHeadRotatesOnSelect\", false);\n            setCookie(\"menu-isForceShowCameraRotatesOnSelect\", false);\n            newState = state.set(\"isForceShowStandRotatesOnSelect\", false);\n            newState = newState.set(\"isForceShowHeadRotatesOnSelect\", false);\n            return newState.set(\"isForceShowCameraRotatesOnSelect\", false);           \n        case 'MENU_TOGGLE_FORCE_SHOW_ROTATES_ON_SELECT':\n            if (action.rotateType === \"stand\") {\n                setCookie(\"menu-isForceShowStandRotatesOnSelect\", !state.get(\"isForceShowStandRotatesOnSelect\"));\n                return state.set(\"isForceShowStandRotatesOnSelect\", !state.get(\"isForceShowStandRotatesOnSelect\"));\n            } else if (action.rotateType === \"head\") {\n                setCookie(\"menu-isForceShowHeadRotatesOnSelect\", !state.get(\"isForceShowHeadRotatesOnSelect\"));\n                return state.set(\"isForceShowHeadRotatesOnSelect\", !state.get(\"isForceShowHeadRotatesOnSelect\"));\n            } else if (action.rotateType === \"camera\") {\n                setCookie(\"menu-isForceShowCameraRotatesOnSelect\", !state.get(\"isForceShowCameraRotatesOnSelect\"));\n                return state.set(\"isForceShowCameraRotatesOnSelect\", !state.get(\"isForceShowCameraRotatesOnSelect\"));\n            }\n            break;\n        case 'MENU_SET_SCALE':\n            const scaleVal = Math.max(1, action.scale);\n            setCookie(\"menu-scale\", scaleVal);\n            return state.set(\"scale\", scaleVal);\n        case 'MENU_SET_TRANSLATE_X':\n            setCookie(\"menu-translateX\", action.x);\n            return state.setIn([\"translate\",\"x\"], action.x);\n        case 'MENU_SET_TRANSLATE_Y':\n            setCookie(\"menu-translateY\", action.y);\n            return state.setIn([\"translate\",\"y\"], action.y);\n        // case 'MENU_SET_TRANSLATE':\n        //     return state.setIn([\"translate\",\"y\"], action.y);\n        case WEBSOCKET_CONNECTING:\n            return state.set(\"websocketStatus\", \"connecting\");\n        case WEBSOCKET_OPEN:\n            return state.set(\"websocketStatus\", \"open\");\n        case WEBSOCKET_CLOSED:\n            return state.set(\"websocketStatus\", undefined);\n        default:\n            return state;\n    }\n}\n\nexport default stands","import {fromJS} from \"immutable\";\n\n// lines have a lineId and value of { shape: \"draw\", coords: [1,2,3,4]}\nconst initialState = {\n    lines: {}\n    // lines: {\n    //     \"temp123\" : {shape: \"line\", coords: [-0.75, 0, 0.906222523654036, -4.717724764347858]}\n    // },\n}\n\nconst stands = (state = fromJS(initialState), action) => {\n    switch (action.type) {\n        case 'MOTIONLINES_ADD': \n            return state.setIn([\"lines\",action.lineId], fromJS({shape: action.shape, coords: action.coords}));\n        case 'MOTIONLINES_REMOVE': \n            return state.removeIn([\"lines\",action.lineId]);\n        default:\n            return state;\n    }\n}\n\nexport default stands","import { fromJS } from \"immutable\";\n// https://www.npmjs.com/package/@giantmachines/redux-websocket\nimport { WEBSOCKET_MESSAGE } from \"@giantmachines/redux-websocket\";\n// import { WEBSOCKET_CONNECTING, WEBSOCKET_OPEN, WEBSOCKET_CLOSED, WEBSOCKET_MESSAGE } from \"@giantmachines/redux-websocket\";\n\nconst defaultCamera =\n{\n    \"name\": \"camera0\",\n    \"pos\": {\n        \"x\": 0.1,\n        \"y\": 0\n    },\n    \"rot\": 0,\n    \"fov\": 60,\n    \"description\": \"Raspberry Pi PiNoir Camera V2 Video Module\"\n};\n\nconst defaultHead = {\n    \"name\": \"head0\",\n    \"pos\": {\n        \"x\": 0,\n        \"y\": 0\n    },\n    \"rot\": 0,\n    \"vRot\": 0 // Virtual rotation (i.e. the manual rotation of the head)\n};\n\nconst createNewCamera = ({\n    name = undefined,\n}, camerasArray) => {\n\n    let camera = Object.assign({}, defaultCamera);\n    camera.name = getNewName('camera', camerasArray);\n\n    return camera;\n}\n\n// Returns a new immutable object for a new stand\nconst createNewStand = ({\n    name = undefined,\n    pos = { x: 0, y: 0 },\n    rot = 0,\n    cameras = [defaultCamera],\n    kinects = [],\n    heads = [defaultHead],\n    popupInfo = undefined,\n    isActive = false,\n    isManualHeadMove = false // When the head is manually being rotated via ui\n} = {}, state) => {\n\n    if (!name) {\n        name = getNewName(\"stand\", state.toJS());\n    }\n\n    return fromJS({\n        name,\n        pos,\n        rot,\n        cameras,\n        kinects,\n        heads,\n        popupInfo,\n        isActive,\n        isManualHeadMove\n    })\n\n    // return {\n    //     \"name\": \"stand0\",\n    //     \"pos\": {\n    //         \"x\": 0,//-1.5,\n    //         \"y\": 0\n    //     },\n    //     \"rot\": 0 //300,\n    //     \"cameras\": [\n    //         {\n    //             \"name\": \"camera0\",\n    //             \"pos\": {\n    //                 \"x\": 0.1,\n    //                 \"y\": 0\n    //             },\n    //             \"rot\": 0,\n    //             \"fov\": 60,\n    //             \"description\": \"Raspberry Pi PiNoir Camera V2 Video Module\"\n    //         }\n    //     ],\n    //     \"heads\": [\n    //         {\n    //             \"name\": \"head0\",\n    //             \"pos\": {\n    //                 \"x\": 0,\n    //                 \"y\": 0\n    //             },\n    //             \"rot\": 0\n    //         }\n    //     ]\n    // }\n}\n\nconst getNewName = (prefix, arrayObj) => {\n    let maxStandNum = Math.max.apply(null, arrayObj.map(st => st.name).filter(d => d.indexOf(prefix) === 0).map(d => parseInt(d.replace(prefix, \"\"))).filter(d => !isNaN(d)))\n\n    if (maxStandNum >= 0) {\n        return `${prefix}${maxStandNum + 1}`;\n    } else {\n        return `${prefix}0`;\n    }\n}\n\nconst getStandIndexFromHeadName = (state, headName) => {\n    var temp = state.findIndex(stand => stand.getIn([\"heads\", 0, \"name\"]) === headName)\n    return temp;\n};\n\nfunction rotateHeadByHeadName({ state, headName, rotation }) {\n    let heads, standIndex, headIndex;\n    let newState = state;\n\n    standIndex = state.findIndex(stand => {\n        heads = stand.get(\"heads\");\n\n        if (heads && heads.size > 0) {\n            headIndex = heads.findIndex((head, i) => {\n                return head.get(\"name\") === headName;\n            })\n        }\n\n        if (headIndex >= 0) {\n            return true;\n        } else {\n            headIndex = undefined;\n            return false;\n        }\n    })\n\n    if (standIndex >= 0 && headIndex >= 0) {\n        // Convert position (0-200) to degrees (0 - 360)\n        // rotation = 360 * position / 200;\n\n        newState = state.setIn([standIndex, \"heads\", headIndex, \"rot\"], rotation);\n\n        // If the head isn't manually moving, do not move the virtual rotation of the head.\n        if (!newState.getIn([standIndex, \"isManualHeadMove\"])) {\n            return newState.setIn([standIndex, \"heads\", headIndex, \"vRot\"], rotation);\n        } else {\n            // Ignore the messages if head is manually being rotated within the UI\n            return newState;\n        }\n    }\n    return state;\n}\n\nconst processWebsocketData = (state, payloadDataChunk) => {\n    let { type, data } = payloadDataChunk;\n    let headName, heads, standIndex, headIndex, rotation;\n    // let newState = state;\n    // let headName, position, heads, standIndex, cameraIndex, headIndex, rotation;\n\n    switch (type) {\n        case \"head-positioned\":\n            headName = data.headName;\n            rotation = data.rotation;\n\n            return rotateHeadByHeadName({ state, headName, rotation })\n            break;\n        default:\n            break;\n    }\n\n    return state;\n}\n\nconst stands = (state = fromJS([]), action) => {\n    \n    let newState;\n    let tempStandIndex;\n\n    switch (action.type) {\n        // Websocket message\n        // NOTE: This should probably be handles by the websocket middleware... which then sends specific dispatch (window.c_ )\n        case WEBSOCKET_MESSAGE:\n            newState = state;\n            let totalPayload;\n            try {\n                totalPayload = JSON.parse(action.payload.data);\n\n                // For each payload data \n                totalPayload.forEach(payloadDataChunk => {\n                    newState = processWebsocketData(newState, payloadDataChunk);\n                });\n                \n                return newState;\n            } catch (e) {\n                return state;\n            }\n        case 'STAND_ADD':\n            return state.push(createNewStand({}, state));\n        case 'STAND_SETIN_FIELDS_BY_INDEX':\n            // return state.setIn([action.index,\"pos\"], fromJS(action.pos));\n            let setInLocation = [action.index];\n            setInLocation = setInLocation.concat(action.fieldNames);\n            return state.setIn(setInLocation, fromJS(action.value));\n        case 'STAND_SET_FIELD_BY_INDEX':\n            return state.setIn([action.index, action.fieldName], fromJS(action.value));\n        case 'STAND_MOVE_BY_INDEX':\n            return state.setIn([action.index, \"pos\"], fromJS(action.pos));\n        case 'STAND_ROTATE_BY_INDEX':\n            return state.setIn([action.index, \"rot\"], fromJS(action.rot));\n        case 'STAND_REMOVE_BY_INDEX':\n            return state.remove(action.index);\n\n        // Head\n        case 'HEAD_MOVE_BY_INDEX':\n            return state.setIn([action.standIndex, \"heads\", action.headIndex, \"pos\"], fromJS(action.pos));\n        case 'HEAD_ROTATE_BY_HEADNAME':\n            return rotateHeadByHeadName({ state, headName: action.headName, rotation: action.rotation });\n        // console.log('HEAD_ROTATE_BY_HEADNAME');\n        // // Get stand and head index with the headname\n        // let standIndex = getStandIndexFromHeadName(state, action.headName);\n        // let headIndex = 0;\n\n        // return newState.setIn([standIndex, \"heads\", headIndex, \"vRot\"], fromJS(action.rot));\n        // // newState = newState.setIn([standIndex, \"heads\", headIndex, \"vRot\"], fromJS(action.rot));\n        // // return newState.setIn([standIndex, \"heads\", headIndex, \"rot\"], fromJS(action.rot));\n        case 'HEAD_ROTATE_BY_INDEX':\n            return state.setIn([action.standIndex, \"heads\", action.headIndex, \"vRot\"], fromJS(action.rot));\n        // newState = state.setIn([action.standIndex, \"heads\", action.headIndex, \"rot\"], fromJS(action.rot));\n        // return newState.setIn([action.standIndex, \"heads\", action.headIndex, \"rot\"], fromJS(action.rot));\n        case 'HEAD_ROTATE_START_BY_INDEX':\n            return state.setIn([action.standIndex, \"isManualHeadMove\"], true);\n        case 'HEAD_ROTATE_STOP_BY_INDEX':\n            return state.setIn([action.standIndex, \"isManualHeadMove\"], false);\n\n        // Camera\n        case 'CAMERA_MOVE_BY_INDEX':\n            // window.c_CAM342 = { arr: [action.standIndex,\"cameras\",action.cameraIndex,\"pos\"], pos: fromJS(action.pos)};\n            return state.setIn([action.standIndex, \"cameras\", action.cameraIndex, \"pos\"], fromJS(action.pos));\n        case 'CAMERA_ROTATE_BY_INDEX':\n            return state.setIn([action.standIndex, \"cameras\", action.cameraIndex, \"rot\"], fromJS(action.rot));\n        case 'CAMERA_ADD_NEW':\n            let camerasList = state.getIn([action.standIndex, \"cameras\"]).toJS();\n            return state.updateIn([action.standIndex, \"cameras\"], cameras => cameras.push(fromJS(createNewCamera({}, camerasList))))\n        case 'CAMERA_REMOVE_BY_INDEX':\n            console.log(\"rem\", action.standIndex, action.cameraIndex);\n            return state.removeIn([action.standIndex, \"cameras\", action.cameraIndex]);\n\n        // Kinect\n        case 'KINECT_MOVE_BY_INDEX':\n            return state.setIn([action.standIndex, \"kinects\", action.kinectIndex, \"pos\"], fromJS(action.pos));\n        case 'KINECT_ROTATE_BY_INDEX':\n            return state.setIn([action.standIndex, \"kinects\", action.kinectIndex, \"rot\"], fromJS(action.rot));\n\n        // Scene\n        case 'STAND_SET_SCENE':\n            if (action.sceneData && action.sceneData.stands && action.sceneData.stands.length > 0) {\n                return fromJS(action.sceneData.stands);\n            }\n            return state;\n\n        // Active or not\n        case 'STAND_SET_IS_ACTIVE':\n            tempStandIndex = getStandIndexFromHeadName(state, action.headName);\n\n            if (tempStandIndex >= 0) {\n                return state.setIn([tempStandIndex, \"isActive\"], true);\n            } else {\n                return state;\n            }\n        case 'STAND_SET_IS_NOT_ACTIVE':\n            tempStandIndex = getStandIndexFromHeadName(state, action.headName);\n\n            if (tempStandIndex >= 0) {\n                return state.setIn([tempStandIndex, \"isActive\"], false);\n            } else {\n                return state;\n            }\n\n        // Popup\n        case 'POPUP_INFO_MOVE_BY_INDEX':\n            return state; //state.setIn([\"popups\", action.popupId], {type: action.popupType});\n\n        case 'POPUP_INFO_ADD_NEW':\n            return state.setIn([action.standIndex, \"popupInfo\"], fromJS({ pos: action.pos }));\n\n        case 'POPUP_INFO_REMOVE':\n            return state.removeIn([action.standIndex, \"popupInfo\"]);\n\n        case 'POPUP_INFO_REMOVE_ALL':\n            newState = state;\n            for (let i = 0; i < state.size; i++) {\n                newState = newState.removeIn([i, \"popupInfo\"]);\n            }\n            return newState;\n\n        // Default\n        default:\n            return state;\n    }\n}\n\nexport default stands","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AACA;AAMA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;AC1CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AAEA;AACA;AACA;AADA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AAAA;AACA;AADA;AAAA;AAIA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AAAA;AACA;AACA;AAFA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAMA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AAAA;AACA;AADA;AAAA;AAIA;AAAA;AACA;AADA;AAAA;AAIA;AAAA;AACA;AADA;AAAA;AAIA;AAAA;AACA;AADA;AAAA;AAIA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAMA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAOA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAOA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAKA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAMA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AAKA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAOA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAOA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAMA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAMA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AACA;AAOA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAMA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAOA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAKA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AACA;AAMA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAOA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAOA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AACA;AAMA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAOA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AASA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AAAA;AACA;AADA;AAAA;AACA;AAKA;AAAA;AACA;AACA;AAFA;AAAA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAMA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AAAA;AACA;AACA;AAFA;AAAA;AAKA;AAAA;AACA;AACA;AAFA;AAAA;AAOA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAEA;AAAA;AAEA;AACA;AACA;AAFA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1YA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAJA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAlBA;AAmBA;AACA;;;AACA;AACA;AACA;AACA;;;AAEA;AACA;AADA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;;;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AACA;AAEA;AAIA;AACA;;;AAAA;AACA;AAEA;;;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;;;AAEA;AAEA;;;AAEA;AACA;AACA;AACA;AAEA;AACA;;;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AANA;AAOA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AANA;AAOA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AApLA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AAEA;AAFA;AAHA;AAOA;AACA;;;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAlBA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AAEA;AAFA;AACA;AAMA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AA/BA;AAgCA;AACA;;;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;;;AAEA;AACA;AACA;AADA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;AAEA;AAIA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAKA;AALA;AAOA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AAxMA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AAEA;AAFA;AAKA;AACA;AACA;AACA;AAXA;AAYA;AACA;AACA;;;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAPA;AAQA;AAEA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBA;AA4BA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAEA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;;;AAEA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;;;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAjIA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AA9BA;AA+BA;AACA;AACA;;;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;;;AAEA;AACA;AADA;AAAA;AAKA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;AAEA;AACA;AAEA;;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAGA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AANA;AAOA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAlBA;AA2BA;AACA;AACA;AACA;AACA;;;;AA7RA;AAiSA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAGA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzWA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AAEA;AAFA;AAKA;AACA;AACA;AACA;AAEA;AAbA;AAcA;AACA;;;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AAoBA;AACA;;;AAAA;AACA;AACA;AACA;;;AAEA;AACA;AADA;AAAA;AAGA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AAEA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AANA;AAOA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;AA5HA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AAEA;AAFA;AAHA;AAOA;AACA;;;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAlBA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAJA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAlBA;AAmBA;AACA;;;AACA;AACA;AACA;AACA;;;AAEA;AACA;AADA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;;;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;;;AAEA;AAEA;AAIA;AACA;;;AAAA;AACA;AAEA;;;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;;;AAEA;AAEA;;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AADA;AAGA;AACA;AAGA;AACA;AALA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AANA;AAOA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AANA;AAOA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;;AApNA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AAEA;AAFA;AAHA;AAOA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;;;;AA1BA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AAEA;AAEA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAhCA;AAiCA;AACA;;;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AADA;AAGA;;;AAEA;AACA;AACA;AADA;AAGA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AADA;AAGA;;;AAEA;;;AAIA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAPA;AAQA;AAAA;AAAA;AAAA;AAAA;AAVA;AAaA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAPA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAZA;AA4BA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAPA;AAQA;AAAA;AAAA;AAAA;AAAA;AAVA;AACA;AAaA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AAAA;AADA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAGA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAZA;AAcA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AA1PA;AAAA;AAAA;AAAA;AACA;AA4PA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AArlBA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AACA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AADA;AAHA;AAMA;AACA;;;AACA;AACA;AACA;AADA;AAIA;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AA3CA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AAHA;AAMA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAEA;AAEA;AAEA;AAGA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AA9DA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AAEA;AACA;AAHA;AAMA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAHA;AAHA;AAWA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAlBA;AA0BA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AARA;AAiBA;AACA;AACA;AAxEA;AAwEA;AACA;;;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AADA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;;;AAEA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;;;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAMA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AA/WA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAcA;AACA;;;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAlCA;AAmCA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAxFA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AAEA;AAFA;AACA;AAMA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AA/BA;AAgCA;AACA;;;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;;;AAEA;AACA;AACA;AAEA;AACA;AACA;;;AAEA;AACA;AAEA;AACA;;;AAEA;AACA;AADA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;;;AAEA;AACA;;;AAGA;AACA;AACA;;;AAEA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAEA;AACA;;;AAEA;AAEA;;;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AAEA;AACA;AAAA;AAAA;AAAA;AAFA;AAIA;AAJA;AAMA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AANA;AAOA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AA/PA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AAJA;AAQA;AACA;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AAlBA;AACA;;;;;;;;;;;;;ACNA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAJA;AAMA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAAA;AACA;AAKA;;;;;;;;;;;;ACtCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAFA;AADA;AACA;AAKA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AACA;AACA;AAAA;AAAA;AA1BA;AAAA;AACA;AA4BA;;;;;;;;;;;;ACvCA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAFA;AADA;AACA;AAKA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AACA;AAMA;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AALA;AAAA;AACA;AAOA;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAJA;AAMA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AACA;AAEA;AACA;AACA;AA5BA;AAAA;AACA;AA6BA;;;;;;;;;;;;AC/DA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AALA;AAOA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAHA;AAAA;AACA;AAKA;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;AC5FA;AAAA;AAAA;AAAA;AAAA;AACA;AAwBA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AADA;AACA;AAQA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAjCA;AAAA;AACA;AAmCA;;;;;;;;;;;;ACxEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AALA;AAOA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAJA;AAAA;AACA;AAMA;;;;;;;;;;;;ACtDA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AADA;AAUA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AACA;AAGA;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AAHA;AADA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAhBA;AAAA;AACA;AAiBA;;;;;;;;;;;;AClCA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAFA;AAIA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAHA;AAAA;AACA;AAKA;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AALA;AAOA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAVA;AAUA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAEA;AAIA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AAGA;AAEA;AACA;AAEA;AACA;AAEA;AAIA;AAEA;AACA;AAEA;AACA;AAEA;AAIA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACzKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAIA;AACA;AAEA;AALA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;;;;;;;;;;;;AC7CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAHA;AAWA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AA5BA;AAFA;AAqCA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAzFA;AA2FA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAjHA;AAAA;;;;;;;;;;;;AC/DA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AA5FA;AACA;AA8FA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AA3DA;AA6DA;AACA;AACA;;;;;;;;;;;;AC/NA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;;;;;;;;;;;;ACPA;AAAA;AAAA;AAEA;AAGA;AAHA;AAMA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAhFA;AAkFA;AACA;AACA;;;;;;;;;;;;ACnGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAjBA;AACA;AAmhGA;AAkGA;AACA;AACA;;;;;;;;;;;;ACxIA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AALA;AACA;AAMA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AANA;AAQA;AACA;AACA;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AARA;AAWA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AARA;AACA;AASA;AAEA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAAA;AAAA;AAAA;AARA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAavHA;AAyHA;AACA;AACA;;;;;;;;;;;;AC3SA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AAEA;AAKA;AACA,+BA8BA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;A","sourceRoot":""}