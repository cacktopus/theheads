# Stage 0 : Build the C library
FROM debian:buster@sha256:604db908f7ce93379b1289c0c7ba73b252002087a3fa64fe904b430083ba5f69 AS lib_builder

WORKDIR /foundry

RUN apt-get update -y && apt-get install -y build-essential cmake git

RUN git clone https://github.com/jgarff/rpi_ws281x.git \
  && cd rpi_ws281x \
  && mkdir build \
  && cd build \
  && cmake -D BUILD_SHARED=OFF -D BUILD_TEST=OFF .. \
  && cmake --build . \
  && make install

FROM golang:1.19-buster@sha256:403f38941d7643bc91fad0227ebee6ddd80159b79fc339f6702271a2679a5f11

COPY --from=lib_builder /usr/local/lib/libws2811.a /usr/local/lib/
COPY --from=lib_builder /usr/local/include/ws2811 /usr/local/include/ws2811

WORKDIR /pkg

RUN DEBIAN_FRONTEND=noninteractive apt-get update -y
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y wget dpkg-dev

RUN arch=`dpkg-architecture -q DEB_BUILD_ARCH`; \
    wget https://theheads.sfo2.digitaloceanspaces.com/shared/builds/armhf/opencv_4.5.5-2_${arch}.deb

RUN echo '16a9489dde466c101e65cd0f91d664a83d496392e3b879ade607c2c038041666  opencv_4.5.5-2_armhf.deb' | shasum -c

RUN DEBIAN_FRONTEND=noninteractive apt-get install -y ./opencv_4.5.5-2_*.deb
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y ffmpeg libjpeg62-turbo-dev

WORKDIR /build

COPY go.mod go.sum ./
RUN go mod download

COPY common common

COPY camera camera
COPY cmd/camera ./cmd/camera
RUN go build -o `mktemp -d` ./cmd/camera

COPY leds leds
COPY cmd/leds ./cmd/leds
RUN go build -o `mktemp -d` ./cmd/leds

COPY cmd/lowred ./cmd/lowred
RUN go build -o `mktemp -d` ./cmd/lowred