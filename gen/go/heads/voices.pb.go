// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.18.1
// source: voices.proto

package heads

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PlayIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sound string `protobuf:"bytes,1,opt,name=sound,proto3" json:"sound,omitempty"`
}

func (x *PlayIn) Reset() {
	*x = PlayIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voices_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayIn) ProtoMessage() {}

func (x *PlayIn) ProtoReflect() protoreflect.Message {
	mi := &file_voices_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayIn.ProtoReflect.Descriptor instead.
func (*PlayIn) Descriptor() ([]byte, []int) {
	return file_voices_proto_rawDescGZIP(), []int{0}
}

func (x *PlayIn) GetSound() string {
	if x != nil {
		return x.Sound
	}
	return ""
}

type SetVolumeIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VolDb int32 `protobuf:"varint,1,opt,name=vol_db,json=volDb,proto3" json:"vol_db,omitempty"`
}

func (x *SetVolumeIn) Reset() {
	*x = SetVolumeIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_voices_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetVolumeIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVolumeIn) ProtoMessage() {}

func (x *SetVolumeIn) ProtoReflect() protoreflect.Message {
	mi := &file_voices_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVolumeIn.ProtoReflect.Descriptor instead.
func (*SetVolumeIn) Descriptor() ([]byte, []int) {
	return file_voices_proto_rawDescGZIP(), []int{1}
}

func (x *SetVolumeIn) GetVolDb() int32 {
	if x != nil {
		return x.VolDb
	}
	return 0
}

var File_voices_proto protoreflect.FileDescriptor

var file_voices_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x68, 0x65, 0x61, 0x64, 0x73, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x1e, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6f,
	0x75, 0x6e, 0x64, 0x22, 0x24, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x49, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x5f, 0x64, 0x62, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x76, 0x6f, 0x6c, 0x44, 0x62, 0x32, 0x83, 0x01, 0x0a, 0x06, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x0d, 0x2e, 0x68,
	0x65, 0x61, 0x64, 0x73, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x1a, 0x0c, 0x2e, 0x68, 0x65,
	0x61, 0x64, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x0a, 0x73, 0x65, 0x74,
	0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x12, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x73, 0x2e,
	0x53, 0x65, 0x74, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x49, 0x6e, 0x1a, 0x0c, 0x2e, 0x68, 0x65,
	0x61, 0x64, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x72, 0x61, 0x6e,
	0x64, 0x6f, 0x6d, 0x12, 0x0c, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x0c, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_voices_proto_rawDescOnce sync.Once
	file_voices_proto_rawDescData = file_voices_proto_rawDesc
)

func file_voices_proto_rawDescGZIP() []byte {
	file_voices_proto_rawDescOnce.Do(func() {
		file_voices_proto_rawDescData = protoimpl.X.CompressGZIP(file_voices_proto_rawDescData)
	})
	return file_voices_proto_rawDescData
}

var file_voices_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_voices_proto_goTypes = []interface{}{
	(*PlayIn)(nil),      // 0: heads.PlayIn
	(*SetVolumeIn)(nil), // 1: heads.SetVolumeIn
	(*Empty)(nil),       // 2: heads.Empty
}
var file_voices_proto_depIdxs = []int32{
	0, // 0: heads.voices.play:input_type -> heads.PlayIn
	1, // 1: heads.voices.set_volume:input_type -> heads.SetVolumeIn
	2, // 2: heads.voices.random:input_type -> heads.Empty
	2, // 3: heads.voices.play:output_type -> heads.Empty
	2, // 4: heads.voices.set_volume:output_type -> heads.Empty
	2, // 5: heads.voices.random:output_type -> heads.Empty
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_voices_proto_init() }
func file_voices_proto_init() {
	if File_voices_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_voices_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_voices_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetVolumeIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_voices_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_voices_proto_goTypes,
		DependencyIndexes: file_voices_proto_depIdxs,
		MessageInfos:      file_voices_proto_msgTypes,
	}.Build()
	File_voices_proto = out.File
	file_voices_proto_rawDesc = nil
	file_voices_proto_goTypes = nil
	file_voices_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// VoicesClient is the client API for Voices service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VoicesClient interface {
	Play(ctx context.Context, in *PlayIn, opts ...grpc.CallOption) (*Empty, error)
	SetVolume(ctx context.Context, in *SetVolumeIn, opts ...grpc.CallOption) (*Empty, error)
	Random(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
}

type voicesClient struct {
	cc grpc.ClientConnInterface
}

func NewVoicesClient(cc grpc.ClientConnInterface) VoicesClient {
	return &voicesClient{cc}
}

func (c *voicesClient) Play(ctx context.Context, in *PlayIn, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/heads.voices/play", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *voicesClient) SetVolume(ctx context.Context, in *SetVolumeIn, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/heads.voices/set_volume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *voicesClient) Random(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/heads.voices/random", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VoicesServer is the server API for Voices service.
type VoicesServer interface {
	Play(context.Context, *PlayIn) (*Empty, error)
	SetVolume(context.Context, *SetVolumeIn) (*Empty, error)
	Random(context.Context, *Empty) (*Empty, error)
}

// UnimplementedVoicesServer can be embedded to have forward compatible implementations.
type UnimplementedVoicesServer struct {
}

func (*UnimplementedVoicesServer) Play(context.Context, *PlayIn) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Play not implemented")
}
func (*UnimplementedVoicesServer) SetVolume(context.Context, *SetVolumeIn) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetVolume not implemented")
}
func (*UnimplementedVoicesServer) Random(context.Context, *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Random not implemented")
}

func RegisterVoicesServer(s *grpc.Server, srv VoicesServer) {
	s.RegisterService(&_Voices_serviceDesc, srv)
}

func _Voices_Play_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlayIn)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VoicesServer).Play(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/heads.voices/Play",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VoicesServer).Play(ctx, req.(*PlayIn))
	}
	return interceptor(ctx, in, info, handler)
}

func _Voices_SetVolume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetVolumeIn)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VoicesServer).SetVolume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/heads.voices/SetVolume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VoicesServer).SetVolume(ctx, req.(*SetVolumeIn))
	}
	return interceptor(ctx, in, info, handler)
}

func _Voices_Random_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VoicesServer).Random(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/heads.voices/Random",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VoicesServer).Random(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Voices_serviceDesc = grpc.ServiceDesc{
	ServiceName: "heads.voices",
	HandlerType: (*VoicesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "play",
			Handler:    _Voices_Play_Handler,
		},
		{
			MethodName: "set_volume",
			Handler:    _Voices_SetVolume_Handler,
		},
		{
			MethodName: "random",
			Handler:    _Voices_Random_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "voices.proto",
}
