# Stage 0 : Build the C library
FROM debian@sha256:87eefc7c15610cca61db5c0fd280911c6a737c0680d807432c0bd80cd0cca39b AS lib_builder

WORKDIR /foundry

RUN apt-get update -y && apt-get install -y build-essential cmake git

RUN git clone https://github.com/jgarff/rpi_ws281x.git \
  && cd rpi_ws281x \
  && mkdir build \
  && cd build \
  && cmake -D BUILD_SHARED=OFF -D BUILD_TEST=OFF .. \
  && cmake --build . \
  && make install

FROM golang:1.17-bullseye@sha256:97f84ead923abac2291c7e885a919fc2f0cd4fe5ac1700f1f7acd5a64c6f200f

COPY --from=lib_builder /usr/local/lib/libws2811.a /usr/local/lib/
COPY --from=lib_builder /usr/local/include/ws2811 /usr/local/include/ws2811

WORKDIR /pkg

RUN DEBIAN_FRONTEND=noninteractive apt-get update -y
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y wget dpkg-dev

RUN arch=`dpkg-architecture -q DEB_BUILD_ARCH` && \
    wget https://theheads.sfo2.digitaloceanspaces.com/shared/builds/arm64/opencv_4.5.5-2_${arch}.deb

RUN DEBIAN_FRONTEND=noninteractive apt-get install -y ./opencv_4.5.5-2_*.deb
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y ffmpeg


WORKDIR /build

COPY go.mod go.sum ./
RUN go mod download

COPY common common

COPY leds leds
COPY cmd/leds ./cmd/leds
RUN go build -o `mktemp -d` ./cmd/leds

COPY cmd/lowred ./cmd/lowred
RUN go build -o `mktemp -d` ./cmd/lowred

COPY camera camera
COPY cmd/camera ./cmd/camera
RUN go build -o `mktemp -d` ./cmd/camera